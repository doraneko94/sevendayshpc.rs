{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1","program":"/home/doraneko94/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nom","/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"stream\"","--cfg","feature=\"verbose-errors\"","-C","metadata=19b24bf954ac465f","-C","extra-filename=-19b24bf954ac465f","--out-dir","/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps","-L","dependency=/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps","--extern","memchr=/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps/libmemchr-3b63e0df03023634.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/doraneko94/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps/libnom-19b24bf954ac465f.rmeta"},"prelude":{"crate_id":{"name":"nom","disambiguator":[13429235008425512893,10749823333738124581]},"crate_root":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src","external_crates":[{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12673765241971086519,1979875191208036248]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16221439354469382097,15565837348772828253]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15613252303691562375,4556165055238676072]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12269617896898487533,65142111397584226]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15862783141653200230,4773813417861420487]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[501305773035659233,3889300012469539238]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9126002216567348836,15610270334556716503]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9479301707518706798,13352731276321566042]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[15203654865662241151,17897348793673631766]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10290502124864695413,7672610073830174493]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14838544226648722576,13006716085524361330]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9246889555580827340,16878203682218964580]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8284748314555817558,4769950866534510046]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14671874173783541769,17969261176539820175]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":15,"id":{"name":"memchr","disambiguator":[4243075812148297788,11132518479348559690]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[15267316118607413981,11294854265685565666]}}],"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":0,"byte_end":24656,"line_start":1,"line_end":491,"column_start":1,"column_end":9}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"ErrorKind, Offset","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"ParseTo, AsChar, Slice, InputLength, FindToken, Compare, CompareResult, InputIter","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Err","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"IResult, Needed","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":23430,"byte_end":23431,"line_start":429,"line_end":429,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":0,"byte_end":24656,"line_start":1,"line_end":491,"column_start":1,"column_end":9},"name":"","qualname":"::","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":90},{"krate":0,"index":281},{"krate":0,"index":316},{"krate":0,"index":380},{"krate":0,"index":409},{"krate":0,"index":419},{"krate":0,"index":428},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":469},{"krate":0,"index":476},{"krate":0,"index":571},{"krate":0,"index":586},{"krate":0,"index":612},{"krate":0,"index":770}],"decl_id":null,"docs":" nom, eating data byte by byte","sig":null,"attributes":[{"value":"! nom, eating data byte by byte","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":34,"byte_end":37,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! nom is a parser combinator library with a focus on safe parsing,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":38,"byte_end":106,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! streaming patterns, and as much as possible zero copy.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":107,"byte_end":165,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":166,"byte_end":169,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! The code is available on [Github](https://github.com/Geal/nom)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":170,"byte_end":236,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":237,"byte_end":240,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! There are a few [guides](http://rust.unhandledexpression.com/nom/home.html) with more details","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":241,"byte_end":338,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"! about [the design of nom](http://rust.unhandledexpression.com/nom/how_nom_macros_work.html),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":339,"byte_end":435,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"! [how to write parsers](http://rust.unhandledexpression.com/nom/making_a_new_parser_from_scratch.html),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":436,"byte_end":542,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"! or the [error management system](http://rust.unhandledexpression.com/nom/error_management.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":543,"byte_end":643,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":644,"byte_end":647,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! If you are upgrading to nom 2.0, please read the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":648,"byte_end":700,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"! [migration document](http://rust.unhandledexpression.com/nom/upgrading_to_nom_2.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":701,"byte_end":791,"line_start":14,"line_end":14,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":792,"byte_end":795,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! See also the [FAQ](http://rust.unhandledexpression.com/nom/FAQ.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":796,"byte_end":869,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":870,"byte_end":873,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # What are parser combinators?","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":874,"byte_end":908,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":909,"byte_end":912,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Parser combinators are a way to build parsers out of small functions. instead of","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":913,"byte_end":997,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"! writing a huge grammar file then generaing code, like you would do with lex and yacc,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":998,"byte_end":1087,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"! you write small functions, to parse small things like a character, or a number,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1088,"byte_end":1171,"line_start":22,"line_end":22,"column_start":1,"column_end":84}},{"value":"! and then you assemble them in larger and larger functions, that can parse larger","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1172,"byte_end":1256,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"! parts of your formats.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1257,"byte_end":1283,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1284,"byte_end":1287,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! You end up with a list of small functions that you can reuse everywhere you need. Each","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1288,"byte_end":1378,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"! of them can be unit tested anf fuzzed separately.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1379,"byte_end":1432,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1433,"byte_end":1436,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! # nom parser design","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1437,"byte_end":1460,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1461,"byte_end":1464,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! All nom parsers follow the same convention. They are all functions with the following signature:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1465,"byte_end":1565,"line_start":31,"line_end":31,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1566,"byte_end":1569,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1570,"byte_end":1583,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"!  fn parser(input: I) -> IResult<I,O> { ... }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1584,"byte_end":1632,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1633,"byte_end":1640,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1641,"byte_end":1644,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! Here is the definition of that `IResult` type:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1645,"byte_end":1695,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1696,"byte_end":1699,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1700,"byte_end":1707,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate nom;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1708,"byte_end":1744,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"! # use nom::{Err,Needed};","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1745,"byte_end":1773,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"! # fn main() {}","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1774,"byte_end":1792,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"! pub enum IResult<I,O,E=u32> {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1793,"byte_end":1826,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"!   Done(I,O),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1827,"byte_end":1843,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"!   Error(Err<E>), // indicates the parser encountered an error. E is a custom error type you can redefine","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1844,"byte_end":1952,"line_start":45,"line_end":45,"column_start":1,"column_end":109}},{"value":"!   /// Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":1953,"byte_end":2062,"line_start":46,"line_end":46,"column_start":1,"column_end":110}},{"value":"!   Incomplete(Needed) // if the parser did not have enough data to decide","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2063,"byte_end":2139,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"! }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2140,"byte_end":2145,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2146,"byte_end":2153,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2154,"byte_end":2157,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! What it means:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2158,"byte_end":2176,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2177,"byte_end":2180,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! * `Done(i,o)` means the parser was successful. `i` is the remaining part of the input, `o` is the correctly parsed value","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2181,"byte_end":2305,"line_start":53,"line_end":53,"column_start":1,"column_end":125}},{"value":"! The remaining part can then be used as input for other parsers called in a sequence","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2306,"byte_end":2393,"line_start":54,"line_end":54,"column_start":1,"column_end":88}},{"value":"! * `Error(e)` indicates the parser encountered an error. The `Err<E>` type is an enum of possible parser errors,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2394,"byte_end":2509,"line_start":55,"line_end":55,"column_start":1,"column_end":116}},{"value":"! that can also contain a custom error that you'd specify, by redefining the `E` error type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2510,"byte_end":2603,"line_start":56,"line_end":56,"column_start":1,"column_end":94}},{"value":"! * `Incomplete(i)` means the parser did not have enough information to decide, and tells you, if possible,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2604,"byte_end":2713,"line_start":57,"line_end":57,"column_start":1,"column_end":110}},{"value":"! how much data it needs","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2714,"byte_end":2740,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2741,"byte_end":2744,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! That way, you could write your own parser that recognizes the letter 'a' like this:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2745,"byte_end":2832,"line_start":60,"line_end":60,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2833,"byte_end":2836,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2837,"byte_end":2844,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! #[macro_use] extern crate nom;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2845,"byte_end":2879,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"! use nom::{IResult,Needed,Err,ErrorKind};","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2880,"byte_end":2924,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"! # fn main() {}","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2925,"byte_end":2943,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2944,"byte_end":2947,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! fn a(input: &[u8]) -> IResult<&[u8], char> {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2948,"byte_end":2996,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"!  // if there is not enough data, we return Ìncomplete","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":2997,"byte_end":3055,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"!  if input.len() == 0 {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3056,"byte_end":3082,"line_start":69,"line_end":69,"column_start":1,"column_end":27}},{"value":"!    IResult::Incomplete(Needed::Size(1))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3083,"byte_end":3126,"line_start":70,"line_end":70,"column_start":1,"column_end":44}},{"value":"!  } else {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3127,"byte_end":3140,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"!    if input[0] == 'a' as u8 {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3141,"byte_end":3174,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"!      // the first part of the returned value is the remaining slice","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3175,"byte_end":3246,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"!      IResult::Done(&input[1..], 'a')","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3247,"byte_end":3287,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"!    } else {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3288,"byte_end":3303,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"!      IResult::Error(error_code!(ErrorKind::Custom(42)))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3304,"byte_end":3363,"line_start":76,"line_end":76,"column_start":1,"column_end":60}},{"value":"!    }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3364,"byte_end":3372,"line_start":77,"line_end":77,"column_start":1,"column_end":9}},{"value":"!  }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3373,"byte_end":3379,"line_start":78,"line_end":78,"column_start":1,"column_end":7}},{"value":"! }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3380,"byte_end":3385,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3386,"byte_end":3393,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3394,"byte_end":3397,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! Writing all the parsers manually, like this, is dangerous, despite Rust's safety features. There","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3398,"byte_end":3498,"line_start":82,"line_end":82,"column_start":1,"column_end":101}},{"value":"! are still a lot of mistakes one can make. That's why nom provides a list of macros to help in","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3499,"byte_end":3596,"line_start":83,"line_end":83,"column_start":1,"column_end":98}},{"value":"! developing parsers. As an example, here is a parser that would recognize the phrase","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3597,"byte_end":3684,"line_start":84,"line_end":84,"column_start":1,"column_end":88}},{"value":"! \"Hello <someone>\" and return the name of the person we hail:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3685,"byte_end":3749,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3750,"byte_end":3753,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3754,"byte_end":3761,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"! #[macro_use] extern crate nom;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3762,"byte_end":3796,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"! use nom::alpha;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3797,"byte_end":3816,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3817,"byte_end":3820,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! named!(hello, preceded!(tag!(\"Hello \"), alpha));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3821,"byte_end":3873,"line_start":91,"line_end":91,"column_start":1,"column_end":53}},{"value":"! # use nom::IResult;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3874,"byte_end":3897,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"! # fn main() {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3898,"byte_end":3915,"line_start":93,"line_end":93,"column_start":1,"column_end":18}},{"value":"! #  assert_eq!(hello(b\"Hello nom.\"), IResult::Done(&b\".\"[..], &b\"nom\"[..]));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3916,"byte_end":3995,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"! # }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":3996,"byte_end":4003,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4004,"byte_end":4011,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4012,"byte_end":4015,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! Let's deconstruct it:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4016,"byte_end":4041,"line_start":98,"line_end":98,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4042,"byte_end":4045,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! * `named!` generates a function with the correct type. Without `named` here, we could write the parser","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4046,"byte_end":4152,"line_start":100,"line_end":100,"column_start":1,"column_end":107}},{"value":"! as follows:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4153,"byte_end":4168,"line_start":101,"line_end":101,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4169,"byte_end":4172,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4173,"byte_end":4180,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"! #[macro_use] extern crate nom;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4181,"byte_end":4215,"line_start":104,"line_end":104,"column_start":1,"column_end":35}},{"value":"! use nom::{alpha,IResult};","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4216,"byte_end":4245,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4246,"byte_end":4249,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! fn hello(input: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4250,"byte_end":4303,"line_start":107,"line_end":107,"column_start":1,"column_end":54}},{"value":"!   preceded!(input,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4304,"byte_end":4326,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"!     tag!(\"Hello \"), alpha)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4327,"byte_end":4357,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4358,"byte_end":4363,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"! # fn main() {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4364,"byte_end":4381,"line_start":111,"line_end":111,"column_start":1,"column_end":18}},{"value":"! #  assert_eq!(hello(b\"Hello nom.\"), IResult::Done(&b\".\"[..], &b\"nom\"[..]));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4382,"byte_end":4461,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"! # }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4462,"byte_end":4469,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4470,"byte_end":4477,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4478,"byte_end":4481,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! By default, `named` makes a function that takes `&[u8]` as input type, and returns `&[u8]` as output type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4482,"byte_end":4592,"line_start":116,"line_end":116,"column_start":1,"column_end":111}},{"value":"! You can override it like this:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4593,"byte_end":4627,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4628,"byte_end":4631,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! * `named!(hello<&str>, ...):` would take `&[u8]` as input type, and return `&str` as output type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4632,"byte_end":4733,"line_start":119,"line_end":119,"column_start":1,"column_end":102}},{"value":"! * `named!(hello<&str, &str>, ...):` would take `&str` as input type, and return `&str` as output type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4734,"byte_end":4840,"line_start":120,"line_end":120,"column_start":1,"column_end":107}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4841,"byte_end":4844,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! *Note* : when we don't use `named!`, we must pass the input as first argument of the top","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4845,"byte_end":4937,"line_start":122,"line_end":122,"column_start":1,"column_end":93}},{"value":"! level combinator (see the line `preceded!(input,` in the preceding code example). This is a macro trick","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":4938,"byte_end":5045,"line_start":123,"line_end":123,"column_start":1,"column_end":108}},{"value":"! in nom to pass input from one combinator to the next by rewriting the call.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5046,"byte_end":5125,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5126,"byte_end":5129,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"! Next part of the parser: `preceded!(tag!(\"Hello \"), alpha))`. Here, `tag!` is a combinator that recognizes","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5130,"byte_end":5240,"line_start":126,"line_end":126,"column_start":1,"column_end":111}},{"value":"! a specific serie of bytes or characters. `alpha` is a function that recognizes alphabetical characters.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5241,"byte_end":5348,"line_start":127,"line_end":127,"column_start":1,"column_end":108}},{"value":"! The `preceded!` combinator assembles them in a more complex parser: if both parsers are successful,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5349,"byte_end":5452,"line_start":128,"line_end":128,"column_start":1,"column_end":104}},{"value":"! it returns the result of the second one (`alpha` is preceded by `tag!`).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5453,"byte_end":5529,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5530,"byte_end":5533,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! *Note* : combinators can assemble other combinators (macros), or parser functions, as long as they follow","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5534,"byte_end":5643,"line_start":131,"line_end":131,"column_start":1,"column_end":110}},{"value":"! the same interface. Here, `alpha` is a parser function already implemented in nom.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5644,"byte_end":5730,"line_start":132,"line_end":132,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5731,"byte_end":5734,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! # List of parsers and combinators","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5735,"byte_end":5772,"line_start":134,"line_end":134,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5773,"byte_end":5776,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! ## Basic elements","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5777,"byte_end":5798,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5799,"byte_end":5802,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! Those are used to recognize the lowest level elements of your grammar, like, \"here is a dot\", or","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5803,"byte_end":5903,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"! \"here is an big endian integer\".","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5904,"byte_end":5940,"line_start":139,"line_end":139,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5941,"byte_end":5944,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! * **char!**: matches one character: `char!('a')` will make a parser that recognizes the letter 'a' (works with non ASCII chars too)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":5945,"byte_end":6080,"line_start":141,"line_end":141,"column_start":1,"column_end":136}},{"value":"! * **eof!**: `eof!()` returns its input if it is at the end of input data","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":6081,"byte_end":6157,"line_start":142,"line_end":142,"column_start":1,"column_end":77}},{"value":"! * **is_a!, is_a_s!**: matches a sequence of any of the characters passed as arguments. `is_a!(\"ab1\")` could recognize `ababa` or `1bb`. `is_a_s!` is a legacy combinator, it does exactly the same thing as `is_a`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":6158,"byte_end":6372,"line_start":143,"line_end":143,"column_start":1,"column_end":215}},{"value":"! * **is_not!, is_not_s!**: matches a sequence of none of the characters passed as arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":6373,"byte_end":6467,"line_start":144,"line_end":144,"column_start":1,"column_end":95}},{"value":"! * **one_of!**: matches one of the provided characters. `one_of!(\"abc\")` could recognize 'a', 'b', or 'c'. It also works with non ASCII characters","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":6468,"byte_end":6617,"line_start":145,"line_end":145,"column_start":1,"column_end":150}},{"value":"! * **none_of!**: matches anything but the provided characters","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":6618,"byte_end":6682,"line_start":146,"line_end":146,"column_start":1,"column_end":65}},{"value":"! * **tag!, tag_s!**: recognizes a specific suite of characters or bytes. `tag!(\"hello\")` matches \"hello\"","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":6683,"byte_end":6790,"line_start":147,"line_end":147,"column_start":1,"column_end":108}},{"value":"! * **tag_no_case!**: recognizes a suite of ASCII characters, case insensitive. `tag_no_case!(\"hello\")` could match \"hello\", \"Hello\" or even \"HeLlO\"","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":6791,"byte_end":6941,"line_start":148,"line_end":148,"column_start":1,"column_end":151}},{"value":"! * **tag_no_case_s!** works like `tag_no_case` but on UTF-8 characters too (uses `&str` as input). Note that case insensitive comparison is not well defined for unicode, and that you might have bad surprises. Also, this combinator allocates a new string for the comparison. Ponder for a bit before using this combinator","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":6942,"byte_end":7264,"line_start":149,"line_end":149,"column_start":1,"column_end":323}},{"value":"! * **take!, take_s!**: takes a specific number of bytes or characters. `take!(5)` would return \"hello\" from the string \"hello world\"","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":7265,"byte_end":7400,"line_start":150,"line_end":150,"column_start":1,"column_end":136}},{"value":"! * **take_str!**: same as `take!` but returning a `&str`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":7401,"byte_end":7460,"line_start":151,"line_end":151,"column_start":1,"column_end":60}},{"value":"! * **take_till!, take_till_s!**: returns the longest list of bytes until the provided function succeeds. `take_till!(is_alphabetic)` with input \"123abc\" would return \"123\"","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":7461,"byte_end":7635,"line_start":152,"line_end":152,"column_start":1,"column_end":175}},{"value":"! * **take_till1!, take_till1_s!**: same as `take_till!`, but the result must not be empty: `take_till1!(is_alphabetic)` would fail on \"abc\"","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":7636,"byte_end":7778,"line_start":153,"line_end":153,"column_start":1,"column_end":143}},{"value":"! * **take_until!, take_until_s!**: returns the longest list of bytes until the provided tag is found. `take_until!(\"world\")` with input \"Hello world!\" would return \"Hello \" and leave \"world!\" as remaining input","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":7779,"byte_end":7992,"line_start":154,"line_end":154,"column_start":1,"column_end":214}},{"value":"! * **take_until1!**: same as `take_until!`, but cannot return an empty result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":7993,"byte_end":8073,"line_start":155,"line_end":155,"column_start":1,"column_end":81}},{"value":"! * **take_until_and_consume!, take_until_and_consume_s!**: same as `take_until!` but consumes the tag. `take_until_and_consume!(\"world\")` with input \"Hello world!\" would return \"Hello \" and leave \"!\" as remaining input","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":8074,"byte_end":8295,"line_start":156,"line_end":156,"column_start":1,"column_end":222}},{"value":"! * **take_until_and_consume1!**: same as `take_until_and_consume!`, but cannot return an empty result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":8296,"byte_end":8400,"line_start":157,"line_end":157,"column_start":1,"column_end":105}},{"value":"! * **take_until_either!**: returns the longest list of bytes until any of the provided characters are found","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":8401,"byte_end":8511,"line_start":158,"line_end":158,"column_start":1,"column_end":111}},{"value":"! * **take_until_either_and_consume!**: same as `take_until_either!`, but consumes the terminating character","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":8512,"byte_end":8622,"line_start":159,"line_end":159,"column_start":1,"column_end":111}},{"value":"! * **take_while!, take_while_s!**: returns the longest list of bytes for which the function is true. `take_while!(is_alphabetic)` with input \"abc123\" would return \"abc\"","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":8623,"byte_end":8794,"line_start":160,"line_end":160,"column_start":1,"column_end":172}},{"value":"! * **take_while1!, take_while1_s!**: same as `take_while!`, but cannot return an empty result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":8795,"byte_end":8891,"line_start":161,"line_end":161,"column_start":1,"column_end":97}},{"value":"! * **value!**: you can use `value!` to always return the same result value without consuming input, like this: `value!(42)`. Or you can replace the result of a child parser with a predefined value, like this: `value!(42, tag!(\"abcd\"))` which would replace, if successful, the return value from \"abcd\", to 42","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":8892,"byte_end":9202,"line_start":162,"line_end":162,"column_start":1,"column_end":311}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":9203,"byte_end":9206,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! Parsing integers from binary formats can be done in two ways: with parser functions, or combinators with configurable endianness:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":9207,"byte_end":9340,"line_start":164,"line_end":164,"column_start":1,"column_end":134}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":9341,"byte_end":9344,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! * configurable endianness: **i16!, i32!, i64!, u16!, u32!, u64!** are combinators that take as argument a `nom::Endianness`,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":9345,"byte_end":9473,"line_start":166,"line_end":166,"column_start":1,"column_end":129}},{"value":"! like this: `i16!(endianness)`. If the parameter is nom::Endianness::Big, parse a big endian i16 integer, otherwise a little endian i16 integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":9474,"byte_end":9620,"line_start":167,"line_end":167,"column_start":1,"column_end":147}},{"value":"! * fixed endianness: the functions are prefixed by \"be_\" for big endian numbers, and by \"le_\" for little endian numbers, and the suffix is the type they parse to. As an example, \"be_u32\" parses a big endian unsigned integer stored in 32 bits.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":9621,"byte_end":9866,"line_start":168,"line_end":168,"column_start":1,"column_end":246}},{"value":"!   * **be_f32, be_f64, le_f32, le_f64**: recognize floating point numbers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":9867,"byte_end":9943,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"!   * **be_i8, be_i16, be_i32, be_i24, be_i32, be_i64**: big endian signed integers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":9944,"byte_end":10029,"line_start":170,"line_end":170,"column_start":1,"column_end":86}},{"value":"!   * **be_u8, be_u16, be_u32, be_u24, be_u32, be_u64**: big endian unsigned integers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10030,"byte_end":10117,"line_start":171,"line_end":171,"column_start":1,"column_end":88}},{"value":"!   * **le_i8, le_i16, le_i32, le_i24, le_i32, le_i64**: little endian signed integers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10118,"byte_end":10206,"line_start":172,"line_end":172,"column_start":1,"column_end":89}},{"value":"!   * **le_u8, le_u16, le_u32, le_u24, le_u32, le_u64**: little endian unsigned integers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10207,"byte_end":10297,"line_start":173,"line_end":173,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10298,"byte_end":10301,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! ## Modifiers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10302,"byte_end":10318,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10319,"byte_end":10322,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! * **complete!**: replaces a Incomplete returned by the child parser with an Error","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10323,"byte_end":10408,"line_start":177,"line_end":177,"column_start":1,"column_end":86}},{"value":"! * **cond!**: conditional combinator","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10409,"byte_end":10448,"line_start":178,"line_end":178,"column_start":1,"column_end":40}},{"value":"! * **cond_reduce!**: Conditional combinator with error","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10449,"byte_end":10506,"line_start":179,"line_end":179,"column_start":1,"column_end":58}},{"value":"! * **cond_with_error!**: Conditional combinator","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10507,"byte_end":10557,"line_start":180,"line_end":180,"column_start":1,"column_end":51}},{"value":"! * **expr_opt!**: evaluates an expression that returns a Option and returns a IResult::Done(I,T) if Some","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10558,"byte_end":10665,"line_start":181,"line_end":181,"column_start":1,"column_end":108}},{"value":"! * **expr_res!**: evaluates an expression that returns a Result and returns a IResult::Done(I,T) if Ok","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10666,"byte_end":10771,"line_start":182,"line_end":182,"column_start":1,"column_end":106}},{"value":"! * **flat_map!**:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10772,"byte_end":10792,"line_start":183,"line_end":183,"column_start":1,"column_end":21}},{"value":"! * **map!**: maps a function on the result of a parser","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10793,"byte_end":10850,"line_start":184,"line_end":184,"column_start":1,"column_end":58}},{"value":"! * **map_opt!**: maps a function returning an Option on the output of a parser","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10851,"byte_end":10932,"line_start":185,"line_end":185,"column_start":1,"column_end":82}},{"value":"! * **map_res!**: maps a function returning a Result on the output of a parser","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":10933,"byte_end":11013,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"! * **not!**: returns a result only if the embedded parser returns Error or Incomplete does not consume the input","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11014,"byte_end":11129,"line_start":187,"line_end":187,"column_start":1,"column_end":116}},{"value":"! * **opt!**: make the underlying parser optional","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11130,"byte_end":11181,"line_start":188,"line_end":188,"column_start":1,"column_end":52}},{"value":"! * **opt_res!**: make the underlying parser optional","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11182,"byte_end":11237,"line_start":189,"line_end":189,"column_start":1,"column_end":56}},{"value":"! * **parse_to!**: uses the parse method from std::str::FromStr to convert the current input to the specified type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11238,"byte_end":11354,"line_start":190,"line_end":190,"column_start":1,"column_end":117}},{"value":"! * **peek!**: returns a result without consuming the input","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11355,"byte_end":11416,"line_start":191,"line_end":191,"column_start":1,"column_end":62}},{"value":"! * **recognize!**: if the child parser was successful, return the consumed input as produced value","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11417,"byte_end":11518,"line_start":192,"line_end":192,"column_start":1,"column_end":102}},{"value":"! * **return_error!**: prevents backtracking if the child parser fails","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11519,"byte_end":11591,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"! * **tap!**: allows access to the parser's result without affecting it","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11592,"byte_end":11665,"line_start":194,"line_end":194,"column_start":1,"column_end":74}},{"value":"! * **verify!**: returns the result of the child parser if it satisfies a verification function","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11666,"byte_end":11763,"line_start":195,"line_end":195,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11764,"byte_end":11767,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! ## Error management and debugging","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11768,"byte_end":11805,"line_start":197,"line_end":197,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11806,"byte_end":11809,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! * **add_return_error!**: Add an error if the child parser fails","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11810,"byte_end":11877,"line_start":199,"line_end":199,"column_start":1,"column_end":68}},{"value":"! * **dbg!**: Prints a message if the parser fails","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11878,"byte_end":11930,"line_start":200,"line_end":200,"column_start":1,"column_end":53}},{"value":"! * **dbg_dmp!**: Prints a message and the input if the parser fails","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":11931,"byte_end":12001,"line_start":201,"line_end":201,"column_start":1,"column_end":71}},{"value":"! * **error_code!**: creates a parse error from a nom::ErrorKind","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12002,"byte_end":12068,"line_start":202,"line_end":202,"column_start":1,"column_end":67}},{"value":"! * **error_node!**: creates a parse error from a nom::ErrorKind and the next error in the parsing tree. if \"verbose-errors\" is not activated, it default to only the error code","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12069,"byte_end":12247,"line_start":203,"line_end":203,"column_start":1,"column_end":179}},{"value":"! * **error_node_position!**: creates a parse error from a nom::ErrorKind, the position in the input and the next error in the parsing tree. if \"verbose-errors\" is not activated, it default to only the error code","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12248,"byte_end":12462,"line_start":204,"line_end":204,"column_start":1,"column_end":215}},{"value":"! * **error_position!**: creates a parse error from a nom::ErrorKind and the position in the input if \"verbose-errors\" is not activated, it default to only the error code","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12463,"byte_end":12635,"line_start":205,"line_end":205,"column_start":1,"column_end":173}},{"value":"! * **fix_error!**: translate parser result from IResult to IResult with a custom type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12636,"byte_end":12724,"line_start":206,"line_end":206,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12725,"byte_end":12728,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! ## Choice combinators","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12729,"byte_end":12754,"line_start":208,"line_end":208,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12755,"byte_end":12758,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"! * **alt!**: try a list of parsers and return the result of the first successful one","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12759,"byte_end":12846,"line_start":210,"line_end":210,"column_start":1,"column_end":88}},{"value":"! * **alt_complete!**: is equivalent to the alt! combinator, except that it will not return Incomplete when one of the constituting parsers returns Incomplete. Instead, it will try the next alternative in the chain.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":12847,"byte_end":13064,"line_start":211,"line_end":211,"column_start":1,"column_end":218}},{"value":"! * **switch!**: choose the next parser depending on the result of the first one, if successful, and returns the result of the second parser","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13065,"byte_end":13207,"line_start":212,"line_end":212,"column_start":1,"column_end":143}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13208,"byte_end":13211,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"! # Sequence combinators","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13212,"byte_end":13238,"line_start":214,"line_end":214,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13239,"byte_end":13242,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"! * **delimited!**: delimited(opening, X, closing) returns X","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13243,"byte_end":13305,"line_start":216,"line_end":216,"column_start":1,"column_end":63}},{"value":"! * **do_parse!**: do_parse applies sub parsers in a sequence. it can store intermediary results and make them available for later parsers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13306,"byte_end":13446,"line_start":217,"line_end":217,"column_start":1,"column_end":141}},{"value":"! * **pair!**: pair(X,Y), returns (x,y)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13447,"byte_end":13488,"line_start":218,"line_end":218,"column_start":1,"column_end":42}},{"value":"! * **permutation!**: applies its sub parsers in a sequence, but independent from their order this parser will only succeed if all of its sub parsers succeed","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13489,"byte_end":13648,"line_start":219,"line_end":219,"column_start":1,"column_end":160}},{"value":"! * **preceded!**: preceded(opening, X) returns X","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13649,"byte_end":13700,"line_start":220,"line_end":220,"column_start":1,"column_end":52}},{"value":"! * **separated_pair!**: separated_pair(X,sep,Y) returns (x,y)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13701,"byte_end":13765,"line_start":221,"line_end":221,"column_start":1,"column_end":65}},{"value":"! * **terminated!**: terminated(X, closing) returns X","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13766,"byte_end":13821,"line_start":222,"line_end":222,"column_start":1,"column_end":56}},{"value":"! * **tuple!**: chains parsers and assemble the sub results in a tuple.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13822,"byte_end":13895,"line_start":223,"line_end":223,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13896,"byte_end":13899,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! ## Applying a parser multiple times","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13900,"byte_end":13939,"line_start":225,"line_end":225,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13940,"byte_end":13943,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"! * **count!**: Applies the child parser a specified number of times","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":13944,"byte_end":14014,"line_start":227,"line_end":227,"column_start":1,"column_end":71}},{"value":"! * **count_fixed!**: Applies the child parser a fixed number of times and returns a fixed size array The type must be specified and it must be Copy","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14015,"byte_end":14165,"line_start":228,"line_end":228,"column_start":1,"column_end":151}},{"value":"! * **fold_many0!**: Applies the parser 0 or more times and folds the list of return values","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14166,"byte_end":14259,"line_start":229,"line_end":229,"column_start":1,"column_end":94}},{"value":"! * **fold_many1!**: Applies the parser 1 or more times and folds the list of return values","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14260,"byte_end":14353,"line_start":230,"line_end":230,"column_start":1,"column_end":94}},{"value":"! * **fold_many_m_n!**: Applies the parser between m and n times (n included) and folds the list of return value","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14354,"byte_end":14468,"line_start":231,"line_end":231,"column_start":1,"column_end":115}},{"value":"! * **length_count!**: gets a number from the first parser, then applies the second parser that many times","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14469,"byte_end":14577,"line_start":232,"line_end":232,"column_start":1,"column_end":109}},{"value":"! * **many0!**: Applies the parser 0 or more times and returns the list of results in a Vec","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14578,"byte_end":14671,"line_start":233,"line_end":233,"column_start":1,"column_end":94}},{"value":"! * **many1!**: Applies the parser 1 or more times and returns the list of results in a Vec","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14672,"byte_end":14765,"line_start":234,"line_end":234,"column_start":1,"column_end":94}},{"value":"! * **many_m_n!**: Applies the parser between m and n times (n included) and returns the list of results in a Vec","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14766,"byte_end":14881,"line_start":235,"line_end":235,"column_start":1,"column_end":116}},{"value":"! * **many_till!**: Applies the first parser until the second applies. Returns a tuple containing the list of results from the first in a Vec and the result of the second.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":14882,"byte_end":15055,"line_start":236,"line_end":236,"column_start":1,"column_end":174}},{"value":"! * **separated_list!**: separated_list(sep, X) returns Vec will return Incomplete if there may be more elements","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15056,"byte_end":15170,"line_start":237,"line_end":237,"column_start":1,"column_end":115}},{"value":"! * **separated_list_complete!**: This is equivalent to the separated_list! combinator, except that it will return Error when either the separator or element subparser returns Incomplete.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15171,"byte_end":15360,"line_start":238,"line_end":238,"column_start":1,"column_end":190}},{"value":"! * **separated_nonempty_list!**: separated_nonempty_list(sep, X) returns Vec will return Incomplete if there may be more elements","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15361,"byte_end":15493,"line_start":239,"line_end":239,"column_start":1,"column_end":133}},{"value":"! * **separated_nonempty_list_complete!**: This is equivalent to the separated_nonempty_list! combinator, except that it will return Error when either the separator or element subparser returns Incomplete.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15494,"byte_end":15701,"line_start":240,"line_end":240,"column_start":1,"column_end":208}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15702,"byte_end":15705,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"! ## Text parsing","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15706,"byte_end":15725,"line_start":242,"line_end":242,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15726,"byte_end":15729,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"! * **escaped!**: matches a byte string with escaped characters.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15730,"byte_end":15796,"line_start":244,"line_end":244,"column_start":1,"column_end":67}},{"value":"! * **escaped_transform!**: matches a byte string with escaped characters, and returns a new string with the escaped characters replaced","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15797,"byte_end":15935,"line_start":245,"line_end":245,"column_start":1,"column_end":139}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15936,"byte_end":15939,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"! ## Binary format parsing","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15940,"byte_end":15968,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15969,"byte_end":15972,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! * **length_data!**: gets a number from the first parser, than takes a subslice of the input of that size, and returns that subslice","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":15973,"byte_end":16108,"line_start":249,"line_end":249,"column_start":1,"column_end":136}},{"value":"! * **length_bytes!**: alias for `length_data`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16109,"byte_end":16157,"line_start":250,"line_end":250,"column_start":1,"column_end":49}},{"value":"! * **length_value!**: gets a number from the first parser, takes a subslice of the input of that size, then applies the second parser on that subslice. If the second parser returns Incomplete, length_value will return an error","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16158,"byte_end":16387,"line_start":251,"line_end":251,"column_start":1,"column_end":230}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16388,"byte_end":16391,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! ## Bit stream parsing","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16392,"byte_end":16417,"line_start":253,"line_end":253,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16418,"byte_end":16421,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"! * **bits!**: transforms the current input type (byte slice `&[u8]`) to a bit stream on which bit specific parsers and more general combinators can be applied","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16422,"byte_end":16583,"line_start":255,"line_end":255,"column_start":1,"column_end":162}},{"value":"! * **bytes!**: transforms its bits stream input back into a byte slice for the underlying parsers.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16584,"byte_end":16685,"line_start":256,"line_end":256,"column_start":1,"column_end":102}},{"value":"! * **tag_bits!**: matches an integer pattern to a bitstream. The number of bits of the input to compare must be specified","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16686,"byte_end":16810,"line_start":257,"line_end":257,"column_start":1,"column_end":125}},{"value":"! * **take_bits!**: generates a parser consuming the specified number of bits","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16811,"byte_end":16890,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16891,"byte_end":16894,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"! ## Whitespace delimited formats parsing","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16895,"byte_end":16938,"line_start":260,"line_end":260,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16939,"byte_end":16942,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! * **eat_separator!**: helper macros to build a separator parser","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":16943,"byte_end":17010,"line_start":262,"line_end":262,"column_start":1,"column_end":68}},{"value":"! * **sep!**: sep is the parser rewriting macro for whitespace separated formats","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17011,"byte_end":17093,"line_start":263,"line_end":263,"column_start":1,"column_end":83}},{"value":"! * **wrap_sep!**:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17094,"byte_end":17114,"line_start":264,"line_end":264,"column_start":1,"column_end":21}},{"value":"! * **ws!**:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17115,"byte_end":17129,"line_start":265,"line_end":265,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17130,"byte_end":17133,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"! ## Remaining combinators","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17134,"byte_end":17162,"line_start":267,"line_end":267,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17163,"byte_end":17166,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"! * **apply!**: emulate function currying: apply!(my_function, arg1, arg2, ...) becomes my_function(input, arg1, arg2, ...)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17167,"byte_end":17292,"line_start":269,"line_end":269,"column_start":1,"column_end":126}},{"value":"! * **apply_m!**: emulate function currying for method calls on structs apply_m!(self.my_function, arg1, arg2, ...) becomes self.my_function(input, arg1, arg2, ...)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17293,"byte_end":17459,"line_start":270,"line_end":270,"column_start":1,"column_end":167}},{"value":"! * **call!**: Used to wrap common expressions and function as macros","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17460,"byte_end":17531,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"! * **call_m!**: Used to called methods then move self back into self","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17532,"byte_end":17603,"line_start":272,"line_end":272,"column_start":1,"column_end":72}},{"value":"! * **closure!**: Wraps a parser in a closure","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17604,"byte_end":17651,"line_start":273,"line_end":273,"column_start":1,"column_end":48}},{"value":"! * **method!**: Makes a method from a parser combination","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17652,"byte_end":17711,"line_start":274,"line_end":274,"column_start":1,"column_end":60}},{"value":"! * **named!**: Makes a function from a parser combination","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17712,"byte_end":17772,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"! * **named_args!**: Makes a function from a parser combination with arguments.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17773,"byte_end":17854,"line_start":276,"line_end":276,"column_start":1,"column_end":82}},{"value":"! * **named_attr!**: Makes a function from a parser combination, with attributes","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17855,"byte_end":17937,"line_start":277,"line_end":277,"column_start":1,"column_end":83}},{"value":"! * **try_parse!**: A bit like std::try!, this macro will return the remaining input and parsed value if the child parser returned Done, and will do an early return for Error and Incomplete this can provide more flexibility than do_parse! if needed","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":17938,"byte_end":18188,"line_start":278,"line_end":278,"column_start":1,"column_end":251}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18189,"byte_end":18192,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"! ## Character test functions","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18193,"byte_end":18224,"line_start":280,"line_end":280,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18225,"byte_end":18228,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"! use those functions with a combinator like `take_while!`:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18229,"byte_end":18290,"line_start":282,"line_end":282,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18291,"byte_end":18294,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! * **is_alphabetic**: Tests if byte is ASCII alphabetic: A-Z, a-z","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18295,"byte_end":18363,"line_start":284,"line_end":284,"column_start":1,"column_end":69}},{"value":"! * **is_alphanumeric**: Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18364,"byte_end":18441,"line_start":285,"line_end":285,"column_start":1,"column_end":78}},{"value":"! * **is_digit**: Tests if byte is ASCII digit: 0-9","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18442,"byte_end":18495,"line_start":286,"line_end":286,"column_start":1,"column_end":54}},{"value":"! * **is_hex_digit**: Tests if byte is ASCII hex digit: 0-9, A-F, a-f","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18496,"byte_end":18567,"line_start":287,"line_end":287,"column_start":1,"column_end":72}},{"value":"! * **is_oct_digit**: Tests if byte is ASCII octal digit: 0-7","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18568,"byte_end":18631,"line_start":288,"line_end":288,"column_start":1,"column_end":64}},{"value":"! * **is_space**: Tests if byte is ASCII space or tab","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18632,"byte_end":18687,"line_start":289,"line_end":289,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18688,"byte_end":18691,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"! ## Remaining functions (sort those out in the other categories)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18692,"byte_end":18759,"line_start":291,"line_end":291,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18760,"byte_end":18763,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"! * **alpha**: Recognizes one or more lowercase and uppercase alphabetic characters: a-zA-Z","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18764,"byte_end":18857,"line_start":293,"line_end":293,"column_start":1,"column_end":94}},{"value":"! * **alphanumeric**: Recognizes one or more numerical and alphabetic characters: 0-9a-zA-Z","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18858,"byte_end":18951,"line_start":294,"line_end":294,"column_start":1,"column_end":94}},{"value":"! * **anychar**: ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18952,"byte_end":18971,"line_start":295,"line_end":295,"column_start":1,"column_end":20}},{"value":"! * **begin**: ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18972,"byte_end":18989,"line_start":296,"line_end":296,"column_start":1,"column_end":18}},{"value":"! * **crlf**: ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":18990,"byte_end":19006,"line_start":297,"line_end":297,"column_start":1,"column_end":17}},{"value":"! * **digit**: Recognizes one or more numerical characters: 0-9","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19007,"byte_end":19072,"line_start":298,"line_end":298,"column_start":1,"column_end":66}},{"value":"! * **double**: Recognizes floating point number in a byte string and returns a f64","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19073,"byte_end":19158,"line_start":299,"line_end":299,"column_start":1,"column_end":86}},{"value":"! * **double_s**: Recognizes floating point number in a string and returns a f64","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19159,"byte_end":19241,"line_start":300,"line_end":300,"column_start":1,"column_end":83}},{"value":"! * **eol**: ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19242,"byte_end":19257,"line_start":301,"line_end":301,"column_start":1,"column_end":16}},{"value":"! * **float**: Recognizes floating point number in a byte string and returns a f32","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19258,"byte_end":19342,"line_start":302,"line_end":302,"column_start":1,"column_end":85}},{"value":"! * **float_s**: Recognizes floating point number in a string and returns a f32","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19343,"byte_end":19424,"line_start":303,"line_end":303,"column_start":1,"column_end":82}},{"value":"! * **hex_digit**: Recognizes one or more hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19425,"byte_end":19516,"line_start":304,"line_end":304,"column_start":1,"column_end":92}},{"value":"! * **hex_u32**: Recognizes a hex-encoded integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19517,"byte_end":19568,"line_start":305,"line_end":305,"column_start":1,"column_end":52}},{"value":"! * **line_ending**: Recognizes an end of line (both '\\n' and \"\\r\\n\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19569,"byte_end":19640,"line_start":306,"line_end":306,"column_start":1,"column_end":72}},{"value":"! * **multispace**: Recognizes one or more spaces, tabs, carriage returns and line feeds","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19641,"byte_end":19731,"line_start":307,"line_end":307,"column_start":1,"column_end":91}},{"value":"! * **newline**: Matches a newline character '\\n'","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19732,"byte_end":19783,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"! * **non_empty**: Recognizes non empty buffers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19784,"byte_end":19833,"line_start":309,"line_end":309,"column_start":1,"column_end":50}},{"value":"! * **not_line_ending**: ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19834,"byte_end":19861,"line_start":310,"line_end":310,"column_start":1,"column_end":28}},{"value":"! * **oct_digit**: Recognizes one or more octal characters: 0-7","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19862,"byte_end":19927,"line_start":311,"line_end":311,"column_start":1,"column_end":66}},{"value":"! * **rest**: Return the remaining input.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19928,"byte_end":19971,"line_start":312,"line_end":312,"column_start":1,"column_end":44}},{"value":"! * **rest_s**: Return the remaining input, for strings.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":19972,"byte_end":20030,"line_start":313,"line_end":313,"column_start":1,"column_end":59}},{"value":"! * **shift**: ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20031,"byte_end":20048,"line_start":314,"line_end":314,"column_start":1,"column_end":18}},{"value":"! * **sized_buffer**: ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20049,"byte_end":20073,"line_start":315,"line_end":315,"column_start":1,"column_end":25}},{"value":"! * **space**: Recognizes one or more spaces and tabs","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20074,"byte_end":20129,"line_start":316,"line_end":316,"column_start":1,"column_end":56}},{"value":"! * **tab**: Matches a tab character '\\t'","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20130,"byte_end":20173,"line_start":317,"line_end":317,"column_start":1,"column_end":44}},{"value":"! * **tag_cl**: ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20174,"byte_end":20192,"line_start":318,"line_end":318,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20193,"byte_end":20196,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20197,"byte_end":20210,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20211,"byte_end":20214,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20215,"byte_end":20222,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"! #[macro_use]","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20223,"byte_end":20239,"line_start":323,"line_end":323,"column_start":1,"column_end":17}},{"value":"! extern crate nom;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20240,"byte_end":20261,"line_start":324,"line_end":324,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20262,"byte_end":20265,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"! use nom::{IResult,digit};","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20266,"byte_end":20295,"line_start":326,"line_end":326,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20296,"byte_end":20299,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"! // Parser definition","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20300,"byte_end":20324,"line_start":328,"line_end":328,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20325,"byte_end":20328,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"! use std::str;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20329,"byte_end":20346,"line_start":330,"line_end":330,"column_start":1,"column_end":18}},{"value":"! use std::str::FromStr;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20347,"byte_end":20373,"line_start":331,"line_end":331,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20374,"byte_end":20377,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"! // We parse any expr surrounded by parens, ignoring all whitespaces around those","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20378,"byte_end":20462,"line_start":333,"line_end":333,"column_start":1,"column_end":85}},{"value":"! named!(parens<i64>, ws!(delimited!( tag!(\"(\"), expr, tag!(\")\") )) );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20463,"byte_end":20535,"line_start":334,"line_end":334,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20536,"byte_end":20539,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! // We transform an integer string into a i64, ignoring surrounding whitespaces","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20540,"byte_end":20622,"line_start":336,"line_end":336,"column_start":1,"column_end":83}},{"value":"! // We look for a digit suite, and try to convert it.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20623,"byte_end":20679,"line_start":337,"line_end":337,"column_start":1,"column_end":57}},{"value":"! // If either str::from_utf8 or FromStr::from_str fail,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20680,"byte_end":20738,"line_start":338,"line_end":338,"column_start":1,"column_end":59}},{"value":"! // we fallback to the parens parser defined above","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20739,"byte_end":20792,"line_start":339,"line_end":339,"column_start":1,"column_end":54}},{"value":"! named!(factor<i64>, alt!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20793,"byte_end":20822,"line_start":340,"line_end":340,"column_start":1,"column_end":30}},{"value":"!     map_res!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20823,"byte_end":20840,"line_start":341,"line_end":341,"column_start":1,"column_end":18}},{"value":"!       map_res!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20841,"byte_end":20860,"line_start":342,"line_end":342,"column_start":1,"column_end":20}},{"value":"!         ws!(digit),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20861,"byte_end":20884,"line_start":343,"line_end":343,"column_start":1,"column_end":24}},{"value":"!         str::from_utf8","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20885,"byte_end":20911,"line_start":344,"line_end":344,"column_start":1,"column_end":27}},{"value":"!       ),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20912,"byte_end":20924,"line_start":345,"line_end":345,"column_start":1,"column_end":13}},{"value":"!       FromStr::from_str","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20925,"byte_end":20952,"line_start":346,"line_end":346,"column_start":1,"column_end":28}},{"value":"!     )","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20953,"byte_end":20962,"line_start":347,"line_end":347,"column_start":1,"column_end":10}},{"value":"!   | parens","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20963,"byte_end":20977,"line_start":348,"line_end":348,"column_start":1,"column_end":15}},{"value":"!   )","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20978,"byte_end":20985,"line_start":349,"line_end":349,"column_start":1,"column_end":8}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20986,"byte_end":20992,"line_start":350,"line_end":350,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20993,"byte_end":20996,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"! // We read an initial factor and for each time we find","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":20997,"byte_end":21055,"line_start":352,"line_end":352,"column_start":1,"column_end":59}},{"value":"! // a * or / operator followed by another factor, we do","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21056,"byte_end":21114,"line_start":353,"line_end":353,"column_start":1,"column_end":59}},{"value":"! // the math by folding everything","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21115,"byte_end":21152,"line_start":354,"line_end":354,"column_start":1,"column_end":38}},{"value":"! named!(term <i64>, do_parse!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21153,"byte_end":21186,"line_start":355,"line_end":355,"column_start":1,"column_end":34}},{"value":"!     init: factor >>","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21187,"byte_end":21210,"line_start":356,"line_end":356,"column_start":1,"column_end":24}},{"value":"!     res:  fold_many0!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21211,"byte_end":21237,"line_start":357,"line_end":357,"column_start":1,"column_end":27}},{"value":"!         pair!(alt!(tag!(\"*\") | tag!(\"/\")), factor),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21238,"byte_end":21293,"line_start":358,"line_end":358,"column_start":1,"column_end":56}},{"value":"!         init,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21294,"byte_end":21311,"line_start":359,"line_end":359,"column_start":1,"column_end":18}},{"value":"!         |acc, (op, val): (&[u8], i64)| {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21312,"byte_end":21356,"line_start":360,"line_end":360,"column_start":1,"column_end":45}},{"value":"!             if (op[0] as char) == '*' { acc * val } else { acc / val }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21357,"byte_end":21431,"line_start":361,"line_end":361,"column_start":1,"column_end":75}},{"value":"!         }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21432,"byte_end":21445,"line_start":362,"line_end":362,"column_start":1,"column_end":14}},{"value":"!     ) >>","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21446,"byte_end":21458,"line_start":363,"line_end":363,"column_start":1,"column_end":13}},{"value":"!     (res)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21459,"byte_end":21472,"line_start":364,"line_end":364,"column_start":1,"column_end":14}},{"value":"!   )","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21473,"byte_end":21480,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21481,"byte_end":21487,"line_start":366,"line_end":366,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21488,"byte_end":21491,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"! named!(expr <i64>, do_parse!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21492,"byte_end":21525,"line_start":368,"line_end":368,"column_start":1,"column_end":34}},{"value":"!     init: term >>","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21526,"byte_end":21547,"line_start":369,"line_end":369,"column_start":1,"column_end":22}},{"value":"!     res:  fold_many0!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21548,"byte_end":21574,"line_start":370,"line_end":370,"column_start":1,"column_end":27}},{"value":"!         pair!(alt!(tag!(\"+\") | tag!(\"-\")), term),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21575,"byte_end":21628,"line_start":371,"line_end":371,"column_start":1,"column_end":54}},{"value":"!         init,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21629,"byte_end":21646,"line_start":372,"line_end":372,"column_start":1,"column_end":18}},{"value":"!         |acc, (op, val): (&[u8], i64)| {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21647,"byte_end":21691,"line_start":373,"line_end":373,"column_start":1,"column_end":45}},{"value":"!             if (op[0] as char) == '+' { acc + val } else { acc - val }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21692,"byte_end":21766,"line_start":374,"line_end":374,"column_start":1,"column_end":75}},{"value":"!         }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21767,"byte_end":21780,"line_start":375,"line_end":375,"column_start":1,"column_end":14}},{"value":"!     ) >>","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21781,"byte_end":21793,"line_start":376,"line_end":376,"column_start":1,"column_end":13}},{"value":"!     (res)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21794,"byte_end":21807,"line_start":377,"line_end":377,"column_start":1,"column_end":14}},{"value":"!   )","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21808,"byte_end":21815,"line_start":378,"line_end":378,"column_start":1,"column_end":8}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21816,"byte_end":21822,"line_start":379,"line_end":379,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21823,"byte_end":21826,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21827,"byte_end":21842,"line_start":381,"line_end":381,"column_start":1,"column_end":16}},{"value":"!   assert_eq!(expr(b\"1+2\"),         IResult::Done(&b\"\"[..], 3));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21843,"byte_end":21910,"line_start":382,"line_end":382,"column_start":1,"column_end":68}},{"value":"!   assert_eq!(expr(b\"12+6-4+3\"),    IResult::Done(&b\"\"[..], 17));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21911,"byte_end":21979,"line_start":383,"line_end":383,"column_start":1,"column_end":69}},{"value":"!   assert_eq!(expr(b\"1+2*3+4\"),     IResult::Done(&b\"\"[..], 11));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":21980,"byte_end":22048,"line_start":384,"line_end":384,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":22049,"byte_end":22052,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"!   assert_eq!(expr(b\"(2)\"),         IResult::Done(&b\"\"[..], 2));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":22053,"byte_end":22120,"line_start":386,"line_end":386,"column_start":1,"column_end":68}},{"value":"!   assert_eq!(expr(b\"2*(3+4)\"),     IResult::Done(&b\"\"[..], 14));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":22121,"byte_end":22189,"line_start":387,"line_end":387,"column_start":1,"column_end":69}},{"value":"!   assert_eq!(expr(b\"2*2/(5-1)+3\"), IResult::Done(&b\"\"[..], 4));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":22190,"byte_end":22257,"line_start":388,"line_end":388,"column_start":1,"column_end":68}},{"value":"! }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":22258,"byte_end":22263,"line_start":389,"line_end":389,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":22264,"byte_end":22271,"line_start":390,"line_end":390,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25037,"byte_end":25043,"line_start":18,"line_end":18,"column_start":11,"column_end":17},"name":"Offset","qualname":"::util::Offset","value":"Offset","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" useful functions to calculate the offset between slices and show a hexdump of a slice\n","sig":null,"attributes":[{"value":"/ useful functions to calculate the offset between slices and show a hexdump of a slice","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":24937,"byte_end":25026,"line_start":17,"line_end":17,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25130,"byte_end":25136,"line_start":20,"line_end":20,"column_start":6,"column_end":12},"name":"offset","qualname":"::util::Offset::offset","value":"fn (&self, second: &Self) -> usize","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" offset between the first byte of self and the first byte of the argument\n","sig":null,"attributes":[{"value":"/ offset between the first byte of self and the first byte of the argument","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25048,"byte_end":25124,"line_start":19,"line_end":19,"column_start":3,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25205,"byte_end":25215,"line_start":24,"line_end":24,"column_start":11,"column_end":21},"name":"HexDisplay","qualname":"::util::HexDisplay","value":"HexDisplay","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25171,"byte_end":25194,"line_start":23,"line_end":23,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25307,"byte_end":25313,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"name":"to_hex","qualname":"::util::HexDisplay::to_hex","value":"fn (&self, chunk_size: usize) -> String","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump, returning the owned\n string.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump, returning the owned","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25220,"byte_end":25287,"line_start":25,"line_end":25,"column_start":3,"column_end":70}},{"value":"/ string.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25290,"byte_end":25301,"line_start":26,"line_end":26,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25469,"byte_end":25480,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"name":"to_hex_from","qualname":"::util::HexDisplay::to_hex_from","value":"fn (&self, chunk_size: usize, from: usize) -> String","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\n string.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump beginning at `from` address, returning the owned","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25354,"byte_end":25449,"line_start":29,"line_end":29,"column_start":3,"column_end":98}},{"value":"/ string.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":25452,"byte_end":25463,"line_start":30,"line_end":30,"column_start":3,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":29479,"byte_end":29492,"line_start":188,"line_end":188,"column_start":8,"column_end":21},"name":"error_to_list","qualname":"::util::error_to_list","value":"fn <P, E> (e: &Err<P, E>) -> Vec<ErrorKind<E>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":29437,"byte_end":29471,"line_start":187,"line_end":187,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30139,"byte_end":30158,"line_start":214,"line_end":214,"column_start":8,"column_end":27},"name":"compare_error_paths","qualname":"::util::compare_error_paths","value":"fn <P, E> (e1: &Err<P, E>, e2: &Err<P, E>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30097,"byte_end":30131,"line_start":213,"line_end":213,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30410,"byte_end":30427,"line_start":225,"line_end":225,"column_start":8,"column_end":25},"name":"add_error_pattern","qualname":"::util::add_error_pattern","value":"fn <'a, I, O, E> (h: &mut HashMap<Vec<ErrorKind<E>>, &'a str>, res: IResult<I, O, E>, message: &'a str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30344,"byte_end":30367,"line_start":223,"line_end":223,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30368,"byte_end":30402,"line_start":224,"line_end":224,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30668,"byte_end":30684,"line_start":234,"line_end":234,"column_start":8,"column_end":24},"name":"slice_to_offsets","qualname":"::util::slice_to_offsets","value":"fn (input: &[u8], s: &[u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30925,"byte_end":30939,"line_start":243,"line_end":243,"column_start":8,"column_end":22},"name":"prepare_errors","qualname":"::util::prepare_errors","value":"fn <O, E> (input: &[u8], res: IResult<&[u8], O, E>) -> Option<Vec<(ErrorKind<E>, usize, usize)>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30859,"byte_end":30882,"line_start":241,"line_end":241,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":30883,"byte_end":30917,"line_start":242,"line_end":242,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":31885,"byte_end":31896,"line_start":277,"line_end":277,"column_start":8,"column_end":19},"name":"print_error","qualname":"::util::print_error","value":"fn <O, E> (input: &[u8], res: IResult<&[u8], O, E>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":31819,"byte_end":31842,"line_start":275,"line_end":275,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":31843,"byte_end":31877,"line_start":276,"line_end":276,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":32274,"byte_end":32289,"line_start":290,"line_end":290,"column_start":8,"column_end":23},"name":"generate_colors","qualname":"::util::generate_colors","value":"fn <E> (v: &[(ErrorKind<E>, usize, usize)]) -> HashMap<u32, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":32208,"byte_end":32231,"line_start":288,"line_end":288,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":32232,"byte_end":32266,"line_start":289,"line_end":289,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":32543,"byte_end":32559,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"code_from_offset","qualname":"::util::code_from_offset","value":"fn <E> (v: &[(ErrorKind<E>, usize, usize)], offset: usize) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":33070,"byte_end":33081,"line_start":323,"line_end":323,"column_start":8,"column_end":19},"name":"reset_color","qualname":"::util::reset_color","value":"fn (v: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":33182,"byte_end":33193,"line_start":330,"line_end":330,"column_start":8,"column_end":19},"name":"write_color","qualname":"::util::write_color","value":"fn (v: &mut Vec<u8>, color: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":33442,"byte_end":33453,"line_start":342,"line_end":342,"column_start":8,"column_end":19},"name":"print_codes","qualname":"::util::print_codes","value":"fn (colors: HashMap<u32, u8>, names: HashMap<u32, &str>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":33411,"byte_end":33434,"line_start":341,"line_end":341,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":34073,"byte_end":34086,"line_start":365,"line_end":365,"column_start":8,"column_end":21},"name":"print_offsets","qualname":"::util::print_offsets","value":"fn <E> (input: &[u8], from: usize, offsets: &[(ErrorKind<E>, usize, usize)]) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":34007,"byte_end":34030,"line_start":363,"line_end":363,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":34031,"byte_end":34065,"line_start":364,"line_end":364,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":71},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":36311,"byte_end":36318,"line_start":450,"line_end":450,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::util::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":72}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":36326,"byte_end":36334,"line_start":451,"line_end":451,"column_start":6,"column_end":14},"name":"as_bytes","qualname":"::util::AsBytes::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37360,"byte_end":37366,"line_start":513,"line_end":513,"column_start":3,"column_end":9},"name":"Custom","qualname":"::util::ErrorKind::Custom","value":"ErrorKind::Custom(E)","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1018},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37373,"byte_end":37376,"line_start":514,"line_end":514,"column_start":3,"column_end":6},"name":"Tag","qualname":"::util::ErrorKind::Tag","value":"ErrorKind::Tag","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1020},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37380,"byte_end":37386,"line_start":515,"line_end":515,"column_start":3,"column_end":9},"name":"MapRes","qualname":"::util::ErrorKind::MapRes","value":"ErrorKind::MapRes","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37390,"byte_end":37396,"line_start":516,"line_end":516,"column_start":3,"column_end":9},"name":"MapOpt","qualname":"::util::ErrorKind::MapOpt","value":"ErrorKind::MapOpt","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1024},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37400,"byte_end":37403,"line_start":517,"line_end":517,"column_start":3,"column_end":6},"name":"Alt","qualname":"::util::ErrorKind::Alt","value":"ErrorKind::Alt","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1026},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37407,"byte_end":37412,"line_start":518,"line_end":518,"column_start":3,"column_end":8},"name":"IsNot","qualname":"::util::ErrorKind::IsNot","value":"ErrorKind::IsNot","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1028},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37416,"byte_end":37419,"line_start":519,"line_end":519,"column_start":3,"column_end":6},"name":"IsA","qualname":"::util::ErrorKind::IsA","value":"ErrorKind::IsA","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1030},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37423,"byte_end":37436,"line_start":520,"line_end":520,"column_start":3,"column_end":16},"name":"SeparatedList","qualname":"::util::ErrorKind::SeparatedList","value":"ErrorKind::SeparatedList","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1032},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37440,"byte_end":37461,"line_start":521,"line_end":521,"column_start":3,"column_end":24},"name":"SeparatedNonEmptyList","qualname":"::util::ErrorKind::SeparatedNonEmptyList","value":"ErrorKind::SeparatedNonEmptyList","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1034},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37465,"byte_end":37470,"line_start":522,"line_end":522,"column_start":3,"column_end":8},"name":"Many0","qualname":"::util::ErrorKind::Many0","value":"ErrorKind::Many0","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1036},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37474,"byte_end":37479,"line_start":523,"line_end":523,"column_start":3,"column_end":8},"name":"Many1","qualname":"::util::ErrorKind::Many1","value":"ErrorKind::Many1","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1038},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37483,"byte_end":37491,"line_start":524,"line_end":524,"column_start":3,"column_end":11},"name":"ManyTill","qualname":"::util::ErrorKind::ManyTill","value":"ErrorKind::ManyTill","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1040},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37495,"byte_end":37500,"line_start":525,"line_end":525,"column_start":3,"column_end":8},"name":"Count","qualname":"::util::ErrorKind::Count","value":"ErrorKind::Count","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1042},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37504,"byte_end":37523,"line_start":526,"line_end":526,"column_start":3,"column_end":22},"name":"TakeUntilAndConsume","qualname":"::util::ErrorKind::TakeUntilAndConsume","value":"ErrorKind::TakeUntilAndConsume","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1044},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37527,"byte_end":37536,"line_start":527,"line_end":527,"column_start":3,"column_end":12},"name":"TakeUntil","qualname":"::util::ErrorKind::TakeUntil","value":"ErrorKind::TakeUntil","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1046},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37540,"byte_end":37565,"line_start":528,"line_end":528,"column_start":3,"column_end":28},"name":"TakeUntilEitherAndConsume","qualname":"::util::ErrorKind::TakeUntilEitherAndConsume","value":"ErrorKind::TakeUntilEitherAndConsume","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1048},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37569,"byte_end":37584,"line_start":529,"line_end":529,"column_start":3,"column_end":18},"name":"TakeUntilEither","qualname":"::util::ErrorKind::TakeUntilEither","value":"ErrorKind::TakeUntilEither","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1050},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37588,"byte_end":37599,"line_start":530,"line_end":530,"column_start":3,"column_end":14},"name":"LengthValue","qualname":"::util::ErrorKind::LengthValue","value":"ErrorKind::LengthValue","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1052},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37603,"byte_end":37613,"line_start":531,"line_end":531,"column_start":3,"column_end":13},"name":"TagClosure","qualname":"::util::ErrorKind::TagClosure","value":"ErrorKind::TagClosure","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37617,"byte_end":37622,"line_start":532,"line_end":532,"column_start":3,"column_end":8},"name":"Alpha","qualname":"::util::ErrorKind::Alpha","value":"ErrorKind::Alpha","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1056},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37626,"byte_end":37631,"line_start":533,"line_end":533,"column_start":3,"column_end":8},"name":"Digit","qualname":"::util::ErrorKind::Digit","value":"ErrorKind::Digit","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37635,"byte_end":37643,"line_start":534,"line_end":534,"column_start":3,"column_end":11},"name":"HexDigit","qualname":"::util::ErrorKind::HexDigit","value":"ErrorKind::HexDigit","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1060},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37647,"byte_end":37655,"line_start":535,"line_end":535,"column_start":3,"column_end":11},"name":"OctDigit","qualname":"::util::ErrorKind::OctDigit","value":"ErrorKind::OctDigit","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1062},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37659,"byte_end":37671,"line_start":536,"line_end":536,"column_start":3,"column_end":15},"name":"AlphaNumeric","qualname":"::util::ErrorKind::AlphaNumeric","value":"ErrorKind::AlphaNumeric","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1064},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37675,"byte_end":37680,"line_start":537,"line_end":537,"column_start":3,"column_end":8},"name":"Space","qualname":"::util::ErrorKind::Space","value":"ErrorKind::Space","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1066},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37684,"byte_end":37694,"line_start":538,"line_end":538,"column_start":3,"column_end":13},"name":"MultiSpace","qualname":"::util::ErrorKind::MultiSpace","value":"ErrorKind::MultiSpace","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1068},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37698,"byte_end":37711,"line_start":539,"line_end":539,"column_start":3,"column_end":16},"name":"LengthValueFn","qualname":"::util::ErrorKind::LengthValueFn","value":"ErrorKind::LengthValueFn","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1070},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37715,"byte_end":37718,"line_start":540,"line_end":540,"column_start":3,"column_end":6},"name":"Eof","qualname":"::util::ErrorKind::Eof","value":"ErrorKind::Eof","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1072},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37722,"byte_end":37729,"line_start":541,"line_end":541,"column_start":3,"column_end":10},"name":"ExprOpt","qualname":"::util::ErrorKind::ExprOpt","value":"ErrorKind::ExprOpt","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1074},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37733,"byte_end":37740,"line_start":542,"line_end":542,"column_start":3,"column_end":10},"name":"ExprRes","qualname":"::util::ErrorKind::ExprRes","value":"ErrorKind::ExprRes","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1076},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37744,"byte_end":37754,"line_start":543,"line_end":543,"column_start":3,"column_end":13},"name":"CondReduce","qualname":"::util::ErrorKind::CondReduce","value":"ErrorKind::CondReduce","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1078},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37758,"byte_end":37764,"line_start":544,"line_end":544,"column_start":3,"column_end":9},"name":"Switch","qualname":"::util::ErrorKind::Switch","value":"ErrorKind::Switch","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1080},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37768,"byte_end":37775,"line_start":545,"line_end":545,"column_start":3,"column_end":10},"name":"TagBits","qualname":"::util::ErrorKind::TagBits","value":"ErrorKind::TagBits","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1082},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37779,"byte_end":37784,"line_start":546,"line_end":546,"column_start":3,"column_end":8},"name":"OneOf","qualname":"::util::ErrorKind::OneOf","value":"ErrorKind::OneOf","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1084},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37788,"byte_end":37794,"line_start":547,"line_end":547,"column_start":3,"column_end":9},"name":"NoneOf","qualname":"::util::ErrorKind::NoneOf","value":"ErrorKind::NoneOf","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1086},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37798,"byte_end":37802,"line_start":548,"line_end":548,"column_start":3,"column_end":7},"name":"Char","qualname":"::util::ErrorKind::Char","value":"ErrorKind::Char","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1088},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37806,"byte_end":37810,"line_start":549,"line_end":549,"column_start":3,"column_end":7},"name":"CrLf","qualname":"::util::ErrorKind::CrLf","value":"ErrorKind::CrLf","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1090},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37814,"byte_end":37825,"line_start":550,"line_end":550,"column_start":3,"column_end":14},"name":"RegexpMatch","qualname":"::util::ErrorKind::RegexpMatch","value":"ErrorKind::RegexpMatch","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1092},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37829,"byte_end":37842,"line_start":551,"line_end":551,"column_start":3,"column_end":16},"name":"RegexpMatches","qualname":"::util::ErrorKind::RegexpMatches","value":"ErrorKind::RegexpMatches","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1094},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37846,"byte_end":37856,"line_start":552,"line_end":552,"column_start":3,"column_end":13},"name":"RegexpFind","qualname":"::util::ErrorKind::RegexpFind","value":"ErrorKind::RegexpFind","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1096},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37860,"byte_end":37873,"line_start":553,"line_end":553,"column_start":3,"column_end":16},"name":"RegexpCapture","qualname":"::util::ErrorKind::RegexpCapture","value":"ErrorKind::RegexpCapture","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1098},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37877,"byte_end":37891,"line_start":554,"line_end":554,"column_start":3,"column_end":17},"name":"RegexpCaptures","qualname":"::util::ErrorKind::RegexpCaptures","value":"ErrorKind::RegexpCaptures","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1100},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37895,"byte_end":37905,"line_start":555,"line_end":555,"column_start":3,"column_end":13},"name":"TakeWhile1","qualname":"::util::ErrorKind::TakeWhile1","value":"ErrorKind::TakeWhile1","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1102},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37909,"byte_end":37917,"line_start":556,"line_end":556,"column_start":3,"column_end":11},"name":"Complete","qualname":"::util::ErrorKind::Complete","value":"ErrorKind::Complete","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1104},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37921,"byte_end":37924,"line_start":557,"line_end":557,"column_start":3,"column_end":6},"name":"Fix","qualname":"::util::ErrorKind::Fix","value":"ErrorKind::Fix","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1106},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37928,"byte_end":37935,"line_start":558,"line_end":558,"column_start":3,"column_end":10},"name":"Escaped","qualname":"::util::ErrorKind::Escaped","value":"ErrorKind::Escaped","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1108},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37939,"byte_end":37955,"line_start":559,"line_end":559,"column_start":3,"column_end":19},"name":"EscapedTransform","qualname":"::util::ErrorKind::EscapedTransform","value":"ErrorKind::EscapedTransform","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37959,"byte_end":37965,"line_start":560,"line_end":560,"column_start":3,"column_end":9},"name":"TagStr","qualname":"::util::ErrorKind::TagStr","value":"ErrorKind::TagStr","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1112},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37969,"byte_end":37977,"line_start":561,"line_end":561,"column_start":3,"column_end":11},"name":"IsNotStr","qualname":"::util::ErrorKind::IsNotStr","value":"ErrorKind::IsNotStr","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37981,"byte_end":37987,"line_start":562,"line_end":562,"column_start":3,"column_end":9},"name":"IsAStr","qualname":"::util::ErrorKind::IsAStr","value":"ErrorKind::IsAStr","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1116},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37991,"byte_end":38004,"line_start":563,"line_end":563,"column_start":3,"column_end":16},"name":"TakeWhile1Str","qualname":"::util::ErrorKind::TakeWhile1Str","value":"ErrorKind::TakeWhile1Str","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1118},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38008,"byte_end":38016,"line_start":564,"line_end":564,"column_start":3,"column_end":11},"name":"NonEmpty","qualname":"::util::ErrorKind::NonEmpty","value":"ErrorKind::NonEmpty","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1120},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38020,"byte_end":38026,"line_start":565,"line_end":565,"column_start":3,"column_end":9},"name":"ManyMN","qualname":"::util::ErrorKind::ManyMN","value":"ErrorKind::ManyMN","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1122},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38030,"byte_end":38052,"line_start":566,"line_end":566,"column_start":3,"column_end":25},"name":"TakeUntilAndConsumeStr","qualname":"::util::ErrorKind::TakeUntilAndConsumeStr","value":"ErrorKind::TakeUntilAndConsumeStr","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1124},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38056,"byte_end":38068,"line_start":567,"line_end":567,"column_start":3,"column_end":15},"name":"TakeUntilStr","qualname":"::util::ErrorKind::TakeUntilStr","value":"ErrorKind::TakeUntilStr","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1126},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38072,"byte_end":38075,"line_start":568,"line_end":568,"column_start":3,"column_end":6},"name":"Not","qualname":"::util::ErrorKind::Not","value":"ErrorKind::Not","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1128},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38079,"byte_end":38090,"line_start":569,"line_end":569,"column_start":3,"column_end":14},"name":"Permutation","qualname":"::util::ErrorKind::Permutation","value":"ErrorKind::Permutation","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1130},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38094,"byte_end":38100,"line_start":570,"line_end":570,"column_start":3,"column_end":9},"name":"Verify","qualname":"::util::ErrorKind::Verify","value":"ErrorKind::Verify","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1132},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38104,"byte_end":38113,"line_start":571,"line_end":571,"column_start":3,"column_end":12},"name":"TakeTill1","qualname":"::util::ErrorKind::TakeTill1","value":"ErrorKind::TakeTill1","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1013},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37339,"byte_end":37348,"line_start":512,"line_end":512,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::util::ErrorKind","value":"ErrorKind::{Custom, Tag, MapRes, MapOpt, Alt, IsNot, IsA, SeparatedList, SeparatedNonEmptyList, Many0, Many1, ManyTill, Count, TakeUntilAndConsume, TakeUntil, TakeUntilEitherAndConsume, TakeUntilEither, LengthValue, TagClosure, Alpha, Digit, HexDigit, OctDigit, AlphaNumeric, Space, MultiSpace, LengthValueFn, Eof, ExprOpt, ExprRes, CondReduce, Switch, TagBits, OneOf, NoneOf, Char, CrLf, RegexpMatch, RegexpMatches, RegexpFind, RegexpCapture, RegexpCaptures, TakeWhile1, Complete, Fix, Escaped, EscapedTransform, TagStr, IsNotStr, IsAStr, TakeWhile1Str, NonEmpty, ManyMN, TakeUntilAndConsumeStr, TakeUntilStr, Not, Permutation, Verify, TakeTill1}","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132}],"decl_id":null,"docs":" indicates which parser returned an error\n","sig":null,"attributes":[{"value":"/ indicates which parser returned an error","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":37244,"byte_end":37288,"line_start":510,"line_end":510,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":38125,"byte_end":38137,"line_start":574,"line_end":574,"column_start":8,"column_end":20},"name":"error_to_u32","qualname":"::util::error_to_u32","value":"fn <E> (e: &ErrorKind<E>) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":41046,"byte_end":41057,"line_start":639,"line_end":639,"column_start":12,"column_end":23},"name":"description","qualname":"<ErrorKind<E>>::description","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":45070,"byte_end":45085,"line_start":706,"line_end":706,"column_start":12,"column_end":27},"name":"into_error_kind","qualname":"<ErrorKind<E>>::into_error_kind","value":"fn (self) -> ErrorKind<E>","parent":null,"children":[],"decl_id":null,"docs":" Convert Err into an ErrorKind.","sig":null,"attributes":[{"value":"/ Convert Err into an ErrorKind.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":44894,"byte_end":44928,"line_start":703,"line_end":703,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":44933,"byte_end":44936,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This allows application code to use ErrorKind and stay independent from the `verbose-errors` features activation.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":44941,"byte_end":45058,"line_start":705,"line_end":705,"column_start":5,"column_end":122}}]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46063,"byte_end":46074,"line_start":16,"line_end":16,"column_start":11,"column_end":22},"name":"InputLength","qualname":"::traits::InputLength","value":"InputLength","parent":null,"children":[{"krate":0,"index":104}],"decl_id":null,"docs":" abstract method to calculate the input length\n","sig":null,"attributes":[{"value":"/ abstract method to calculate the input length","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46003,"byte_end":46052,"line_start":15,"line_end":15,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46194,"byte_end":46203,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"name":"input_len","qualname":"::traits::InputLength::input_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" calculates the input length, as indicated by its name,\n and the name of the trait itself\n","sig":null,"attributes":[{"value":"/ calculates the input length, as indicated by its name,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46079,"byte_end":46137,"line_start":17,"line_end":17,"column_start":3,"column_end":61}},{"value":"/ and the name of the trait itself","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46140,"byte_end":46176,"line_start":18,"line_end":18,"column_start":3,"column_end":39}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46179,"byte_end":46188,"line_start":19,"line_end":19,"column_start":3,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":115},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46746,"byte_end":46752,"line_start":48,"line_end":48,"column_start":11,"column_end":17},"name":"AsChar","qualname":"::traits::AsChar","value":"AsChar","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":" transforms common types to a char for basic token parsing\n","sig":null,"attributes":[{"value":"/ transforms common types to a char for basic token parsing","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46674,"byte_end":46735,"line_start":47,"line_end":47,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46807,"byte_end":46814,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"as_char","qualname":"::traits::AsChar::as_char","value":"fn (self) -> char","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" makes a char from self\n","sig":null,"attributes":[{"value":"/ makes a char from self","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46759,"byte_end":46785,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46790,"byte_end":46799,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47020,"byte_end":47028,"line_start":58,"line_end":58,"column_start":8,"column_end":16},"name":"is_alpha","qualname":"::traits::AsChar::is_alpha","value":"fn (self) -> bool","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" tests that self is an alphabetic character","sig":null,"attributes":[{"value":"/ tests that self is an alphabetic character","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46840,"byte_end":46886,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46891,"byte_end":46894,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ warning: for `&str` it recognizes alphabetic","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46899,"byte_end":46947,"line_start":55,"line_end":55,"column_start":5,"column_end":53}},{"value":"/ characters outside of the 52 ASCII letters","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":46952,"byte_end":46998,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47003,"byte_end":47012,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47148,"byte_end":47159,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"is_alphanum","qualname":"::traits::AsChar::is_alphanum","value":"fn (self) -> bool","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" tests that self is an alphabetic character\n or a decimal digit\n","sig":null,"attributes":[{"value":"/ tests that self is an alphabetic character","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47053,"byte_end":47099,"line_start":60,"line_end":60,"column_start":5,"column_end":51}},{"value":"/ or a decimal digit","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47104,"byte_end":47126,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47131,"byte_end":47140,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47240,"byte_end":47252,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"is_dec_digit","qualname":"::traits::AsChar::is_dec_digit","value":"fn (self) -> bool","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" tests that self is a decimal digit\n","sig":null,"attributes":[{"value":"/ tests that self is a decimal digit","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47180,"byte_end":47218,"line_start":64,"line_end":64,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47223,"byte_end":47232,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47329,"byte_end":47341,"line_start":69,"line_end":69,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::traits::AsChar::is_hex_digit","value":"fn (self) -> bool","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" tests that self is an hex digit\n","sig":null,"attributes":[{"value":"/ tests that self is an hex digit","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47272,"byte_end":47307,"line_start":67,"line_end":67,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47312,"byte_end":47321,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47420,"byte_end":47432,"line_start":72,"line_end":72,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::traits::AsChar::is_oct_digit","value":"fn (self) -> bool","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" tests that self is an octal digit\n","sig":null,"attributes":[{"value":"/ tests that self is an octal digit","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47361,"byte_end":47398,"line_start":70,"line_end":70,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47403,"byte_end":47412,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47508,"byte_end":47511,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"len","qualname":"::traits::AsChar::len","value":"fn (self) -> usize","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" gets the len in bytes for self\n","sig":null,"attributes":[{"value":"/ gets the len in bytes for self","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47452,"byte_end":47486,"line_start":73,"line_end":73,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":47491,"byte_end":47500,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50211,"byte_end":50220,"line_start":173,"line_end":173,"column_start":11,"column_end":20},"name":"InputIter","qualname":"::traits::InputIter","value":"InputIter","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166}],"decl_id":null,"docs":" abstracts common iteration operations on the input type","sig":null,"attributes":[{"value":"/ abstracts common iteration operations on the input type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50039,"byte_end":50098,"line_start":169,"line_end":169,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50099,"byte_end":50102,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ it needs a distinction between `Item` and `RawItem` because","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50103,"byte_end":50166,"line_start":171,"line_end":171,"column_start":1,"column_end":64}},{"value":"/ `&[T]` iterates on references","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50167,"byte_end":50200,"line_start":172,"line_end":172,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":158},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50232,"byte_end":50236,"line_start":174,"line_end":174,"column_start":10,"column_end":14},"name":"Item","qualname":"::traits::InputIter::Item","value":"type Item;","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":159},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50247,"byte_end":50254,"line_start":175,"line_end":175,"column_start":10,"column_end":17},"name":"RawItem","qualname":"::traits::InputIter::RawItem","value":"type RawItem;","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":160},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50265,"byte_end":50269,"line_start":176,"line_end":176,"column_start":10,"column_end":14},"name":"Iter","qualname":"::traits::InputIter::Iter","value":"type Iter     : Iterator<Item=(usize, Self::Item)>;","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50321,"byte_end":50329,"line_start":177,"line_end":177,"column_start":10,"column_end":18},"name":"IterElem","qualname":"::traits::InputIter::IterElem","value":"type IterElem : Iterator<Item=Self::Item>;","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50436,"byte_end":50448,"line_start":180,"line_end":180,"column_start":8,"column_end":20},"name":"iter_indices","qualname":"::traits::InputIter::iter_indices","value":"fn (&self) -> Self::Iter","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" returns an iterator over the elements and their byte offsets\n","sig":null,"attributes":[{"value":"/ returns an iterator over the elements and their byte offsets","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50364,"byte_end":50428,"line_start":179,"line_end":179,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50525,"byte_end":50538,"line_start":182,"line_end":182,"column_start":8,"column_end":21},"name":"iter_elements","qualname":"::traits::InputIter::iter_elements","value":"fn (&self) -> Self::IterElem","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" returns an iterator over the elements\n","sig":null,"attributes":[{"value":"/ returns an iterator over the elements","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50476,"byte_end":50517,"line_start":181,"line_end":181,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50619,"byte_end":50627,"line_start":184,"line_end":184,"column_start":8,"column_end":16},"name":"position","qualname":"::traits::InputIter::position","value":"fn <P> (&self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" finds the byte position of the element\n","sig":null,"attributes":[{"value":"/ finds the byte position of the element","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50569,"byte_end":50611,"line_start":183,"line_end":183,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50782,"byte_end":50793,"line_start":186,"line_end":186,"column_start":8,"column_end":19},"name":"slice_index","qualname":"::traits::InputIter::slice_index","value":"fn (&self, count: usize) -> Option<usize>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" get the byte offset from the element's position in the stream\n","sig":null,"attributes":[{"value":"/ get the byte offset from the element's position in the stream","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50709,"byte_end":50774,"line_start":185,"line_end":185,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50878,"byte_end":50887,"line_start":190,"line_end":190,"column_start":11,"column_end":20},"name":"InputTake","qualname":"::traits::InputTake","value":"InputTake","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170}],"decl_id":null,"docs":" abstracts slicing operations\n","sig":null,"attributes":[{"value":"/ abstracts slicing operations","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50835,"byte_end":50867,"line_start":189,"line_end":189,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50938,"byte_end":50942,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"take","qualname":"::traits::InputTake::take","value":"fn <P> (&self, count: usize) -> Option<&Self>","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" returns a slice of `count` bytes\n","sig":null,"attributes":[{"value":"/ returns a slice of `count` bytes","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50894,"byte_end":50930,"line_start":191,"line_end":191,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":51045,"byte_end":51055,"line_start":194,"line_end":194,"column_start":8,"column_end":18},"name":"take_split","qualname":"::traits::InputTake::take_split","value":"fn <P> (&self, count: usize) -> Option<(&Self, &Self)>","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" split the stream at the `count` byte offset\n","sig":null,"attributes":[{"value":"/ split the stream at the `count` byte offset","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":50990,"byte_end":51037,"line_start":193,"line_end":193,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1156},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53826,"byte_end":53828,"line_start":312,"line_end":312,"column_start":3,"column_end":5},"name":"Ok","qualname":"::traits::CompareResult::Ok","value":"CompareResult::Ok","parent":{"krate":0,"index":1155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1158},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53832,"byte_end":53842,"line_start":313,"line_end":313,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::traits::CompareResult::Incomplete","value":"CompareResult::Incomplete","parent":{"krate":0,"index":1155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1160},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53846,"byte_end":53851,"line_start":314,"line_end":314,"column_start":3,"column_end":8},"name":"Error","qualname":"::traits::CompareResult::Error","value":"CompareResult::Error","parent":{"krate":0,"index":1155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1155},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53808,"byte_end":53821,"line_start":311,"line_end":311,"column_start":10,"column_end":23},"name":"CompareResult","qualname":"::traits::CompareResult","value":"CompareResult::{Ok, Incomplete, Error}","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1160}],"decl_id":null,"docs":" indicates wether a comparison was successful, an error, or\n if more data was needed\n","sig":null,"attributes":[{"value":"/ indicates wether a comparison was successful, an error, or","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53681,"byte_end":53743,"line_start":308,"line_end":308,"column_start":1,"column_end":63}},{"value":"/ if more data was needed","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53744,"byte_end":53771,"line_start":309,"line_end":309,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":205},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53901,"byte_end":53908,"line_start":318,"line_end":318,"column_start":11,"column_end":18},"name":"Compare","qualname":"::traits::Compare","value":"Compare<T>","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" abstracts comparison operations\n","sig":null,"attributes":[{"value":"/ abstracts comparison operations","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53855,"byte_end":53890,"line_start":317,"line_end":317,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53969,"byte_end":53976,"line_start":320,"line_end":320,"column_start":6,"column_end":13},"name":"compare","qualname":"::traits::Compare::compare","value":"fn (&self, t: T) -> CompareResult","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" compares self to another value for equality\n","sig":null,"attributes":[{"value":"/ compares self to another value for equality","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":53916,"byte_end":53963,"line_start":319,"line_end":319,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":54287,"byte_end":54302,"line_start":328,"line_end":328,"column_start":6,"column_end":21},"name":"compare_no_case","qualname":"::traits::Compare::compare_no_case","value":"fn (&self, t: T) -> CompareResult","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" compares self to another value for equality\n independently of the case.","sig":null,"attributes":[{"value":"/ compares self to another value for equality","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":54017,"byte_end":54064,"line_start":321,"line_end":321,"column_start":3,"column_end":50}},{"value":"/ independently of the case.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":54067,"byte_end":54097,"line_start":322,"line_end":322,"column_start":3,"column_end":33}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":54100,"byte_end":54103,"line_start":323,"line_end":323,"column_start":3,"column_end":6}},{"value":"/ warning: for `&str`, the comparison is done","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":54106,"byte_end":54153,"line_start":324,"line_end":324,"column_start":3,"column_end":50}},{"value":"/ by lowercasing both strings and comparing","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":54156,"byte_end":54201,"line_start":325,"line_end":325,"column_start":3,"column_end":48}},{"value":"/ the result. This is a temporary solution until","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":54204,"byte_end":54254,"line_start":326,"line_end":326,"column_start":3,"column_end":53}},{"value":"/ a better one appears","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":54257,"byte_end":54281,"line_start":327,"line_end":327,"column_start":3,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":227},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":56661,"byte_end":56670,"line_start":418,"line_end":418,"column_start":11,"column_end":20},"name":"FindToken","qualname":"::traits::FindToken","value":"FindToken<T>","parent":null,"children":[{"krate":0,"index":229}],"decl_id":null,"docs":" look for self in the given input stream\n","sig":null,"attributes":[{"value":"/ look for self in the given input stream","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":56607,"byte_end":56650,"line_start":417,"line_end":417,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":56681,"byte_end":56691,"line_start":419,"line_end":419,"column_start":6,"column_end":16},"name":"find_token","qualname":"::traits::FindToken::find_token","value":"fn (&self, input: T) -> bool","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":247},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":57484,"byte_end":57497,"line_start":456,"line_end":456,"column_start":11,"column_end":24},"name":"FindSubstring","qualname":"::traits::FindSubstring","value":"FindSubstring<T>","parent":null,"children":[{"krate":0,"index":249}],"decl_id":null,"docs":" look for a substring in self\n","sig":null,"attributes":[{"value":"/ look for a substring in self","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":57441,"byte_end":57473,"line_start":455,"line_end":455,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":57508,"byte_end":57522,"line_start":457,"line_end":457,"column_start":6,"column_end":20},"name":"find_substring","qualname":"::traits::FindSubstring::find_substring","value":"fn (&self, substr: T) -> Option<usize>","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":262},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":58686,"byte_end":58693,"line_start":507,"line_end":507,"column_start":11,"column_end":18},"name":"ParseTo","qualname":"::traits::ParseTo","value":"ParseTo<R>","parent":null,"children":[{"krate":0,"index":264}],"decl_id":null,"docs":" used to integrate str's parse() method\n","sig":null,"attributes":[{"value":"/ used to integrate str's parse() method","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":58633,"byte_end":58675,"line_start":506,"line_end":506,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":58704,"byte_end":58712,"line_start":508,"line_end":508,"column_start":6,"column_end":14},"name":"parse_to","qualname":"::traits::ParseTo::parse_to","value":"fn (&self) -> Option<R>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":274},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":59153,"byte_end":59158,"line_start":528,"line_end":528,"column_start":11,"column_end":16},"name":"Slice","qualname":"::traits::Slice","value":"Slice<R>","parent":null,"children":[{"krate":0,"index":276}],"decl_id":null,"docs":" slicing operations using ranges","sig":null,"attributes":[{"value":"/ slicing operations using ranges","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":58988,"byte_end":59023,"line_start":523,"line_end":523,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":59024,"byte_end":59027,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ this trait is loosely based on","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":59028,"byte_end":59062,"line_start":525,"line_end":525,"column_start":1,"column_end":35}},{"value":"/ `Index`, but can actually return","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":59063,"byte_end":59099,"line_start":526,"line_end":526,"column_start":1,"column_end":37}},{"value":"/ something else than a `&[T]` or `&str`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":59100,"byte_end":59142,"line_start":527,"line_end":527,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":59189,"byte_end":59194,"line_start":530,"line_end":530,"column_start":6,"column_end":11},"name":"slice","qualname":"::traits::Slice::slice","value":"fn (&self, range: R) -> Self","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/traits.rs","byte_start":59166,"byte_end":59183,"line_start":529,"line_end":529,"column_start":3,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":281},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"verbose_errors","qualname":"::verbose_errors","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":1921},{"krate":0,"index":1959},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1940},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":310},{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" Error management","sig":null,"attributes":[{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24073,"byte_end":24107,"line_start":464,"line_end":464,"column_start":1,"column_end":35}},{"value":"macro_use","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24108,"byte_end":24120,"line_start":464,"line_end":464,"column_start":36,"column_end":48}},{"value":"! Error management","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61416,"byte_end":61436,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61437,"byte_end":61440,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! there are two ways to handle errors in nom. The first one,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61441,"byte_end":61503,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"! activated by default, uses the `nom::ErrorKind<E=u32>` enum","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61504,"byte_end":61567,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"! in the error branch of `IResult`. This enum can hold either","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61568,"byte_end":61631,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"! a parser specific error code, or a custom error type you","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61632,"byte_end":61692,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"! specify.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61693,"byte_end":61705,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61706,"byte_end":61709,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! If you need more advanced error management, you can activate","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61710,"byte_end":61774,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"! the \"verbose-errors\" compilation feature, which will give you","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61775,"byte_end":61840,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"! the error system available in nom 1.0. The verbose errors","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61841,"byte_end":61902,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"! accumulate error codes and positions as you backtrack through","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61903,"byte_end":61968,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"! the parser tree. From there, you can precisely identify which","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":61969,"byte_end":62034,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"! parts of the input triggered the error case.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62035,"byte_end":62083,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62084,"byte_end":62087,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Please note that the verbose error management is a bit slower","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62088,"byte_end":62153,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"! than the simple one.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62154,"byte_end":62178,"line_start":17,"line_end":17,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1924},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62910,"byte_end":62914,"line_start":33,"line_end":33,"column_start":3,"column_end":7},"name":"Code","qualname":"::verbose_errors::Err::Code","value":"Err::Code(ErrorKind<E>)","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" An error code, represented by an ErrorKind, which can contain a custom error code represented by E\n","sig":null,"attributes":[{"value":"/ An error code, represented by an ErrorKind, which can contain a custom error code represented by E","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62805,"byte_end":62907,"line_start":32,"line_end":32,"column_start":3,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1927},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62972,"byte_end":62976,"line_start":35,"line_end":35,"column_start":3,"column_end":7},"name":"Node","qualname":"::verbose_errors::Err::Node","value":"Err::Node(ErrorKind<E>, Vec<Err<P, E>>)","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" An error code, and the next error\n","sig":null,"attributes":[{"value":"/ An error code, and the next error","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62932,"byte_end":62969,"line_start":34,"line_end":34,"column_start":3,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1931},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63053,"byte_end":63061,"line_start":37,"line_end":37,"column_start":3,"column_end":11},"name":"Position","qualname":"::verbose_errors::Err::Position","value":"Err::Position(ErrorKind<E>, P)","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" An error code, and the input position\n","sig":null,"attributes":[{"value":"/ An error code, and the input position","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63009,"byte_end":63050,"line_start":36,"line_end":36,"column_start":3,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1935},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63141,"byte_end":63153,"line_start":39,"line_end":39,"column_start":3,"column_end":15},"name":"NodePosition","qualname":"::verbose_errors::Err::NodePosition","value":"Err::NodePosition(ErrorKind<E>, P, Vec<Err<P, E>>)","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" An error code, the input position and the next error\n","sig":null,"attributes":[{"value":"/ An error code, the input position and the next error","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63082,"byte_end":63138,"line_start":38,"line_end":38,"column_start":3,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":1921},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62789,"byte_end":62792,"line_start":31,"line_end":31,"column_start":10,"column_end":13},"name":"Err","qualname":"::verbose_errors::Err","value":"Err::{Code, Node, Position, NodePosition}","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1931},{"krate":0,"index":1935}],"decl_id":null,"docs":" Contains the error that a parser can return","sig":null,"attributes":[{"value":"/ Contains the error that a parser can return","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62260,"byte_end":62307,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62308,"byte_end":62311,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If you use the `verbose-errors` compilation feature,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62312,"byte_end":62368,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/ `nom::Err` will be the enum defined here,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62369,"byte_end":62414,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/ otherwise, it will amount to a `ErrorKind<E=u32>`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62415,"byte_end":62469,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62470,"byte_end":62473,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It can represent a linked list of errors, indicating the path taken in the parsing tree, with corresponding position in the input data.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62474,"byte_end":62613,"line_start":28,"line_end":28,"column_start":1,"column_end":140}},{"value":"/ It depends on P, the input position (for a &[u8] parser, it would be a &[u8]), and E, the custom error type (by default, u32)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":62614,"byte_end":62743,"line_start":29,"line_end":29,"column_start":1,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63377,"byte_end":63392,"line_start":46,"line_end":46,"column_start":10,"column_end":25},"name":"into_error_kind","qualname":"<Err<P, E>>::into_error_kind","value":"fn (self) -> ErrorKind<E>","parent":null,"children":[],"decl_id":null,"docs":" Convert Err into ErrorKind.","sig":null,"attributes":[{"value":"/ Convert Err into ErrorKind.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63212,"byte_end":63243,"line_start":43,"line_end":43,"column_start":3,"column_end":34}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63246,"byte_end":63249,"line_start":44,"line_end":44,"column_start":3,"column_end":6}},{"value":"/ This allows application code to use ErrorKind and stay independent from the verbose-errors features activation.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63252,"byte_end":63367,"line_start":45,"line_end":45,"column_start":3,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63812,"byte_end":63819,"line_start":61,"line_end":61,"column_start":10,"column_end":17},"name":"map_err","qualname":"<IResult<I, O, E>>::map_err","value":"fn <N, F> (self, f: F) -> IResult<I, O, N>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, O, N>` by appling a function\n to a contained `Error` value, leaving `Done` and `Incomplete` value\n untouched.\n","sig":null,"attributes":[{"value":"/ Maps a `IResult<I, O, E>` to `IResult<I, O, N>` by appling a function","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63626,"byte_end":63699,"line_start":57,"line_end":57,"column_start":3,"column_end":76}},{"value":"/ to a contained `Error` value, leaving `Done` and `Incomplete` value","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63702,"byte_end":63773,"line_start":58,"line_end":58,"column_start":3,"column_end":74}},{"value":"/ untouched.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63776,"byte_end":63790,"line_start":59,"line_end":59,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63793,"byte_end":63802,"line_start":60,"line_end":60,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":64145,"byte_end":64155,"line_start":72,"line_end":72,"column_start":10,"column_end":20},"name":"unwrap_err","qualname":"<IResult<I, O, E>>::unwrap_err","value":"fn (self) -> Err<I, E>","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Error(I, E)` value, or panic if the `IResult` is not\n `Error`.\n","sig":null,"attributes":[{"value":"/ Unwrap the contained `Error(I, E)` value, or panic if the `IResult` is not","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":64042,"byte_end":64120,"line_start":70,"line_end":70,"column_start":3,"column_end":81}},{"value":"/ `Error`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":64123,"byte_end":64135,"line_start":71,"line_end":71,"column_start":3,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":64459,"byte_end":64473,"line_start":81,"line_end":81,"column_start":10,"column_end":24},"name":"to_full_result","qualname":"<IResult<I, O, E>>::to_full_result","value":"fn (self) -> Result<O, IError<I, E>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the IResult to a std::result::Result\n","sig":null,"attributes":[{"value":"/ Convert the IResult to a std::result::Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":64401,"byte_end":64449,"line_start":80,"line_end":80,"column_start":3,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":64722,"byte_end":64731,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"to_result","qualname":"<IResult<I, O, E>>::to_result","value":"fn (self) -> Result<O, Err<I, E>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the IResult to a std::result::Result\n","sig":null,"attributes":[{"value":"/ Convert the IResult to a std::result::Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":64664,"byte_end":64712,"line_start":89,"line_end":89,"column_start":3,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1964},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70330,"byte_end":70337,"line_start":19,"line_end":19,"column_start":3,"column_end":10},"name":"Unknown","qualname":"::internal::Needed::Unknown","value":"Needed::Unknown","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":" needs more data, but we do not know how much\n","sig":null,"attributes":[{"value":"/ needs more data, but we do not know how much","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70279,"byte_end":70327,"line_start":18,"line_end":18,"column_start":3,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1966},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70379,"byte_end":70383,"line_start":21,"line_end":21,"column_start":3,"column_end":7},"name":"Size","qualname":"::internal::Needed::Size","value":"Needed::Size(usize)","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":" contains the required data size\n","sig":null,"attributes":[{"value":"/ contains the required data size","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70341,"byte_end":70376,"line_start":20,"line_end":20,"column_start":3,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1963},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70268,"byte_end":70274,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Needed","qualname":"::internal::Needed","value":"Needed::{Unknown, Size}","parent":null,"children":[{"krate":0,"index":1964},{"krate":0,"index":1966}],"decl_id":null,"docs":" Contains information on needed data if a parser returned `Incomplete`\n","sig":null,"attributes":[{"value":"/ Contains information on needed data if a parser returned `Incomplete`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70144,"byte_end":70217,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70417,"byte_end":70425,"line_start":25,"line_end":25,"column_start":10,"column_end":18},"name":"is_known","qualname":"<Needed>::is_known","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70575,"byte_end":70578,"line_start":31,"line_end":31,"column_start":10,"column_end":13},"name":"map","qualname":"<Needed>::map","value":"fn <F> (self, f: F) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.\n","sig":null,"attributes":[{"value":"/ Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70471,"byte_end":70553,"line_start":29,"line_end":29,"column_start":3,"column_end":85}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70556,"byte_end":70565,"line_start":30,"line_end":30,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1985},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71678,"byte_end":71682,"line_start":59,"line_end":59,"column_start":3,"column_end":7},"name":"Done","qualname":"::internal::IResult::Done","value":"IResult::Done(I, O)","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data\n","sig":null,"attributes":[{"value":"/ indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71543,"byte_end":71675,"line_start":58,"line_end":58,"column_start":4,"column_end":136}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1989},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71855,"byte_end":71860,"line_start":61,"line_end":61,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::IResult::Error","value":"IResult::Error(Err<I, E>)","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree\n","sig":null,"attributes":[{"value":"/ contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71691,"byte_end":71852,"line_start":60,"line_end":60,"column_start":3,"column_end":164}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1992},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71980,"byte_end":71990,"line_start":63,"line_end":63,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::IResult::Incomplete","value":"IResult::Incomplete(Needed)","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown\n","sig":null,"attributes":[{"value":"/ Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71874,"byte_end":71977,"line_start":62,"line_end":62,"column_start":3,"column_end":106}}]},{"kind":"Enum","id":{"krate":0,"index":1981},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71519,"byte_end":71526,"line_start":57,"line_end":57,"column_start":10,"column_end":17},"name":"IResult","qualname":"::internal::IResult","value":"IResult::{Done, Error, Incomplete}","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1989},{"krate":0,"index":1992}],"decl_id":null,"docs":" Holds the result of parsing functions","sig":null,"attributes":[{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70715,"byte_end":70749,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ Holds the result of parsing functions","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70750,"byte_end":70791,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70792,"byte_end":70795,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ It depends on I, the input type, O, the output type, and E, the error type (by default u32)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70796,"byte_end":70891,"line_start":42,"line_end":42,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70892,"byte_end":70895,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Depending on a compilation flag, the content of the `Error` variant","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70896,"byte_end":70967,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/ can change. By default, it will be a `ErrorKind<E=u32>` (with `E` configurable).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70968,"byte_end":71052,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71053,"byte_end":71056,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ If you activate the `verbose-errors` compilation flags, it will be an","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71057,"byte_end":71130,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/ enum that contains an error code, optionally, an input position,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71131,"byte_end":71199,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ and an error sent by child parsers.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71200,"byte_end":71239,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71240,"byte_end":71243,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The verbose errors feature allows very flexible error management:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71244,"byte_end":71313,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ you can know precisely which parser got to which part of the input.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71314,"byte_end":71385,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ The main drawback is that it is a lot slower than default error","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71386,"byte_end":71453,"line_start":53,"line_end":53,"column_start":1,"column_end":68}},{"value":"/ management.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71454,"byte_end":71469,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":71470,"byte_end":71473,"line_start":55,"line_end":55,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2027},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":72942,"byte_end":72947,"line_start":87,"line_end":87,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::IError::Error","value":"IError::Error(Err<I, E>)","parent":{"krate":0,"index":2024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":72961,"byte_end":72971,"line_start":88,"line_end":88,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::IError::Incomplete","value":"IError::Incomplete(Needed)","parent":{"krate":0,"index":2024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2024},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":72922,"byte_end":72928,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"IError","qualname":"::internal::IError","value":"IError::{Error, Incomplete}","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2030}],"decl_id":null,"docs":" This is the same as IResult, but without Done","sig":null,"attributes":[{"value":"cfg(feature = \"verbose-errors\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":72714,"byte_end":72748,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ This is the same as IResult, but without Done","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":72749,"byte_end":72798,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":72799,"byte_end":72802,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This is used as the Error type when converting to std::result::Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":72803,"byte_end":72876,"line_start":84,"line_end":84,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73291,"byte_end":73298,"line_start":102,"line_end":102,"column_start":10,"column_end":17},"name":"is_done","qualname":"<IResult<I, O, E>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73404,"byte_end":73410,"line_start":109,"line_end":109,"column_start":10,"column_end":16},"name":"is_err","qualname":"<IResult<I, O, E>>::is_err","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73514,"byte_end":73527,"line_start":116,"line_end":116,"column_start":10,"column_end":23},"name":"is_incomplete","qualname":"<IResult<I, O, E>>::is_incomplete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73641,"byte_end":73643,"line_start":123,"line_end":123,"column_start":10,"column_end":12},"name":"or","qualname":"<IResult<I, O, E>>::or","value":"fn (self, other: IResult<I, O, E>) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73956,"byte_end":73959,"line_start":135,"line_end":135,"column_start":10,"column_end":13},"name":"map","qualname":"<IResult<I, O, E>>::map","value":"fn <N, F> (self, f: F) -> IResult<I, N, E>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, N, E>` by appling a function\n to a contained `Done` value, leaving `Error` and `Incomplete` value\n untouched.\n","sig":null,"attributes":[{"value":"/ Maps a `IResult<I, O, E>` to `IResult<I, N, E>` by appling a function","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73770,"byte_end":73843,"line_start":131,"line_end":131,"column_start":3,"column_end":76}},{"value":"/ to a contained `Done` value, leaving `Error` and `Incomplete` value","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73846,"byte_end":73917,"line_start":132,"line_end":132,"column_start":3,"column_end":74}},{"value":"/ untouched.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73920,"byte_end":73934,"line_start":133,"line_end":133,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73937,"byte_end":73946,"line_start":134,"line_end":134,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74341,"byte_end":74348,"line_start":147,"line_end":147,"column_start":10,"column_end":17},"name":"map_inc","qualname":"<IResult<I, O, E>>::map_inc","value":"fn <F> (self, f: F) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, O, E>` by appling a function\n to a contained `Incomplete` value, leaving `Done` and `Error` value\n untouched.\n","sig":null,"attributes":[{"value":"/ Maps a `IResult<I, O, E>` to `IResult<I, O, E>` by appling a function","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74155,"byte_end":74228,"line_start":143,"line_end":143,"column_start":3,"column_end":76}},{"value":"/ to a contained `Incomplete` value, leaving `Done` and `Error` value","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74231,"byte_end":74302,"line_start":144,"line_end":144,"column_start":3,"column_end":74}},{"value":"/ untouched.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74305,"byte_end":74319,"line_start":145,"line_end":145,"column_start":3,"column_end":17}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74322,"byte_end":74331,"line_start":146,"line_end":146,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74663,"byte_end":74669,"line_start":158,"line_end":158,"column_start":10,"column_end":16},"name":"unwrap","qualname":"<IResult<I, O, E>>::unwrap","value":"fn (self) -> (I, O)","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n `Done`.\n","sig":null,"attributes":[{"value":"/ Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74562,"byte_end":74639,"line_start":156,"line_end":156,"column_start":3,"column_end":80}},{"value":"/ `Done`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74642,"byte_end":74653,"line_start":157,"line_end":157,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75013,"byte_end":75022,"line_start":168,"line_end":168,"column_start":10,"column_end":19},"name":"unwrap_or","qualname":"<IResult<I, O, E>>::unwrap_or","value":"fn (self, default: (I, O)) -> (I, O)","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Done(I, O)` value or a default if the `IResult` is not\n `Done`.\n","sig":null,"attributes":[{"value":"/ Unwrap the contained `Done(I, O)` value or a default if the `IResult` is not","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74909,"byte_end":74989,"line_start":166,"line_end":166,"column_start":3,"column_end":83}},{"value":"/ `Done`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":74992,"byte_end":75003,"line_start":167,"line_end":167,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75292,"byte_end":75302,"line_start":178,"line_end":178,"column_start":10,"column_end":20},"name":"unwrap_inc","qualname":"<IResult<I, O, E>>::unwrap_inc","value":"fn (self) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Incomplete(n)` value, or panic if the `IResult` is not\n `Incomplete`.\n","sig":null,"attributes":[{"value":"/ Unwrap the contained `Incomplete(n)` value, or panic if the `IResult` is not","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75182,"byte_end":75262,"line_start":176,"line_end":176,"column_start":3,"column_end":83}},{"value":"/ `Incomplete`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75265,"byte_end":75282,"line_start":177,"line_end":177,"column_start":3,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":340},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75549,"byte_end":75557,"line_start":187,"line_end":187,"column_start":11,"column_end":19},"name":"GetInput","qualname":"::internal::GetInput","value":"GetInput<I>","parent":null,"children":[{"krate":0,"index":342}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75568,"byte_end":75583,"line_start":188,"line_end":188,"column_start":6,"column_end":21},"name":"remaining_input","qualname":"::internal::GetInput::remaining_input","value":"fn (&self) -> Option<I>","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":343},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75618,"byte_end":75627,"line_start":191,"line_end":191,"column_start":11,"column_end":20},"name":"GetOutput","qualname":"::internal::GetOutput","value":"GetOutput<O>","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75638,"byte_end":75644,"line_start":192,"line_end":192,"column_start":6,"column_end":12},"name":"output","qualname":"::internal::GetOutput::output","value":"fn (&self) -> Option<O>","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":445},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"methods","qualname":"::methods","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"decl_id":null,"docs":" Method macro combinators","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24351,"byte_end":24363,"line_start":473,"line_end":473,"column_start":1,"column_end":13}},{"value":"! Method macro combinators","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245283,"byte_end":245311,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245312,"byte_end":245315,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! These macros make parsers as methods of structs","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245316,"byte_end":245367,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"! and that can take methods of structs to call","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245368,"byte_end":245416,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"! as parsers.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245417,"byte_end":245432,"line_start":5,"line_end":5,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245433,"byte_end":245436,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! There is a trick to make them easier to assemble,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245437,"byte_end":245490,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"! combinators are defined like this:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245491,"byte_end":245529,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245530,"byte_end":245533,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245534,"byte_end":245547,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"! macro_rules! tag (","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245548,"byte_end":245570,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"!   ($i:expr, $inp: expr) => (","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245571,"byte_end":245603,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"!     {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245604,"byte_end":245613,"line_start":13,"line_end":13,"column_start":1,"column_end":10}},{"value":"!       ...","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245614,"byte_end":245627,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245628,"byte_end":245637,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"!   );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245638,"byte_end":245646,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245647,"byte_end":245653,"line_start":17,"line_end":17,"column_start":1,"column_end":7}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245654,"byte_end":245661,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245662,"byte_end":245665,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! But when used as methods in other combinators, are used","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245666,"byte_end":245725,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"! like this:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245726,"byte_end":245740,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245741,"byte_end":245744,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245745,"byte_end":245758,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"! method!(my_function<Parser<'a> >, self, tag!(\"abcd\"));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245759,"byte_end":245817,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245818,"byte_end":245825,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245826,"byte_end":245829,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Internally, other combinators will rewrite","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245830,"byte_end":245876,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"! that call to pass the input as second argument:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245877,"byte_end":245928,"line_start":28,"line_end":28,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245929,"byte_end":245932,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245933,"byte_end":245946,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"! macro_rules! method (","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245947,"byte_end":245972,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"!   ($name:ident<$a:ty>, $self_:ident, $submac:ident!( $($args:tt)* )) => (","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":245973,"byte_end":246050,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!     fn $name( $self_: $a, i: &[u8] ) -> $crate::IResult<&[u8], &[u8]> {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246051,"byte_end":246126,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"!       $submac!(i, $($args)*)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246127,"byte_end":246159,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246160,"byte_end":246169,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"!   );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246170,"byte_end":246178,"line_start":36,"line_end":36,"column_start":1,"column_end":9}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246179,"byte_end":246185,"line_start":37,"line_end":37,"column_start":1,"column_end":7}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246186,"byte_end":246193,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246194,"byte_end":246198,"line_start":39,"line_end":39,"column_start":1,"column_end":5}},{"value":"! The `method!` macro is similar to the `named!` macro in the macros module.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246199,"byte_end":246277,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"! While `named!` will create a parser function, `method!` will create a parser","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246278,"byte_end":246358,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"! method on the struct it is defined in.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246359,"byte_end":246401,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246402,"byte_end":246405,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Compared to the `named!` macro there are a few differences in how they are","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246406,"byte_end":246484,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"! invoked. A `method!` invocation always has to have the type of `self`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246485,"byte_end":246558,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"! declared and it can't be a reference due to Rust's borrow lifetime","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246559,"byte_end":246629,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"! restrictions:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246630,"byte_end":246647,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246648,"byte_end":246661,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"! //                  -`self`'s type-","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246662,"byte_end":246701,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"! method!(method_name<  Parser<'a> >, ...);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246702,"byte_end":246747,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246748,"byte_end":246755,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"! `self`'s type always comes first.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246756,"byte_end":246793,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"! The next difference is you have to input the self struct. Due to Rust's","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246794,"byte_end":246869,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"! macro hygiene the macro can't declare it on it's own.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246870,"byte_end":246927,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246928,"byte_end":246941,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"! //                                                 -self-","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":246942,"byte_end":247003,"line_start":56,"line_end":56,"column_start":1,"column_end":62}},{"value":"! method!(method_name<Parser<'a>, &'a str, &'a str>, self, ...);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247004,"byte_end":247070,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247071,"byte_end":247078,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"! When making a parsing struct with parsing methods, due to the static borrow","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247079,"byte_end":247158,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"! checker,calling any parsing methods on self (or any other parsing struct)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247159,"byte_end":247236,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"! will cause self to be moved for the rest of the method.To get around this","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247237,"byte_end":247314,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"! restriction all self is moved into the called method and then the called","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247315,"byte_end":247391,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"! method will return self to the caller.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247392,"byte_end":247434,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"! ","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247435,"byte_end":247439,"line_start":64,"line_end":64,"column_start":1,"column_end":5}},{"value":"! To call a method on self you need to use the `call_m!` macro. For example:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247440,"byte_end":247518,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247519,"byte_end":247532,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"! struct<'a> Parser<'a> {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247533,"byte_end":247560,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"!   parsed: &'a str,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247561,"byte_end":247583,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"! }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247584,"byte_end":247589,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"! impl<'a> Parser<'a> {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247590,"byte_end":247615,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"!   // Constructor omitted for brevity","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247616,"byte_end":247656,"line_start":71,"line_end":71,"column_start":1,"column_end":41}},{"value":"!   method!(take4<Parser<'a>, &'a str, &'a str>, self, take!(4));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247657,"byte_end":247724,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"!   method!(caller<Parser<'a>, &'a str, &'a str>, self, call_m!(self.take4));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247725,"byte_end":247804,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"! }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247805,"byte_end":247810,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247811,"byte_end":247818,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"! More complicated combinations still mostly look the same as their `named!`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247819,"byte_end":247897,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"! counterparts:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247898,"byte_end":247915,"line_start":77,"line_end":77,"column_start":1,"column_end":18}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247916,"byte_end":247929,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"!    method!(pub simple_chain<&mut Parser<'a>, &'a str, &'a str>, self,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":247930,"byte_end":248003,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"!      do_parse!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248004,"byte_end":248023,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"!             call_m!(self.tag_abc)                                        >>","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248024,"byte_end":248103,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"!             call_m!(self.tag_def)                                        >>","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248104,"byte_end":248183,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"!             call_m!(self.tag_ghi)                                        >>","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248184,"byte_end":248263,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"!       last: map!(call_m!(self.simple_peek), |parsed| sb.parsed = parsed) >>","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248264,"byte_end":248343,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"!       (last)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248344,"byte_end":248360,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"!      )","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248361,"byte_end":248371,"line_start":86,"line_end":86,"column_start":1,"column_end":11}},{"value":"!    );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248372,"byte_end":248381,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248382,"byte_end":248389,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"! The three additions to method definitions to remember are:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248390,"byte_end":248452,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"! 1. Specify `self`'s type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248453,"byte_end":248481,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"! 2. Pass `self` to the macro","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248482,"byte_end":248513,"line_start":91,"line_end":91,"column_start":1,"column_end":32}},{"value":"! 4. Call parser methods using the `call_m!` macro.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/methods.rs","byte_start":248514,"byte_end":248567,"line_start":92,"line_end":92,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":469},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bits","qualname":"::bits","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"decl_id":null,"docs":" Bit level parsers and combinators","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24405,"byte_end":24417,"line_start":475,"line_end":475,"column_start":1,"column_end":13}},{"value":"! Bit level parsers and combinators","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299535,"byte_end":299572,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299573,"byte_end":299576,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Bit parsing is handled by tweaking the input in most macros.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299577,"byte_end":299641,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"! In byte level parsing, the input is generally a `&[u8]` passed from combinator","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299642,"byte_end":299724,"line_start":4,"line_end":4,"column_start":1,"column_end":83}},{"value":"! to combinator until the slices are manipulated.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299725,"byte_end":299776,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299777,"byte_end":299780,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Bit parsers take a `(&[u8], usize)` as input. The first part of the tuple is an byte slice,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299781,"byte_end":299876,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"! the second part is a bit offset in the first byte of the slice.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299877,"byte_end":299944,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299945,"byte_end":299948,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! By passing a pair like this, we can leverage most of the combinators, and avoid","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":299949,"byte_end":300032,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"! transforming the whole slice to a vector of booleans. This should make it easy","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":300033,"byte_end":300115,"line_start":11,"line_end":11,"column_start":1,"column_end":83}},{"value":"! to see a byte slice as a bit stream, and parse code points of arbitrary bit length.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/bits.rs","byte_start":300116,"byte_end":300203,"line_start":12,"line_end":12,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":313407,"byte_end":313413,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"tag_cl","qualname":"::nom::tag_cl","value":"fn <'a, 'b> (rec: &'a [u8]) -> Box<Fn(&'b [u8]) -> IResult<&'b [u8], &'b [u8]> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":313390,"byte_end":313399,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":313777,"byte_end":313782,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"print","qualname":"::nom::print","value":"fn <T> (input: T) -> IResult<T, ()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":313736,"byte_end":313759,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":313760,"byte_end":313769,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":313888,"byte_end":313893,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"begin","qualname":"::nom::begin","value":"fn (input: &[u8]) -> IResult<(), &[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":313871,"byte_end":313880,"line_start":40,"line_end":40,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":313960,"byte_end":313964,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"crlf","qualname":"::nom::crlf","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":314568,"byte_end":314583,"line_start":61,"line_end":61,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::nom::not_line_ending","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":315750,"byte_end":315761,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::nom::line_ending","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n')\n","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n')","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":315690,"byte_end":315742,"line_start":90,"line_end":90,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":509},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316448,"byte_end":316451,"line_start":108,"line_end":108,"column_start":8,"column_end":11},"name":"eol","qualname":"::nom::eol","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":511},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316710,"byte_end":316723,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"is_alphabetic","qualname":"::nom::is_alphabetic","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphabetic: A-Z, a-z\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphabetic: A-Z, a-z","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316645,"byte_end":316692,"line_start":115,"line_end":115,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316693,"byte_end":316702,"line_start":116,"line_end":116,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316863,"byte_end":316871,"line_start":123,"line_end":123,"column_start":8,"column_end":16},"name":"is_digit","qualname":"::nom::is_digit","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII digit: 0-9\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII digit: 0-9","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316808,"byte_end":316845,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316846,"byte_end":316855,"line_start":122,"line_end":122,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316992,"byte_end":317004,"line_start":129,"line_end":129,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::nom::is_hex_digit","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII hex digit: 0-9, A-F, a-f\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII hex digit: 0-9, A-F, a-f","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316923,"byte_end":316974,"line_start":127,"line_end":127,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":316975,"byte_end":316984,"line_start":128,"line_end":128,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":514},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317187,"byte_end":317199,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::nom::is_oct_digit","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII octal digit: 0-7\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII octal digit: 0-7","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317126,"byte_end":317169,"line_start":135,"line_end":135,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317170,"byte_end":317179,"line_start":136,"line_end":136,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317323,"byte_end":317338,"line_start":143,"line_end":143,"column_start":8,"column_end":23},"name":"is_alphanumeric","qualname":"::nom::is_alphanumeric","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317251,"byte_end":317305,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317306,"byte_end":317315,"line_start":142,"line_end":142,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317456,"byte_end":317464,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"is_space","qualname":"::nom::is_space","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII space or tab\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII space or tab","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317399,"byte_end":317438,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317439,"byte_end":317448,"line_start":148,"line_end":148,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":517},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317876,"byte_end":317881,"line_start":161,"line_end":161,"column_start":8,"column_end":13},"name":"alpha","qualname":"::nom::alpha","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase alphabetic characters: a-zA-Z\n","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase alphabetic characters: a-zA-Z","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":317788,"byte_end":317868,"line_start":160,"line_end":160,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":318522,"byte_end":318527,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"digit","qualname":"::nom::digit","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more numerical characters: 0-9\n","sig":null,"attributes":[{"value":"/ Recognizes one or more numerical characters: 0-9","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":318462,"byte_end":318514,"line_start":182,"line_end":182,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":319194,"byte_end":319203,"line_start":205,"line_end":205,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::nom::hex_digit","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more hexadecimal numerical characters: 0-9, A-F, a-f\n","sig":null,"attributes":[{"value":"/ Recognizes one or more hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":319112,"byte_end":319186,"line_start":204,"line_end":204,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":319846,"byte_end":319855,"line_start":227,"line_end":227,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::nom::oct_digit","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7\n","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":319790,"byte_end":319838,"line_start":226,"line_end":226,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":320523,"byte_end":320535,"line_start":249,"line_end":249,"column_start":8,"column_end":20},"name":"alphanumeric","qualname":"::nom::alphanumeric","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more numerical and alphabetic characters: 0-9a-zA-Z\n","sig":null,"attributes":[{"value":"/ Recognizes one or more numerical and alphabetic characters: 0-9a-zA-Z","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":320442,"byte_end":320515,"line_start":248,"line_end":248,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":527},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":321175,"byte_end":321180,"line_start":271,"line_end":271,"column_start":8,"column_end":13},"name":"space","qualname":"::nom::space","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs\n","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":321125,"byte_end":321167,"line_start":270,"line_end":270,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":529},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":321883,"byte_end":321893,"line_start":294,"line_end":294,"column_start":8,"column_end":18},"name":"multispace","qualname":"::nom::multispace","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds\n","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":321803,"byte_end":321875,"line_start":293,"line_end":293,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":531},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":322558,"byte_end":322570,"line_start":316,"line_end":316,"column_start":8,"column_end":20},"name":"sized_buffer","qualname":"::nom::sized_buffer","value":"fn (input: &[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":322924,"byte_end":322929,"line_start":332,"line_end":332,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::nom::be_u8","value":"fn (i: &[u8]) -> IResult<&[u8], u8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer (equivalent to take!(1)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":322841,"byte_end":322906,"line_start":330,"line_end":330,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":322907,"byte_end":322916,"line_start":331,"line_end":331,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":533},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323125,"byte_end":323131,"line_start":342,"line_end":342,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::nom::be_u16","value":"fn (i: &[u8]) -> IResult<&[u8], u16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 2 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian unsigned 2 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323057,"byte_end":323107,"line_start":340,"line_end":340,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323108,"byte_end":323117,"line_start":341,"line_end":341,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":534},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323376,"byte_end":323382,"line_start":353,"line_end":353,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::nom::be_u24","value":"fn (i: &[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 3 byte integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian unsigned 3 byte integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323309,"byte_end":323358,"line_start":351,"line_end":351,"column_start":1,"column_end":50}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323359,"byte_end":323368,"line_start":352,"line_end":352,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":535},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323654,"byte_end":323660,"line_start":364,"line_end":364,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::nom::be_u32","value":"fn (i: &[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 4 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian unsigned 4 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323586,"byte_end":323636,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323637,"byte_end":323646,"line_start":363,"line_end":363,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":536},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323954,"byte_end":323960,"line_start":375,"line_end":375,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::nom::be_u64","value":"fn (i: &[u8]) -> IResult<&[u8], u64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 8 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian unsigned 8 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323886,"byte_end":323936,"line_start":373,"line_end":373,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":323937,"byte_end":323946,"line_start":374,"line_end":374,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":537},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324368,"byte_end":324373,"line_start":387,"line_end":387,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::nom::be_i8","value":"fn (i: &[u8]) -> IResult<&[u8], i8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer (equivalent to take!(1)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324288,"byte_end":324350,"line_start":385,"line_end":385,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324351,"byte_end":324360,"line_start":386,"line_end":386,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324512,"byte_end":324518,"line_start":393,"line_end":393,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::nom::be_i16","value":"fn (i: &[u8]) -> IResult<&[u8], i16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 2 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian signed 2 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324446,"byte_end":324494,"line_start":391,"line_end":391,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324495,"byte_end":324504,"line_start":392,"line_end":392,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324660,"byte_end":324666,"line_start":399,"line_end":399,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::nom::be_i24","value":"fn (i: &[u8]) -> IResult<&[u8], i32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 3 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian signed 3 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324594,"byte_end":324642,"line_start":397,"line_end":397,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324643,"byte_end":324652,"line_start":398,"line_end":398,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":540},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324943,"byte_end":324949,"line_start":406,"line_end":406,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::nom::be_i32","value":"fn (i: &[u8]) -> IResult<&[u8], i32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 4 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian signed 4 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324877,"byte_end":324925,"line_start":404,"line_end":404,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":324926,"byte_end":324935,"line_start":405,"line_end":405,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325091,"byte_end":325097,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::nom::be_i64","value":"fn (i: &[u8]) -> IResult<&[u8], i64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 8 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes big endian signed 8 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325025,"byte_end":325073,"line_start":410,"line_end":410,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325074,"byte_end":325083,"line_start":411,"line_end":411,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":542},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325256,"byte_end":325261,"line_start":418,"line_end":418,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::nom::le_u8","value":"fn (i: &[u8]) -> IResult<&[u8], u8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer (equivalent to take!(1)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325173,"byte_end":325238,"line_start":416,"line_end":416,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325239,"byte_end":325248,"line_start":417,"line_end":417,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":543},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325460,"byte_end":325466,"line_start":428,"line_end":428,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::nom::le_u16","value":"fn (i: &[u8]) -> IResult<&[u8], u16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 2 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian unsigned 2 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325389,"byte_end":325442,"line_start":426,"line_end":426,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325443,"byte_end":325452,"line_start":427,"line_end":427,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":544},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325714,"byte_end":325720,"line_start":439,"line_end":439,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::nom::le_u24","value":"fn (i: &[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 3 byte integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian unsigned 3 byte integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325644,"byte_end":325696,"line_start":437,"line_end":437,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325697,"byte_end":325706,"line_start":438,"line_end":438,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":545},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325995,"byte_end":326001,"line_start":450,"line_end":450,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::nom::le_u32","value":"fn (i: &[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 4 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian unsigned 4 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325924,"byte_end":325977,"line_start":448,"line_end":448,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":325978,"byte_end":325987,"line_start":449,"line_end":449,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":546},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326298,"byte_end":326304,"line_start":461,"line_end":461,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::nom::le_u64","value":"fn (i: &[u8]) -> IResult<&[u8], u64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 8 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian unsigned 8 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326227,"byte_end":326280,"line_start":459,"line_end":459,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326281,"byte_end":326290,"line_start":460,"line_end":460,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":547},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326712,"byte_end":326717,"line_start":473,"line_end":473,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::nom::le_i8","value":"fn (i: &[u8]) -> IResult<&[u8], i8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer (equivalent to take!(1)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326632,"byte_end":326694,"line_start":471,"line_end":471,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326695,"byte_end":326704,"line_start":472,"line_end":472,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":548},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326859,"byte_end":326865,"line_start":479,"line_end":479,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::nom::le_i16","value":"fn (i: &[u8]) -> IResult<&[u8], i16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 2 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian signed 2 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326790,"byte_end":326841,"line_start":477,"line_end":477,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326842,"byte_end":326851,"line_start":478,"line_end":478,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":549},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327010,"byte_end":327016,"line_start":485,"line_end":485,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::nom::le_i24","value":"fn (i: &[u8]) -> IResult<&[u8], i32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 3 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian signed 3 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326941,"byte_end":326992,"line_start":483,"line_end":483,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":326993,"byte_end":327002,"line_start":484,"line_end":484,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":550},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327296,"byte_end":327302,"line_start":492,"line_end":492,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::nom::le_i32","value":"fn (i: &[u8]) -> IResult<&[u8], i32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 4 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian signed 4 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327227,"byte_end":327278,"line_start":490,"line_end":490,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327279,"byte_end":327288,"line_start":491,"line_end":491,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":551},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327447,"byte_end":327453,"line_start":498,"line_end":498,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::nom::le_i64","value":"fn (i: &[u8]) -> IResult<&[u8], i64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 8 bytes integer\n","sig":null,"attributes":[{"value":"/ Recognizes little endian signed 8 bytes integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327378,"byte_end":327429,"line_start":496,"line_end":496,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327430,"byte_end":327439,"line_start":497,"line_end":497,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2107},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327622,"byte_end":327625,"line_start":505,"line_end":505,"column_start":3,"column_end":6},"name":"Big","qualname":"::nom::Endianness::Big","value":"Endianness::Big","parent":{"krate":0,"index":2106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2109},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327629,"byte_end":327635,"line_start":506,"line_end":506,"column_start":3,"column_end":9},"name":"Little","qualname":"::nom::Endianness::Little","value":"Endianness::Little","parent":{"krate":0,"index":2106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2106},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327607,"byte_end":327617,"line_start":504,"line_end":504,"column_start":10,"column_end":20},"name":"Endianness","qualname":"::nom::Endianness","value":"Endianness::{Big, Little}","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2109}],"decl_id":null,"docs":" Configurable endianness\n","sig":null,"attributes":[{"value":"/ Configurable endianness","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":327529,"byte_end":327556,"line_start":502,"line_end":502,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":558},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329341,"byte_end":329347,"line_start":537,"line_end":537,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::nom::be_f32","value":"fn (input: &[u8]) -> IResult<&[u8], f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian 4 bytes floating point number\n","sig":null,"attributes":[{"value":"/ Recognizes big endian 4 bytes floating point number","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329268,"byte_end":329323,"line_start":535,"line_end":535,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329324,"byte_end":329333,"line_start":536,"line_end":536,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329648,"byte_end":329654,"line_start":551,"line_end":551,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::nom::be_f64","value":"fn (input: &[u8]) -> IResult<&[u8], f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian 8 bytes floating point number\n","sig":null,"attributes":[{"value":"/ Recognizes big endian 8 bytes floating point number","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329575,"byte_end":329630,"line_start":549,"line_end":549,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329631,"byte_end":329640,"line_start":550,"line_end":550,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":560},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329958,"byte_end":329964,"line_start":565,"line_end":565,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::nom::le_f32","value":"fn (input: &[u8]) -> IResult<&[u8], f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian 4 bytes floating point number\n","sig":null,"attributes":[{"value":"/ Recognizes little endian 4 bytes floating point number","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329882,"byte_end":329940,"line_start":563,"line_end":563,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":329941,"byte_end":329950,"line_start":564,"line_end":564,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":561},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":330268,"byte_end":330274,"line_start":579,"line_end":579,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::nom::le_f64","value":"fn (input: &[u8]) -> IResult<&[u8], f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian 8 bytes floating point number\n","sig":null,"attributes":[{"value":"/ Recognizes little endian 8 bytes floating point number","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":330192,"byte_end":330250,"line_start":577,"line_end":577,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":330251,"byte_end":330260,"line_start":578,"line_end":578,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":562},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":330556,"byte_end":330563,"line_start":593,"line_end":593,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::nom::hex_u32","value":"fn (input: &[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer\n","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":330502,"byte_end":330538,"line_start":591,"line_end":591,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":330539,"byte_end":330548,"line_start":592,"line_end":592,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331221,"byte_end":331230,"line_start":620,"line_end":620,"column_start":8,"column_end":17},"name":"non_empty","qualname":"::nom::non_empty","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes non empty buffers\n","sig":null,"attributes":[{"value":"/ Recognizes non empty buffers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331171,"byte_end":331203,"line_start":618,"line_end":618,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331204,"byte_end":331213,"line_start":619,"line_end":619,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":565},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331562,"byte_end":331566,"line_start":632,"line_end":632,"column_start":8,"column_end":12},"name":"rest","qualname":"::nom::rest","value":"fn (input: &[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input.\n","sig":null,"attributes":[{"value":"/ Return the remaining input.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331513,"byte_end":331544,"line_start":630,"line_end":630,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331545,"byte_end":331554,"line_start":631,"line_end":631,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":566},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331721,"byte_end":331727,"line_start":638,"line_end":638,"column_start":8,"column_end":14},"name":"rest_s","qualname":"::nom::rest_s","value":"fn (input: &str) -> IResult<&str, &str>","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input, for strings.\n","sig":null,"attributes":[{"value":"/ Return the remaining input, for strings.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331659,"byte_end":331703,"line_start":636,"line_end":636,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331704,"byte_end":331713,"line_start":637,"line_end":637,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":567},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331920,"byte_end":331925,"line_start":644,"line_end":644,"column_start":8,"column_end":13},"name":"float","qualname":"::nom::float","value":"fn (input: &[u8]) -> IResult<&[u8], f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a f32\n","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a f32","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331817,"byte_end":331888,"line_start":642,"line_end":642,"column_start":1,"column_end":72}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":331889,"byte_end":331912,"line_start":643,"line_end":643,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":568},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":332480,"byte_end":332487,"line_start":667,"line_end":667,"column_start":8,"column_end":15},"name":"float_s","qualname":"::nom::float_s","value":"fn (input: &str) -> IResult<&str, f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a string and returns a f32\n","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a string and returns a f32","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":332382,"byte_end":332448,"line_start":665,"line_end":665,"column_start":1,"column_end":67}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":332449,"byte_end":332472,"line_start":666,"line_end":666,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":569},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":333045,"byte_end":333051,"line_start":690,"line_end":690,"column_start":8,"column_end":14},"name":"double","qualname":"::nom::double","value":"fn (input: &[u8]) -> IResult<&[u8], f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a f64\n","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a f64","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":332942,"byte_end":333013,"line_start":688,"line_end":688,"column_start":1,"column_end":72}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":333014,"byte_end":333037,"line_start":689,"line_end":689,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":570},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":333606,"byte_end":333614,"line_start":713,"line_end":713,"column_start":8,"column_end":16},"name":"double_s","qualname":"::nom::double_s","value":"fn (input: &str) -> IResult<&str, f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a string and returns a f64\n","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a string and returns a f64","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":333508,"byte_end":333574,"line_start":711,"line_end":711,"column_start":1,"column_end":67}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/nom.rs","byte_start":333575,"byte_end":333598,"line_start":712,"line_end":712,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":2371},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/character.rs","byte_start":355045,"byte_end":355052,"line_start":85,"line_end":85,"column_start":56,"column_end":63},"name":"newline","qualname":"::character::newline","value":"fn (i: &[u8]) -> crate::IResult<&[u8], char, u32>","parent":null,"children":[],"decl_id":null,"docs":"Matches a newline character '\\n'\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2376},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/character.rs","byte_start":355126,"byte_end":355129,"line_start":87,"line_end":87,"column_start":52,"column_end":55},"name":"tab","qualname":"::character::tab","value":"fn (i: &[u8]) -> crate::IResult<&[u8], char, u32>","parent":null,"children":[],"decl_id":null,"docs":"Matches a tab character '\\t'\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":584},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/character.rs","byte_start":355159,"byte_end":355166,"line_start":89,"line_end":89,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::anychar","value":"fn <T> (input: T) -> IResult<T, char>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":586},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"whitespace","qualname":"::whitespace","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":611}],"decl_id":null,"docs":" Support for whitespace delimited formats","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24484,"byte_end":24496,"line_start":480,"line_end":480,"column_start":1,"column_end":13}},{"value":"! Support for whitespace delimited formats","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356421,"byte_end":356465,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356466,"byte_end":356469,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! a lot of textual formats allows spaces and other","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356470,"byte_end":356522,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"! types of separators between tokens. Handling it","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356523,"byte_end":356574,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"! manually with nom means wrapping all parsers","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356575,"byte_end":356623,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"! like this:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356624,"byte_end":356638,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356639,"byte_end":356642,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356643,"byte_end":356656,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"! named!(token, delimited!(space, tk, space));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356657,"byte_end":356705,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356706,"byte_end":356713,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356714,"byte_end":356717,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! To ease the development of such parsers, you","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356718,"byte_end":356766,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"! can use the whitespace parsing facility, which works","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356767,"byte_end":356823,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"! as follows:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356824,"byte_end":356839,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356840,"byte_end":356843,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356844,"byte_end":356851,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate nom;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356852,"byte_end":356888,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"! # use nom::IResult::Done;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356889,"byte_end":356918,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"! # fn main() {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356919,"byte_end":356936,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"! named!(tuple<&[u8], (&[u8], &[u8]) >,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356937,"byte_end":356978,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"!   ws!(tuple!( take!(3), tag!(\"de\") ))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":356979,"byte_end":357020,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357021,"byte_end":357027,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357028,"byte_end":357031,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! assert_eq!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357032,"byte_end":357047,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"!   tuple(&b\" \\t abc de fg\"[..]),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357048,"byte_end":357083,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"!   Done(&b\"fg\"[..], (&b\"abc\"[..], &b\"de\"[..]))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357084,"byte_end":357133,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357134,"byte_end":357140,"line_start":27,"line_end":27,"column_start":1,"column_end":7}},{"value":"! # }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357141,"byte_end":357148,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357149,"byte_end":357156,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357157,"byte_end":357160,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! The `ws!` combinator will modify the parser to","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357161,"byte_end":357211,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"! intersperse space parsers everywhere. By default,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357212,"byte_end":357265,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"! it will consume the following characters: \" \\t\\r\\n\".","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357266,"byte_end":357322,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357323,"byte_end":357326,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! If you want to modify that behaviour, you can make","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357327,"byte_end":357381,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"! your own whitespace wrapper. As an example, if","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357382,"byte_end":357432,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"! you don't want to consume ends of lines, only","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357433,"byte_end":357482,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"! spaces and tabs, you can do it like this:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357483,"byte_end":357528,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357529,"byte_end":357532,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357533,"byte_end":357540,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate nom;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357541,"byte_end":357577,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"! # use nom::IResult::Done;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357578,"byte_end":357607,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"! named!(pub space, eat_separator!(&b\" \\t\"[..]));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357608,"byte_end":357659,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357660,"byte_end":357663,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! #[macro_export]","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357664,"byte_end":357683,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"! macro_rules! sp (","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357684,"byte_end":357705,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!   ($i:expr, $($args:tt)*) => (","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357706,"byte_end":357740,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"!     {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357741,"byte_end":357750,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"!       sep!($i, space, $($args)*)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357751,"byte_end":357787,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"!     }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357788,"byte_end":357797,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"!   )","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357798,"byte_end":357805,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357806,"byte_end":357812,"line_start":52,"line_end":52,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357813,"byte_end":357816,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357817,"byte_end":357834,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"! named!(tuple<&[u8], (&[u8], &[u8]) >,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357835,"byte_end":357876,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"!   sp!(tuple!( take!(3), tag!(\"de\") ))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357877,"byte_end":357918,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357919,"byte_end":357925,"line_start":57,"line_end":57,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357926,"byte_end":357929,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! assert_eq!(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357930,"byte_end":357945,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"!   tuple(&b\" \\t abc de fg\"[..]),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357946,"byte_end":357981,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"!   Done(&b\"fg\"[..], (&b\"abc\"[..], &b\"de\"[..]))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":357982,"byte_end":358031,"line_start":61,"line_end":61,"column_start":1,"column_end":50}},{"value":"! );","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358032,"byte_end":358038,"line_start":62,"line_end":62,"column_start":1,"column_end":7}},{"value":"! # }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358039,"byte_end":358046,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358047,"byte_end":358054,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358055,"byte_end":358058,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! This combinator works by replacing each combinator with","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358059,"byte_end":358118,"line_start":66,"line_end":66,"column_start":1,"column_end":60}},{"value":"! a version that supports wrapping with separator parsers.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358119,"byte_end":358179,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"! It will not support the combinators you wrote in your","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358180,"byte_end":358237,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"! own code. You can still manually wrap them with the separator","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358238,"byte_end":358303,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"! you want, or you can copy the macros defined in src/whitespace.rs","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358304,"byte_end":358373,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"! and modify them to support a new combinator:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358374,"byte_end":358422,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"! * copy the combinator's code here, add the _sep suffix","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358423,"byte_end":358481,"line_start":72,"line_end":72,"column_start":1,"column_end":59}},{"value":"! * add the `$separator:expr` as second argument","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358482,"byte_end":358532,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"! * wrap any sub parsers with sep!($separator, $submac!($($args)*))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358533,"byte_end":358602,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"! * reference it in the definition of `sep!` as follows:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358603,"byte_end":358661,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358662,"byte_end":358665,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358666,"byte_end":358679,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"!  ($i:expr,  $separator:ident, my_combinator ! ($($rest:tt)*) ) => {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358680,"byte_end":358751,"line_start":78,"line_end":78,"column_start":1,"column_end":72}},{"value":"!    wrap_sep!($i,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358752,"byte_end":358772,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"!      $separator,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358773,"byte_end":358793,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"!      my_combinator_sep!($separator, $($rest)*)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358794,"byte_end":358844,"line_start":81,"line_end":81,"column_start":1,"column_end":51}},{"value":"!    )","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358845,"byte_end":358853,"line_start":82,"line_end":82,"column_start":1,"column_end":9}},{"value":"!  };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358854,"byte_end":358861,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358862,"byte_end":358869,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":358870,"byte_end":358873,"line_start":85,"line_end":85,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":608},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":384631,"byte_end":384633,"line_start":794,"line_end":794,"column_start":8,"column_end":10},"name":"sp","qualname":"::whitespace::sp","value":"fn <'a, T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_imports)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/whitespace.rs","byte_start":384599,"byte_end":384623,"line_start":793,"line_end":793,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2389},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392556,"byte_end":392563,"line_start":17,"line_end":17,"column_start":3,"column_end":10},"name":"Element","qualname":"::stream::Input::Element","value":"Input::Element(I)","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2392},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392570,"byte_end":392575,"line_start":18,"line_end":18,"column_start":3,"column_end":8},"name":"Empty","qualname":"::stream::Input::Empty","value":"Input::Empty","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2394},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392579,"byte_end":392582,"line_start":19,"line_end":19,"column_start":3,"column_end":6},"name":"Eof","qualname":"::stream::Input::Eof","value":"Input::Eof(Option<I>)","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2387},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392543,"byte_end":392548,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Input","qualname":"::stream::Input","value":"Input::{Element, Empty, Eof}","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2392},{"krate":0,"index":2394}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2407},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392752,"byte_end":392756,"line_start":26,"line_end":26,"column_start":3,"column_end":7},"name":"Done","qualname":"::stream::ConsumerState::Done","value":"ConsumerState::Done(M, O)","parent":{"krate":0,"index":2403},"children":[],"decl_id":null,"docs":" A value of type O has been produced\n","sig":null,"attributes":[{"value":"/ A value of type O has been produced","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392710,"byte_end":392749,"line_start":25,"line_end":25,"column_start":3,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2411},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392811,"byte_end":392816,"line_start":28,"line_end":28,"column_start":3,"column_end":8},"name":"Error","qualname":"::stream::ConsumerState::Error","value":"ConsumerState::Error(E)","parent":{"krate":0,"index":2403},"children":[],"decl_id":null,"docs":" An error of type E has been encountered\n","sig":null,"attributes":[{"value":"/ An error of type E has been encountered","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392765,"byte_end":392808,"line_start":27,"line_end":27,"column_start":3,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2414},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392896,"byte_end":392904,"line_start":30,"line_end":30,"column_start":3,"column_end":11},"name":"Continue","qualname":"::stream::ConsumerState::Continue","value":"ConsumerState::Continue(M)","parent":{"krate":0,"index":2403},"children":[],"decl_id":null,"docs":" Continue applying, and pass a message of type M to the data source\n","sig":null,"attributes":[{"value":"/ Continue applying, and pass a message of type M to the data source","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392823,"byte_end":392893,"line_start":29,"line_end":29,"column_start":3,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":2403},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392679,"byte_end":392692,"line_start":24,"line_end":24,"column_start":10,"column_end":23},"name":"ConsumerState","qualname":"::stream::ConsumerState","value":"ConsumerState::{Done, Error, Continue}","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2411},{"krate":0,"index":2414}],"decl_id":null,"docs":" Stores a consumer's current computation state\n","sig":null,"attributes":[{"value":"/ Stores a consumer's current computation state","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392597,"byte_end":392646,"line_start":22,"line_end":22,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392971,"byte_end":392974,"line_start":34,"line_end":34,"column_start":10,"column_end":13},"name":"map","qualname":"<ConsumerState<O, E, M>>::map","value":"fn <P, F> (&self, f: F) -> ConsumerState<P, E, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393281,"byte_end":393289,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"flat_map","qualname":"<ConsumerState<O, E, M>>::flat_map","value":"fn <P, F> (&self, f: F) -> ConsumerState<P, E, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":634},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393773,"byte_end":393781,"line_start":52,"line_end":52,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::stream::Consumer","value":"Consumer<I, O, E, M>","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"decl_id":null,"docs":" The Consumer trait wraps a computation and its state","sig":null,"attributes":[{"value":"/ The Consumer trait wraps a computation and its state","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393596,"byte_end":393652,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393653,"byte_end":393656,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ it depends on the input type I, the produced value's type O, the error type E, and the message type M","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393657,"byte_end":393762,"line_start":51,"line_end":51,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393891,"byte_end":393897,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"name":"handle","qualname":"::stream::Consumer::handle","value":"fn (&mut self, input: Input<I>) -> &ConsumerState<O, E, M>","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" implement handle for the current computation, returning the new state of the consumer\n","sig":null,"attributes":[{"value":"/ implement handle for the current computation, returning the new state of the consumer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393796,"byte_end":393885,"line_start":54,"line_end":54,"column_start":3,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393989,"byte_end":393994,"line_start":57,"line_end":57,"column_start":6,"column_end":11},"name":"state","qualname":"::stream::Consumer::state","value":"fn (&self) -> &ConsumerState<O, E, M>","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" returns the current state\n","sig":null,"attributes":[{"value":"/ returns the current state","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":393954,"byte_end":393983,"line_start":56,"line_end":56,"column_start":3,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":641},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394396,"byte_end":394404,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"Producer","qualname":"::stream::Producer","value":"Producer<'b, I, M: 'b>","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":649}],"decl_id":null,"docs":" The producer wraps a data source, like file or network, and applies a consumer on it","sig":null,"attributes":[{"value":"/ The producer wraps a data source, like file or network, and applies a consumer on it","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394032,"byte_end":394120,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394121,"byte_end":394124,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ it handles buffer copying and reallocation, to provide streaming patterns.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394125,"byte_end":394203,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ it depends on the input type I, and the message type M.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394204,"byte_end":394263,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/ the consumer can change the way data is produced (for example, to seek in the source) by sending a message of type M.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394264,"byte_end":394385,"line_start":65,"line_end":65,"column_start":1,"column_end":122}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":395083,"byte_end":395088,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"name":"apply","qualname":"::stream::Producer::apply","value":"fn <'a, O, E> (&'b mut self, consumer: &'a mut Consumer<I, O, E, M>) -> &'a ConsumerState<O, E, M>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Applies a consumer once on the produced data, and return the consumer's state","sig":null,"attributes":[{"value":"/ Applies a consumer once on the produced data, and return the consumer's state","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394421,"byte_end":394502,"line_start":67,"line_end":67,"column_start":3,"column_end":84}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394505,"byte_end":394508,"line_start":68,"line_end":68,"column_start":3,"column_end":6}},{"value":"/ a new producer has to implement this method.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394511,"byte_end":394559,"line_start":69,"line_end":69,"column_start":3,"column_end":51}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394562,"byte_end":394565,"line_start":70,"line_end":70,"column_start":3,"column_end":6}},{"value":"/ WARNING: if the `ConsumerState` generated by your consumer has a reference","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394568,"byte_end":394646,"line_start":71,"line_end":71,"column_start":3,"column_end":81}},{"value":"/ to the input, it will generate borrow checking errors such as","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394649,"byte_end":394714,"line_start":72,"line_end":72,"column_start":3,"column_end":68}},{"value":"/ `error: cannot borrow `producer` as mutable more than once at a time [E0499]`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394717,"byte_end":394799,"line_start":73,"line_end":73,"column_start":3,"column_end":85}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394802,"byte_end":394805,"line_start":74,"line_end":74,"column_start":3,"column_end":6}},{"value":"/ It is caused by the producer's ability to refill the input at will, so it can modify","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394808,"byte_end":394896,"line_start":75,"line_end":75,"column_start":3,"column_end":91}},{"value":"/ the input slice the `ConsumerState` is referring to.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394899,"byte_end":394955,"line_start":76,"line_end":76,"column_start":3,"column_end":59}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394958,"byte_end":394961,"line_start":77,"line_end":77,"column_start":3,"column_end":6}},{"value":"/ To avoid that kind of issue, try to do all the computations on input slices inside the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":394964,"byte_end":395054,"line_start":78,"line_end":78,"column_start":3,"column_end":93}},{"value":"/ `Consumer` chain","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":395057,"byte_end":395077,"line_start":79,"line_end":79,"column_start":3,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":395284,"byte_end":395287,"line_start":83,"line_end":83,"column_start":6,"column_end":9},"name":"run","qualname":"::stream::Producer::run","value":"fn <'a, O, E> (&'b mut self, consumer: &'a mut Consumer<I, O, E, M>) -> Option<&O>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Applies a consumer once on the produced data, and returns the generated value if there is one\n","sig":null,"attributes":[{"value":"/ Applies a consumer once on the produced data, and returns the generated value if there is one","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":395181,"byte_end":395278,"line_start":82,"line_end":82,"column_start":3,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":395611,"byte_end":395625,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"ProducerRepeat","qualname":"::stream::ProducerRepeat","value":"ProducerRepeat {  }","parent":null,"children":[{"krate":0,"index":655}],"decl_id":null,"docs":" ProducerRepeat takes a single value, and generates it at each step\n","sig":null,"attributes":[{"value":"/ ProducerRepeat takes a single value, and generates it at each step","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":395529,"byte_end":395599,"line_start":93,"line_end":93,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":664},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396277,"byte_end":396288,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"MemProducer","qualname":"::stream::MemProducer","value":"MemProducer {  }","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":" A MemProducer generates values from an in memory byte buffer","sig":null,"attributes":[{"value":"/ A MemProducer generates values from an in memory byte buffer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396045,"byte_end":396109,"line_start":115,"line_end":115,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396110,"byte_end":396113,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ it generates data by chunks, and keeps track of how much was consumed.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396114,"byte_end":396188,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"/ It can receive messages of type `Move` to handle consumption and seeking","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396189,"byte_end":396265,"line_start":118,"line_end":118,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396407,"byte_end":396410,"line_start":127,"line_end":127,"column_start":10,"column_end":13},"name":"new","qualname":"<MemProducer>::new","value":"fn (buffer: &'x [u8], chunk_size: usize) -> MemProducer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2428},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396704,"byte_end":396711,"line_start":140,"line_end":140,"column_start":3,"column_end":10},"name":"Consume","qualname":"::stream::Move::Consume","value":"Move::Consume(usize)","parent":{"krate":0,"index":2427},"children":[],"decl_id":null,"docs":" indcates how much data was consumed\n","sig":null,"attributes":[{"value":"/ indcates how much data was consumed","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396662,"byte_end":396701,"line_start":139,"line_end":139,"column_start":3,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2431},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396780,"byte_end":396784,"line_start":142,"line_end":142,"column_start":3,"column_end":7},"name":"Seek","qualname":"::stream::Move::Seek","value":"Move::Seek(SeekFrom)","parent":{"krate":0,"index":2427},"children":[],"decl_id":null,"docs":" indicates where in the input the consumer must seek\n","sig":null,"attributes":[{"value":"/ indicates where in the input the consumer must seek","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396722,"byte_end":396777,"line_start":141,"line_end":141,"column_start":3,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2434},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396834,"byte_end":396839,"line_start":144,"line_end":144,"column_start":3,"column_end":8},"name":"Await","qualname":"::stream::Move::Await","value":"Move::Await(Needed)","parent":{"krate":0,"index":2427},"children":[],"decl_id":null,"docs":" indicates more data is needed\n","sig":null,"attributes":[{"value":"/ indicates more data is needed","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396798,"byte_end":396831,"line_start":143,"line_end":143,"column_start":3,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2427},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396653,"byte_end":396657,"line_start":138,"line_end":138,"column_start":10,"column_end":14},"name":"Move","qualname":"::stream::Move","value":"Move::{Consume, Seek, Await}","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2434}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2450},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":399531,"byte_end":399537,"line_start":228,"line_end":228,"column_start":3,"column_end":9},"name":"Normal","qualname":"::stream::FileProducerState::Normal","value":"FileProducerState::Normal","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2452},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":399541,"byte_end":399546,"line_start":229,"line_end":229,"column_start":3,"column_end":8},"name":"Error","qualname":"::stream::FileProducerState::Error","value":"FileProducerState::Error","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2454},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":399550,"byte_end":399553,"line_start":230,"line_end":230,"column_start":3,"column_end":6},"name":"Eof","qualname":"::stream::FileProducerState::Eof","value":"FileProducerState::Eof","parent":{"krate":0,"index":2449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2449},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":399509,"byte_end":399526,"line_start":227,"line_end":227,"column_start":10,"column_end":27},"name":"FileProducerState","qualname":"::stream::FileProducerState","value":"FileProducerState::{Normal, Error, Eof}","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2454}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2467},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":399585,"byte_end":399597,"line_start":234,"line_end":234,"column_start":12,"column_end":24},"name":"FileProducer","qualname":"::stream::FileProducer","value":"FileProducer {  }","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":399778,"byte_end":399781,"line_start":245,"line_end":245,"column_start":10,"column_end":13},"name":"new","qualname":"<FileProducer>::new","value":"fn (filename: &str, buffer_size: usize) -> io::Result<FileProducer>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":400199,"byte_end":400204,"line_start":255,"line_end":255,"column_start":10,"column_end":15},"name":"state","qualname":"<FileProducer>::state","value":"fn (&self) -> FileProducerState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":400330,"byte_end":400336,"line_start":260,"line_end":260,"column_start":10,"column_end":16},"name":"refill","qualname":"<FileProducer>::refill","value":"fn (&mut self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":401188,"byte_end":401194,"line_start":291,"line_end":291,"column_start":10,"column_end":16},"name":"resize","qualname":"<FileProducer>::resize","value":"fn (&mut self, s: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Resize the internal buffer, copy the data to the new one and returned how much data was copied","sig":null,"attributes":[{"value":"/ Resize the internal buffer, copy the data to the new one and returned how much data was copied","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":400970,"byte_end":401068,"line_start":288,"line_end":288,"column_start":3,"column_end":101}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":401071,"byte_end":401074,"line_start":289,"line_end":289,"column_start":3,"column_end":6}},{"value":"/ If the new buffer is smaller, the prefix will be copied, and the rest of the data will be dropped","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":401077,"byte_end":401178,"line_start":290,"line_end":290,"column_start":3,"column_end":104}}]},{"kind":"Function","id":{"krate":0,"index":687},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":401546,"byte_end":401551,"line_start":308,"line_end":308,"column_start":8,"column_end":13},"name":"shift","qualname":"::stream::shift","value":"fn (s: &mut [u8], start: usize, end: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":695},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":404202,"byte_end":404213,"line_start":394,"line_end":394,"column_start":12,"column_end":23},"name":"MapConsumer","qualname":"::stream::MapConsumer","value":"MapConsumer {  }","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709}],"decl_id":null,"docs":" MapConsumer takes a function S -> T and applies it on a consumer producing values of type S\n","sig":null,"attributes":[{"value":"/ MapConsumer takes a function S -> T and applies it on a consumer producing values of type S","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":404095,"byte_end":404190,"line_start":393,"line_end":393,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":404527,"byte_end":404530,"line_start":404,"line_end":404,"column_start":10,"column_end":13},"name":"new","qualname":"<MapConsumer>::new","value":"fn (c: &'a mut C, f: F) -> MapConsumer<'a, C, R, S, T, E, M, F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":405884,"byte_end":405897,"line_start":440,"line_end":440,"column_start":12,"column_end":25},"name":"ChainConsumer","qualname":"::stream::ChainConsumer","value":"ChainConsumer {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"decl_id":null,"docs":" ChainConsumer takes a consumer C1 R -> S, and a consumer C2 S -> T, and makes a consumer R -> T by applying C2 on C1's result\n","sig":null,"attributes":[{"value":"/ ChainConsumer takes a consumer C1 R -> S, and a consumer C2 S -> T, and makes a consumer R -> T by applying C2 on C1's result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":405743,"byte_end":405872,"line_start":439,"line_end":439,"column_start":1,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":406213,"byte_end":406216,"line_start":449,"line_end":449,"column_start":10,"column_end":13},"name":"new","qualname":"<ChainConsumer>::new","value":"fn (c1: &'a mut C1, c2: &'b mut C2) -> ChainConsumer<'a, 'b, C1, C2, R, S, T, E, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":41020,"byte_end":41029,"line_start":638,"line_end":638,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63199,"byte_end":63202,"line_start":42,"line_end":42,"column_start":11,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63607,"byte_end":63614,"line_start":56,"line_end":56,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":65144,"byte_end":65147,"line_start":106,"line_end":106,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":65437,"byte_end":65440,"line_start":116,"line_end":116,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70399,"byte_end":70405,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73265,"byte_end":73272,"line_start":101,"line_end":101,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75705,"byte_end":75712,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75894,"byte_end":75901,"line_start":204,"line_end":204,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":76077,"byte_end":76084,"line_start":213,"line_end":213,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":76275,"byte_end":76282,"line_start":222,"line_end":222,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":76458,"byte_end":76465,"line_start":231,"line_end":231,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":76633,"byte_end":76640,"line_start":240,"line_end":240,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392939,"byte_end":392952,"line_start":33,"line_end":33,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":395693,"byte_end":395707,"line_start":98,"line_end":98,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396380,"byte_end":396391,"line_start":126,"line_end":126,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396893,"byte_end":396904,"line_start":147,"line_end":147,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":399754,"byte_end":399766,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":401795,"byte_end":401807,"line_start":318,"line_end":318,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":404486,"byte_end":404497,"line_start":403,"line_end":403,"column_start":71,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":405195,"byte_end":405206,"line_start":423,"line_end":423,"column_start":93,"column_end":104},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":406165,"byte_end":406178,"line_start":448,"line_end":448,"column_start":90,"column_end":103},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":407103,"byte_end":407116,"line_start":470,"line_end":470,"column_start":112,"column_end":125},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24129,"byte_end":24143,"line_start":464,"line_end":464,"column_start":57,"column_end":71},"ref_id":{"krate":0,"index":281}},{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24372,"byte_end":24379,"line_start":473,"line_end":473,"column_start":22,"column_end":29},"ref_id":{"krate":0,"index":445}},{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24426,"byte_end":24430,"line_start":475,"line_end":475,"column_start":22,"column_end":26},"ref_id":{"krate":0,"index":469}},{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/lib.rs","byte_start":24505,"byte_end":24515,"line_start":481,"line_end":481,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":586}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/util.rs","byte_start":41020,"byte_end":41029,"line_start":638,"line_end":638,"column_start":11,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63199,"byte_end":63202,"line_start":42,"line_end":42,"column_start":11,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":63607,"byte_end":63614,"line_start":56,"line_end":56,"column_start":13,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":65144,"byte_end":65147,"line_start":106,"line_end":106,"column_start":48,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1921},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/verbose_errors.rs","byte_start":65437,"byte_end":65440,"line_start":116,"line_end":116,"column_start":50,"column_end":53},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1921},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":70399,"byte_end":70405,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":73265,"byte_end":73272,"line_start":101,"line_end":101,"column_start":13,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75705,"byte_end":75712,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":340}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":75894,"byte_end":75901,"line_start":204,"line_end":204,"column_start":28,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":340}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":76077,"byte_end":76084,"line_start":213,"line_end":213,"column_start":36,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":340}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":76275,"byte_end":76282,"line_start":222,"line_end":222,"column_start":38,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":76458,"byte_end":76465,"line_start":231,"line_end":231,"column_start":29,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/internal.rs","byte_start":76633,"byte_end":76640,"line_start":240,"line_end":240,"column_start":37,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":392939,"byte_end":392952,"line_start":33,"line_end":33,"column_start":29,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":395693,"byte_end":395707,"line_start":98,"line_end":98,"column_start":44,"column_end":58},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":653},"to":{"krate":0,"index":641}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396380,"byte_end":396391,"line_start":126,"line_end":126,"column_start":10,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":396893,"byte_end":396904,"line_start":147,"line_end":147,"column_start":43,"column_end":54},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":664},"to":{"krate":0,"index":641}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":399754,"byte_end":399766,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":401795,"byte_end":401807,"line_start":318,"line_end":318,"column_start":41,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2467},"to":{"krate":0,"index":641}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":404486,"byte_end":404497,"line_start":403,"line_end":403,"column_start":71,"column_end":82},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":405195,"byte_end":405206,"line_start":423,"line_end":423,"column_start":93,"column_end":104},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":695},"to":{"krate":0,"index":634}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":406165,"byte_end":406178,"line_start":448,"line_end":448,"column_start":90,"column_end":103},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-3.2.1/src/stream.rs","byte_start":407103,"byte_end":407116,"line_start":470,"line_end":470,"column_start":112,"column_end":125},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":731},"to":{"krate":0,"index":634}}]}