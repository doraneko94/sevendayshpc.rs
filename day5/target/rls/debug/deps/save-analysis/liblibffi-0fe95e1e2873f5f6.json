{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4","program":"/home/doraneko94/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","libffi","/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=0fe95e1e2873f5f6","-C","extra-filename=-0fe95e1e2873f5f6","--out-dir","/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps","-L","dependency=/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps","--extern","abort_on_panic=/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps/libabort_on_panic-03e9128b370f1e78.rmeta","--extern","libc=/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps/liblibc-e54e88e9594030d4.rmeta","--extern","libffi_sys=/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps/liblibffi_sys-68568c4c254e89ca.rmeta","--cap-lints","allow","-L","/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/build/libffi-sys-9a38b1fe4c1f52a2/out/libffi-root/lib","-L","/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/build/libffi-sys-9a38b1fe4c1f52a2/out/libffi-root/lib64","--error-format=json","--sysroot","/home/doraneko94/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/doraneko94/sevendayshpc.rs/day5/target/rls/debug/deps/liblibffi-0fe95e1e2873f5f6.rmeta"},"prelude":{"crate_id":{"name":"libffi","disambiguator":[2708200314102997201,969840749711823921]},"crate_root":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src","external_crates":[{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12673765241971086519,1979875191208036248]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16221439354469382097,15565837348772828253]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15613252303691562375,4556165055238676072]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12269617896898487533,65142111397584226]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15862783141653200230,4773813417861420487]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[501305773035659233,3889300012469539238]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9126002216567348836,15610270334556716503]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9479301707518706798,13352731276321566042]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[15203654865662241151,17897348793673631766]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10290502124864695413,7672610073830174493]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14838544226648722576,13006716085524361330]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9246889555580827340,16878203682218964580]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8284748314555817558,4769950866534510046]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14671874173783541769,17969261176539820175]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":15,"id":{"name":"abort_on_panic","disambiguator":[4593792638107622881,16678123765660590250]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[10638855031498270696,13451507708601508054]}},{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","num":17,"id":{"name":"libffi_sys","disambiguator":[14205839190398636113,10003913634525406201]}}],"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":0,"byte_end":3452,"line_start":1,"line_end":101,"column_start":1,"column_end":13}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3404,"byte_end":3405,"line_start":96,"line_end":96,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"ffi_prep_cif_var, sint64, ffi_closure_free, uint32, ffi_closure_alloc, sint8, ffi_status_FFI_OK, ffi_prep_closure_loc, ffi_abi_FFI_DEFAULT_ABI, ffi_type_longdouble, ffi_type_float, ffi_type_sint32, ffi_type_uint16, ffi_type_void, float, _ffi_type, void, uint64, ffi_call, sint16, ffi_type_enum_STRUCT, uint8, ffi_type, ffi_status, ffi_status_FFI_BAD_TYPEDEF, ffi_type_double, ffi_type_uint64, ffi_type_sint16, ffi_type_uint8, ffi_abi, ffi_prep_cif, ffi_cif, sint32, uint16, ffi_closure, ffi_status_FFI_BAD_ABI, FfiAbi, double, ffi_type_pointer, ffi_type_sint64, ffi_type_uint32, ffi_type_sint8, pointer, longdouble","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":17,"index":151},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5962,"byte_end":5968,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"alias_span":null,"name":"FfiAbi","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":17,"index":150},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5970,"byte_end":5993,"line_start":71,"line_end":71,"column_start":26,"column_end":49},"alias_span":null,"name":"ffi_abi_FFI_DEFAULT_ABI","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6034,"byte_end":6038,"line_start":74,"line_end":74,"column_start":23,"column_end":27},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6040,"byte_end":6045,"line_start":74,"line_end":74,"column_start":29,"column_end":34},"alias_span":null,"name":"CType","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":3056},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27930,"byte_end":27937,"line_start":24,"line_end":24,"column_start":17,"column_end":24},"alias_span":null,"name":"CodePtr","value":"","parent":{"krate":0,"index":31}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6096,"byte_end":6097,"line_start":78,"line_end":78,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31509,"byte_end":31517,"line_start":18,"line_end":18,"column_start":15,"column_end":23},"alias_span":null,"name":"Callback","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31519,"byte_end":31530,"line_start":18,"line_end":18,"column_start":25,"column_end":36},"alias_span":null,"name":"CallbackMut","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":0,"index":3056},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31532,"byte_end":31539,"line_start":18,"line_end":18,"column_start":38,"column_end":45},"alias_span":null,"name":"CodePtr","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":17,"index":151},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31555,"byte_end":31562,"line_start":19,"line_end":19,"column_start":15,"column_end":22},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31566,"byte_end":31572,"line_start":19,"line_end":19,"column_start":26,"column_end":32},"name":"FfiAbi","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":17,"index":150},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31574,"byte_end":31597,"line_start":19,"line_end":19,"column_start":34,"column_end":57},"alias_span":null,"name":"ffi_abi_FFI_DEFAULT_ABI","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31676,"byte_end":31680,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":0,"index":2996},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31719,"byte_end":31726,"line_start":28,"line_end":28,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":17,"index":151},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67967,"byte_end":67974,"line_start":117,"line_end":117,"column_start":15,"column_end":22},"alias_span":null,"name":"ffi_abi","value":"","parent":{"krate":0,"index":209}},{"kind":"Use","ref_id":{"krate":17,"index":150},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67976,"byte_end":67999,"line_start":117,"line_end":117,"column_start":24,"column_end":47},"alias_span":null,"name":"ffi_abi_FFI_DEFAULT_ABI","value":"","parent":{"krate":0,"index":209}},{"kind":"Use","ref_id":{"krate":17,"index":247},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68001,"byte_end":68010,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68014,"byte_end":68022,"line_start":117,"line_end":117,"column_start":62,"column_end":70},"name":"ffi_type","value":"","parent":{"krate":0,"index":209}},{"kind":"Use","ref_id":{"krate":17,"index":191},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68024,"byte_end":68034,"line_start":117,"line_end":117,"column_start":72,"column_end":82},"alias_span":null,"name":"ffi_status","value":"","parent":{"krate":0,"index":209}},{"kind":"Use","ref_id":{"krate":17,"index":257},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68050,"byte_end":68057,"line_start":118,"line_end":118,"column_start":15,"column_end":22},"alias_span":null,"name":"ffi_cif","value":"","parent":{"krate":0,"index":209}},{"kind":"Use","ref_id":{"krate":17,"index":280},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68059,"byte_end":68070,"line_start":118,"line_end":118,"column_start":24,"column_end":35},"alias_span":null,"name":"ffi_closure","value":"","parent":{"krate":0,"index":209}},{"kind":"Use","ref_id":{"krate":17,"index":157},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68379,"byte_end":68392,"line_start":127,"line_end":127,"column_start":19,"column_end":32},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68396,"byte_end":68400,"line_start":127,"line_end":127,"column_start":36,"column_end":40},"name":"void","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":159},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68420,"byte_end":68434,"line_start":128,"line_end":128,"column_start":19,"column_end":33},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68438,"byte_end":68443,"line_start":128,"line_end":128,"column_start":37,"column_end":42},"name":"uint8","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":161},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68463,"byte_end":68477,"line_start":129,"line_end":129,"column_start":19,"column_end":33},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68481,"byte_end":68486,"line_start":129,"line_end":129,"column_start":37,"column_end":42},"name":"sint8","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":163},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68506,"byte_end":68521,"line_start":130,"line_end":130,"column_start":19,"column_end":34},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68525,"byte_end":68531,"line_start":130,"line_end":130,"column_start":38,"column_end":44},"name":"uint16","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":165},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68551,"byte_end":68566,"line_start":131,"line_end":131,"column_start":19,"column_end":34},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68570,"byte_end":68576,"line_start":131,"line_end":131,"column_start":38,"column_end":44},"name":"sint16","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":167},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68596,"byte_end":68611,"line_start":132,"line_end":132,"column_start":19,"column_end":34},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68615,"byte_end":68621,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"name":"uint32","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":169},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68641,"byte_end":68656,"line_start":133,"line_end":133,"column_start":19,"column_end":34},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68660,"byte_end":68666,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"name":"sint32","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":171},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68686,"byte_end":68701,"line_start":134,"line_end":134,"column_start":19,"column_end":34},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68705,"byte_end":68711,"line_start":134,"line_end":134,"column_start":38,"column_end":44},"name":"uint64","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":173},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68731,"byte_end":68746,"line_start":135,"line_end":135,"column_start":19,"column_end":34},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68750,"byte_end":68756,"line_start":135,"line_end":135,"column_start":38,"column_end":44},"name":"sint64","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":175},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68776,"byte_end":68790,"line_start":136,"line_end":136,"column_start":19,"column_end":33},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68794,"byte_end":68799,"line_start":136,"line_end":136,"column_start":37,"column_end":42},"name":"float","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":177},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68819,"byte_end":68834,"line_start":137,"line_end":137,"column_start":19,"column_end":34},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68838,"byte_end":68844,"line_start":137,"line_end":137,"column_start":38,"column_end":44},"name":"double","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":179},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68864,"byte_end":68880,"line_start":138,"line_end":138,"column_start":19,"column_end":35},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68884,"byte_end":68891,"line_start":138,"line_end":138,"column_start":39,"column_end":46},"name":"pointer","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":17,"index":181},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68911,"byte_end":68930,"line_start":139,"line_end":139,"column_start":19,"column_end":38},"alias_span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68934,"byte_end":68944,"line_start":139,"line_end":139,"column_start":42,"column_end":52},"name":"longdouble","value":"","parent":{"krate":0,"index":233}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":0,"byte_end":3452,"line_start":1,"line_end":101,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":48},{"krate":0,"index":209}],"decl_id":null,"docs":" Rust bindings for [libffi](https://sourceware.org/libffi/).","sig":null,"attributes":[{"value":"! Rust bindings for [libffi](https://sourceware.org/libffi/).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":56,"byte_end":119,"line_start":2,"line_end":2,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":120,"byte_end":123,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! The C libffi library provides two main facilities: assembling calls","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":124,"byte_end":195,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"! to functions dynamically, and creating closures that can be called","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":196,"byte_end":266,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"! as ordinary C functions. In Rust, the latter means that we can turn","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":267,"byte_end":338,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"! a Rust lambda (or any object implementing `Fn`/`FnMut`) into an","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":339,"byte_end":406,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"! ordinary C function pointer that we can pass as a callback to C.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":407,"byte_end":475,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":476,"byte_end":479,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The easiest way to use this library is via the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":480,"byte_end":530,"line_start":10,"line_end":10,"column_start":1,"column_end":51}},{"value":"! [`high`](high/index.html) layer module, but more flexibility (and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":531,"byte_end":600,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! less checking) is provided by the [`middle`](middle/index.html) and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":601,"byte_end":672,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"! [`low`](low/index.html) layers.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":673,"byte_end":708,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":709,"byte_end":712,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":713,"byte_end":724,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":725,"byte_end":728,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Building libffi will build lifbffi-sys, which will in turn build the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":729,"byte_end":801,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"! libffi C library [from github](https://github.com/libffi/libffi),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":802,"byte_end":871,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"! which requires that you have a working make, C compiler, automake,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":872,"byte_end":942,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"! autoconf, and texinfo first. It’s [on","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":943,"byte_end":986,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"! crates.io](https://crates.io/crates/libffi), so you can add","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":987,"byte_end":1050,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1051,"byte_end":1054,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1055,"byte_end":1066,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1067,"byte_end":1085,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"! libffi = \"0.6.4\"","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1086,"byte_end":1106,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1107,"byte_end":1114,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1115,"byte_end":1118,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! to your `Cargo.toml` and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1119,"byte_end":1147,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1148,"byte_end":1151,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1152,"byte_end":1163,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"! extern crate libffi;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1164,"byte_end":1188,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1189,"byte_end":1196,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1197,"byte_end":1200,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! to your crate root.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1201,"byte_end":1224,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1225,"byte_end":1228,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! This crate supports Rust version 1.20 and later.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1229,"byte_end":1281,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1282,"byte_end":1285,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1286,"byte_end":1304,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1305,"byte_end":1308,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! This library is organized in four layers, each of which attempts to","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1309,"byte_end":1380,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"! provide more safety and a simpler interface than the next layer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1381,"byte_end":1448,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"! down. From top to bottom:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1449,"byte_end":1478,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1479,"byte_end":1482,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"!   - The [`high`](high/index.html) layer provides safe(?) and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1483,"byte_end":1547,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"!     automatic marshalling of Rust closures into C function pointers.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1548,"byte_end":1620,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"!   - The [`middle`](middle/index.html) layer provides memory-managed","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1621,"byte_end":1692,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"!     abstractions for assembling calls and closures, but is unsafe","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1693,"byte_end":1762,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"!     because it doesn’t check argument types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1763,"byte_end":1813,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"!   - The [`low`](low/index.html) layer makes no attempts at safety,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1814,"byte_end":1884,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"!     but provides a more idiomatically “Rusty” API than the underlying","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1885,"byte_end":1962,"line_start":50,"line_end":50,"column_start":1,"column_end":74}},{"value":"!     C library.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1963,"byte_end":1981,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"!   - The [`raw`](raw/index.html) layer is a re-export of the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":1982,"byte_end":2045,"line_start":52,"line_end":52,"column_start":1,"column_end":64}},{"value":"!     [`libffi-sys`](https://crates.io/crates/libffi-sys) crate,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2046,"byte_end":2112,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"!     a direct mapping of the C libffi library into Rust, generated by","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2113,"byte_end":2185,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"!     [bindgen](https://crates.io/crates/bindgen).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2186,"byte_end":2238,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2239,"byte_end":2242,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! It should be possible to use any layer without dipping into lower","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2243,"byte_end":2312,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"! layers (and it will be considered a bug to the extent that it","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2313,"byte_end":2378,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"! isn’t).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2379,"byte_end":2392,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2393,"byte_end":2396,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2397,"byte_end":2411,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2412,"byte_end":2415,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! In this example, we convert a Rust lambda containing a free variable","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2416,"byte_end":2488,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"! into an ordinary C code pointer. The type of `fun` below is","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2489,"byte_end":2552,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"! `extern \"C\" fn(u64, u64) -> u64`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2553,"byte_end":2590,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2591,"byte_end":2594,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2595,"byte_end":2602,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"! use libffi::high::Closure2;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2603,"byte_end":2634,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2635,"byte_end":2638,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! let x = 5u64;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2639,"byte_end":2656,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"! let f = |y: u64, z: u64| x + y + z;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2657,"byte_end":2696,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2697,"byte_end":2700,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! let closure = Closure2::new(&f);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2701,"byte_end":2737,"line_start":73,"line_end":73,"column_start":1,"column_end":37}},{"value":"! let fun     = closure.code_ptr();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2738,"byte_end":2775,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2776,"byte_end":2779,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! assert_eq!(18, fun(6, 7));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2780,"byte_end":2810,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2811,"byte_end":2818,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":2820,"byte_end":2842,"line_start":79,"line_end":79,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3374,"byte_end":3377,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":7}],"decl_id":null,"docs":" Raw definitions imported from the C library (via bindgen).","sig":null,"attributes":[{"value":"/ Raw definitions imported from the C library (via bindgen).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3082,"byte_end":3144,"line_start":90,"line_end":90,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3145,"byte_end":3148,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This module is generated by bindgen and undocumented. It’s intended","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3149,"byte_end":3222,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ as the basis for higher-level bindings, but you can see the [C libffi","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3223,"byte_end":3296,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ documentation](http://www.atmark-techno.com/~yashi/libffi.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3297,"byte_end":3365,"line_start":94,"line_end":94,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"high","qualname":"::high","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":318},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2995}],"decl_id":null,"docs":" High layer providing automatic marshalling of Rust closures\n as C function pointers.","sig":null,"attributes":[{"value":"! High layer providing automatic marshalling of Rust closures","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3454,"byte_end":3517,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"! as C function pointers.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3518,"byte_end":3545,"line_start":2,"line_end":2,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3546,"byte_end":3549,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! The main facility here is given by the structs","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3550,"byte_end":3600,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"! <code>Closure<em>N</em></code>,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3601,"byte_end":3636,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"! <code>Closure<span></span>Mut<em>N</em></code>,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3637,"byte_end":3688,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"! and <code>Closure<span></span>Once<em>N</em></code>,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3689,"byte_end":3745,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"! for natural numbers *`N`*","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3746,"byte_end":3775,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"! from `0` to `12` (as of","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3776,"byte_end":3803,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"! now). These represent C closures of *`N`* arguments, which can be","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3804,"byte_end":3873,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"! used to turn Rust lambdas (or in generally, anything that implements","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3874,"byte_end":3946,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"! `Fn` or `FnMut`) into ordinary C function pointers. For example, a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":3947,"byte_end":4017,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"! Rust value of type `Fn(u32, u32) -> u64` can be turned into a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4018,"byte_end":4083,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"! closure of type `Closure2<u32, u32, u64>` using","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4084,"byte_end":4135,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"! [`Closure2::new`](struct.Closure2.html#method.new). Then a C","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4136,"byte_end":4200,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"! function pointer of type `extern \"C\" fn(u32, u32) -> u64` can be","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4201,"byte_end":4269,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"! borrowed from the closure and passed to C.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4270,"byte_end":4316,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4317,"byte_end":4320,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! The above usage case eliminates much of the boilerplate involved in","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4321,"byte_end":4392,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"! creating a closure as compared to the `middle` and `low` layers, but","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4393,"byte_end":4465,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"! at the price of flexibility. Some flexibility can be recovered by","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4466,"byte_end":4535,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"! manually constructing and configuring a CIF (*e.g.,* a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4536,"byte_end":4594,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"! [`Cif2`](struct.Cif2.html)) and then creating the closure with","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4595,"byte_end":4661,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"! [`Closure2::new_with_cif`](struct.Closure2.html#method.new_with_cif).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4662,"byte_end":4735,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4736,"byte_end":4739,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! See the [`call`](call/index.html) submodule for a simple interface","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4740,"byte_end":4810,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"! to dynamic calls to C functions.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4811,"byte_end":4847,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4848,"byte_end":4851,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4852,"byte_end":4866,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4867,"byte_end":4870,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! Here we use [`ClosureMut1`](struct.ClosureMut1.html), which is the type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4871,"byte_end":4946,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! for creating mutable closures of one argument. We use it to turn a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":4947,"byte_end":5017,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"! Rust lambda into a C function pointer.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5018,"byte_end":5060,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5061,"byte_end":5064,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5065,"byte_end":5072,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"! use libffi::high::ClosureMut1;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5073,"byte_end":5107,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5108,"byte_end":5111,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! let mut x = 0u64;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5112,"byte_end":5133,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"! let mut f = |y: u32| { x += y as u64; x };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5134,"byte_end":5180,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5181,"byte_end":5184,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! let closure = ClosureMut1::new(&mut f);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5185,"byte_end":5228,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"! let counter = closure.code_ptr();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5229,"byte_end":5266,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5267,"byte_end":5270,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! assert_eq!(5, counter(5));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5271,"byte_end":5301,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"! assert_eq!(6, counter(1));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5302,"byte_end":5332,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"! assert_eq!(8, counter(2));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5333,"byte_end":5363,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5364,"byte_end":5371,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5372,"byte_end":5375,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! Note that in the above example, `counter` is an ordinary C function","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5376,"byte_end":5447,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"! pointer of type `extern \"C\" fn(u64) -> u64`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5448,"byte_end":5496,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5497,"byte_end":5500,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Here’s an example using `ClosureOnce3` to create a closure that owns","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5501,"byte_end":5575,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"! a vector:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5576,"byte_end":5589,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5590,"byte_end":5593,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5594,"byte_end":5601,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"! use libffi::high::ClosureOnce3;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5602,"byte_end":5637,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5638,"byte_end":5641,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! let v = vec![1, 2, 3, 4, 5];","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5642,"byte_end":5674,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"! let mut f = move |x: usize, y: usize, z: usize| {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5675,"byte_end":5728,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"!     v[x] + v[y] + v[z]","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5729,"byte_end":5755,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"! };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5756,"byte_end":5762,"line_start":61,"line_end":61,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5763,"byte_end":5766,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! let closure = ClosureOnce3::new(f);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5767,"byte_end":5806,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"! let call = closure.code_ptr();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5807,"byte_end":5841,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5842,"byte_end":5845,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! assert_eq!(12, call(2, 3, 4));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5846,"byte_end":5880,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5881,"byte_end":5888,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5889,"byte_end":5892,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Invoking the closure a second time will panic.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":5893,"byte_end":5943,"line_start":69,"line_end":69,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::high::types","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":271},{"krate":0,"index":278},{"krate":0,"index":275},{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":22},{"krate":0,"index":25}],"decl_id":null,"docs":" Representations of C types for the high layer.\n","sig":null,"attributes":[{"value":"! Representations of C types for the high layer.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":23613,"byte_end":23663,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24043,"byte_end":24047,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Type","qualname":"::high::types::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":" Represents a C type statically associated with a Rust type.","sig":null,"attributes":[{"value":"/ Represents a C type statically associated with a Rust type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":23723,"byte_end":23786,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":23787,"byte_end":23790,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ In particular, the run-time value describes a particular C type,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":23791,"byte_end":23859,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ while the type parameter `T` is the equivalent Rust type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":23860,"byte_end":23921,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/ Instances of this type are created via the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":23922,"byte_end":23968,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/ [`CType`](trait.CType.html) trait.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":23969,"byte_end":24007,"line_start":12,"line_end":12,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24396,"byte_end":24407,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"into_middle","qualname":"<Type<T>>::into_middle","value":"fn (self) -> middle::Type","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying representation as used by the\n [`middle`](../../middle/index.html) layer.\n","sig":null,"attributes":[{"value":"/ Gets the underlying representation as used by the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24280,"byte_end":24333,"line_start":27,"line_end":27,"column_start":5,"column_end":58}},{"value":"/ [`middle`](../../middle/index.html) layer.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24338,"byte_end":24384,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24802,"byte_end":24807,"line_start":41,"line_end":41,"column_start":18,"column_end":23},"name":"CType","qualname":"::high::types::CType","value":"CType: Copy","parent":null,"children":[{"krate":0,"index":20}],"decl_id":null,"docs":" Types that we can automatically marshall to/from C.","sig":null,"attributes":[{"value":"/ Types that we can automatically marshall to/from C.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24462,"byte_end":24517,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24518,"byte_end":24521,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In particular, for any type `T` that implements `CType`, we can","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24522,"byte_end":24589,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/ get a `Type<T>` for describing that type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24590,"byte_end":24635,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ This trait is unsafe to implement because if the libffi type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24636,"byte_end":24700,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ associated with a Rust type doesn’t match then we get","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24701,"byte_end":24760,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/ undefined behavior.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24761,"byte_end":24784,"line_start":40,"line_end":40,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":25001,"byte_end":25006,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"reify","qualname":"::high::types::CType::reify","value":"fn () -> Type<Self>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Creates or retrieves a `Type<T>` for any type `T: CType`.","sig":null,"attributes":[{"value":"/ Creates or retrieves a `Type<T>` for any type `T: CType`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24821,"byte_end":24882,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24887,"byte_end":24890,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ We can use the resulting object to assemble a CIF to set up","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24895,"byte_end":24958,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"/ a call that uses type `T`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24963,"byte_end":24993,"line_start":45,"line_end":45,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"call","qualname":"::high::call","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":307},{"krate":0,"index":315},{"krate":0,"index":312},{"krate":0,"index":35},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":45}],"decl_id":null,"docs":" Simple dynamic calls.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6049,"byte_end":6061,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"! Simple dynamic calls.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27418,"byte_end":27443,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27444,"byte_end":27447,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This API allows us to call a code pointer with an array of","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27448,"byte_end":27510,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"! arguments, using libffi to set up the call.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27511,"byte_end":27558,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27559,"byte_end":27562,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27563,"byte_end":27577,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27578,"byte_end":27581,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27582,"byte_end":27589,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"! extern \"C\" fn hypot(x: f32, y: f32) -> f32 {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27590,"byte_end":27638,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"!     (x * x + y * y).sqrt()","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27639,"byte_end":27669,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27670,"byte_end":27675,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27676,"byte_end":27679,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! # #[macro_use] extern crate libffi;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27680,"byte_end":27719,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"! # fn main() {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27720,"byte_end":27737,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"! let result = unsafe { ffi_call!{ hypot(3f32, 4f32) -> f32 } };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27738,"byte_end":27804,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27805,"byte_end":27808,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! assert!((result - 5f32).abs() < 0.0001);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27809,"byte_end":27853,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"! # }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27854,"byte_end":27861,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27862,"byte_end":27869,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":307},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28236,"byte_end":28239,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"Arg","qualname":"::high::call::Arg","value":"Arg {  }","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" Encapsulates an argument with its type information.","sig":null,"attributes":[{"value":"/ Encapsulates an argument with its type information.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27940,"byte_end":27995,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":27996,"byte_end":27999,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In order to set up calls using [`call`](index.html#method.call), we","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28000,"byte_end":28071,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ need to wrap (a reference to) each argument in an `Arg`. The usual","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28072,"byte_end":28142,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ way to do this is with function [`arg`](fn.arg.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28143,"byte_end":28200,"line_start":30,"line_end":30,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28648,"byte_end":28651,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Arg>::new","value":"fn <T> (arg: &'a T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps an argument reference for passing to `high::call::call`.","sig":null,"attributes":[{"value":"/ Wraps an argument reference for passing to `high::call::call`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28475,"byte_end":28541,"line_start":41,"line_end":41,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28546,"byte_end":28549,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ For a shorter alias of the same, see","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28554,"byte_end":28594,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/ [`high::call::arg`](fn.arg.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28599,"byte_end":28636,"line_start":44,"line_end":44,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28938,"byte_end":28941,"line_start":56,"line_end":56,"column_start":8,"column_end":11},"name":"arg","qualname":"::high::call::arg","value":"fn <T> (arg: &T) -> Arg","parent":null,"children":[],"decl_id":null,"docs":" Constructs an [`Arg`](struct.Arg.html) for passing to\n [`call`](fn.call.html).\n","sig":null,"attributes":[{"value":"/ Constructs an [`Arg`](struct.Arg.html) for passing to","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28845,"byte_end":28902,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"/ [`call`](fn.call.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28903,"byte_end":28930,"line_start":55,"line_end":55,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29454,"byte_end":29458,"line_start":79,"line_end":79,"column_start":15,"column_end":19},"name":"call","qualname":"::high::call::call","value":"fn <R> (fun: CodePtr, args: &[Arg]) -> R","parent":null,"children":[],"decl_id":null,"docs":" Performs a dynamic call to a C function.","sig":null,"attributes":[{"value":"/ Performs a dynamic call to a C function.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28998,"byte_end":29042,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29043,"byte_end":29046,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ To reduce boilerplate, see [`ffi_call!`](../../macro.ffi_call!.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29047,"byte_end":29120,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29121,"byte_end":29124,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29125,"byte_end":29139,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29140,"byte_end":29143,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29144,"byte_end":29151,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ extern \"C\" fn hypot(x: f32, y: f32) -> f32 {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29152,"byte_end":29200,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/     (x * x + y * y).sqrt()","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29201,"byte_end":29231,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29232,"byte_end":29237,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29238,"byte_end":29241,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ use libffi::high::call::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29242,"byte_end":29272,"line_start":71,"line_end":71,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29273,"byte_end":29276,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let result = unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29277,"byte_end":29302,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     call::<f32>(CodePtr(hypot as *mut _), &[arg(&3f32), arg(&4f32)])","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29303,"byte_end":29375,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/ };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29376,"byte_end":29382,"line_start":75,"line_end":75,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29383,"byte_end":29386,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ assert!((result - 5f32).abs() < 0.0001);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29387,"byte_end":29431,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":29432,"byte_end":29439,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":318},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":19977,"byte_end":19983,"line_start":404,"line_end":404,"column_start":21,"column_end":27},"name":"arity0","qualname":"::high::arity0","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":349},{"krate":0,"index":354},{"krate":0,"index":360},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":375},{"krate":0,"index":380},{"krate":0,"index":386},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":410}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":19984,"byte_end":19988,"line_start":404,"line_end":404,"column_start":28,"column_end":32},"name":"Cif0","qualname":"::high::arity0::Cif0","value":"Cif0 {  }","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":341},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20009,"byte_end":20018,"line_start":405,"line_end":405,"column_start":21,"column_end":30},"name":"Callback0","qualname":"::high::arity0::Callback0","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(), userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20066,"byte_end":20074,"line_start":406,"line_end":406,"column_start":21,"column_end":29},"name":"Closure0","qualname":"::high::arity0::Closure0","value":"Closure0 {  }","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":367},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20019,"byte_end":20031,"line_start":405,"line_end":405,"column_start":31,"column_end":43},"name":"CallbackMut0","qualname":"::high::arity0::CallbackMut0","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(),\n              userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20075,"byte_end":20086,"line_start":406,"line_end":406,"column_start":30,"column_end":41},"name":"ClosureMut0","qualname":"::high::arity0::ClosureMut0","value":"ClosureMut0 {  }","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":393},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20032,"byte_end":20045,"line_start":405,"line_end":405,"column_start":44,"column_end":57},"name":"CallbackOnce0","qualname":"::high::arity0::CallbackOnce0","value":"CallbackMut0<Option<U>, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":396},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20087,"byte_end":20099,"line_start":406,"line_end":406,"column_start":42,"column_end":54},"name":"ClosureOnce0","qualname":"::high::arity0::ClosureOnce0","value":"ClosureOnce0 {  }","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":416},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20144,"byte_end":20150,"line_start":408,"line_end":408,"column_start":21,"column_end":27},"name":"arity1","qualname":"::high::arity1","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":438},{"krate":0,"index":442},{"krate":0,"index":446},{"krate":0,"index":452},{"krate":0,"index":458},{"krate":0,"index":465},{"krate":0,"index":473},{"krate":0,"index":477},{"krate":0,"index":483},{"krate":0,"index":489},{"krate":0,"index":496},{"krate":0,"index":504},{"krate":0,"index":508},{"krate":0,"index":513},{"krate":0,"index":518},{"krate":0,"index":525}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":428},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20151,"byte_end":20155,"line_start":408,"line_end":408,"column_start":28,"column_end":32},"name":"Cif1","qualname":"::high::arity1::Cif1","value":"Cif1 {  }","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":442},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20176,"byte_end":20185,"line_start":409,"line_end":409,"column_start":21,"column_end":30},"name":"Callback1","qualname":"::high::arity1::Callback1","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(&A,),\n              userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20233,"byte_end":20241,"line_start":410,"line_end":410,"column_start":21,"column_end":29},"name":"Closure1","qualname":"::high::arity1::Closure1","value":"Closure1 {  }","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":473},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20186,"byte_end":20198,"line_start":409,"line_end":409,"column_start":31,"column_end":43},"name":"CallbackMut1","qualname":"::high::arity1::CallbackMut1","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(&A,),\n              userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":477},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20242,"byte_end":20253,"line_start":410,"line_end":410,"column_start":30,"column_end":41},"name":"ClosureMut1","qualname":"::high::arity1::ClosureMut1","value":"ClosureMut1 {  }","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":504},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20199,"byte_end":20212,"line_start":409,"line_end":409,"column_start":44,"column_end":57},"name":"CallbackOnce1","qualname":"::high::arity1::CallbackOnce1","value":"CallbackMut1<Option<U>, A, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":508},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20254,"byte_end":20266,"line_start":410,"line_end":410,"column_start":42,"column_end":54},"name":"ClosureOnce1","qualname":"::high::arity1::ClosureOnce1","value":"ClosureOnce1 {  }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":532},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20312,"byte_end":20318,"line_start":412,"line_end":412,"column_start":21,"column_end":27},"name":"arity2","qualname":"::high::arity2","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":550},{"krate":0,"index":556},{"krate":0,"index":561},{"krate":0,"index":566},{"krate":0,"index":573},{"krate":0,"index":580},{"krate":0,"index":588},{"krate":0,"index":597},{"krate":0,"index":602},{"krate":0,"index":609},{"krate":0,"index":616},{"krate":0,"index":624},{"krate":0,"index":633},{"krate":0,"index":638},{"krate":0,"index":644},{"krate":0,"index":650},{"krate":0,"index":658}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20319,"byte_end":20323,"line_start":412,"line_end":412,"column_start":28,"column_end":32},"name":"Cif2","qualname":"::high::arity2::Cif2","value":"Cif2 {  }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":561},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20344,"byte_end":20353,"line_start":413,"line_end":413,"column_start":21,"column_end":30},"name":"Callback2","qualname":"::high::arity2::Callback2","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(&A, &B),\n              userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":566},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20401,"byte_end":20409,"line_start":414,"line_end":414,"column_start":21,"column_end":29},"name":"Closure2","qualname":"::high::arity2::Closure2","value":"Closure2 {  }","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20354,"byte_end":20366,"line_start":413,"line_end":413,"column_start":31,"column_end":43},"name":"CallbackMut2","qualname":"::high::arity2::CallbackMut2","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(&A, &B),\n              userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":602},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20410,"byte_end":20421,"line_start":414,"line_end":414,"column_start":30,"column_end":41},"name":"ClosureMut2","qualname":"::high::arity2::ClosureMut2","value":"ClosureMut2 {  }","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":633},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20367,"byte_end":20380,"line_start":413,"line_end":413,"column_start":44,"column_end":57},"name":"CallbackOnce2","qualname":"::high::arity2::CallbackOnce2","value":"CallbackMut2<Option<U>, A, B, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":638},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20422,"byte_end":20434,"line_start":414,"line_end":414,"column_start":42,"column_end":54},"name":"ClosureOnce2","qualname":"::high::arity2::ClosureOnce2","value":"ClosureOnce2 {  }","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":666},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20482,"byte_end":20488,"line_start":416,"line_end":416,"column_start":21,"column_end":27},"name":"arity3","qualname":"::high::arity3","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":685},{"krate":0,"index":692},{"krate":0,"index":698},{"krate":0,"index":704},{"krate":0,"index":712},{"krate":0,"index":720},{"krate":0,"index":729},{"krate":0,"index":739},{"krate":0,"index":745},{"krate":0,"index":753},{"krate":0,"index":761},{"krate":0,"index":770},{"krate":0,"index":780},{"krate":0,"index":786},{"krate":0,"index":793},{"krate":0,"index":800},{"krate":0,"index":809}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20489,"byte_end":20493,"line_start":416,"line_end":416,"column_start":28,"column_end":32},"name":"Cif3","qualname":"::high::arity3::Cif3","value":"Cif3 {  }","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":698},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20514,"byte_end":20523,"line_start":417,"line_end":417,"column_start":21,"column_end":30},"name":"Callback3","qualname":"::high::arity3::Callback3","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(&A, &B, &C),\n              userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20571,"byte_end":20579,"line_start":418,"line_end":418,"column_start":21,"column_end":29},"name":"Closure3","qualname":"::high::arity3::Closure3","value":"Closure3 {  }","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":739},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20524,"byte_end":20536,"line_start":417,"line_end":417,"column_start":31,"column_end":43},"name":"CallbackMut3","qualname":"::high::arity3::CallbackMut3","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(&A, &B, &C),\n              userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20580,"byte_end":20591,"line_start":418,"line_end":418,"column_start":30,"column_end":41},"name":"ClosureMut3","qualname":"::high::arity3::ClosureMut3","value":"ClosureMut3 {  }","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20537,"byte_end":20550,"line_start":417,"line_end":417,"column_start":44,"column_end":57},"name":"CallbackOnce3","qualname":"::high::arity3::CallbackOnce3","value":"CallbackMut3<Option<U>, A, B, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":786},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20592,"byte_end":20604,"line_start":418,"line_end":418,"column_start":42,"column_end":54},"name":"ClosureOnce3","qualname":"::high::arity3::ClosureOnce3","value":"ClosureOnce3 {  }","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":818},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20654,"byte_end":20660,"line_start":420,"line_end":420,"column_start":21,"column_end":27},"name":"arity4","qualname":"::high::arity4","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":838},{"krate":0,"index":846},{"krate":0,"index":853},{"krate":0,"index":860},{"krate":0,"index":869},{"krate":0,"index":878},{"krate":0,"index":888},{"krate":0,"index":899},{"krate":0,"index":906},{"krate":0,"index":915},{"krate":0,"index":924},{"krate":0,"index":934},{"krate":0,"index":945},{"krate":0,"index":952},{"krate":0,"index":960},{"krate":0,"index":968},{"krate":0,"index":978}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20661,"byte_end":20665,"line_start":420,"line_end":420,"column_start":28,"column_end":32},"name":"Cif4","qualname":"::high::arity4::Cif4","value":"Cif4 {  }","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":853},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20686,"byte_end":20695,"line_start":421,"line_end":421,"column_start":21,"column_end":30},"name":"Callback4","qualname":"::high::arity4::Callback4","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(&A, &B, &C, &D),\n              userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20743,"byte_end":20751,"line_start":422,"line_end":422,"column_start":21,"column_end":29},"name":"Closure4","qualname":"::high::arity4::Closure4","value":"Closure4 {  }","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":899},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20696,"byte_end":20708,"line_start":421,"line_end":421,"column_start":31,"column_end":43},"name":"CallbackMut4","qualname":"::high::arity4::CallbackMut4","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R, args: &(&A, &B, &C, &D),\n              userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20752,"byte_end":20763,"line_start":422,"line_end":422,"column_start":30,"column_end":41},"name":"ClosureMut4","qualname":"::high::arity4::ClosureMut4","value":"ClosureMut4 {  }","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":945},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20709,"byte_end":20722,"line_start":421,"line_end":421,"column_start":44,"column_end":57},"name":"CallbackOnce4","qualname":"::high::arity4::CallbackOnce4","value":"CallbackMut4<Option<U>, A, B, C, D, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20764,"byte_end":20776,"line_start":422,"line_end":422,"column_start":42,"column_end":54},"name":"ClosureOnce4","qualname":"::high::arity4::ClosureOnce4","value":"ClosureOnce4 {  }","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":988},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20828,"byte_end":20834,"line_start":424,"line_end":424,"column_start":21,"column_end":27},"name":"arity5","qualname":"::high::arity5","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1009},{"krate":0,"index":1018},{"krate":0,"index":1026},{"krate":0,"index":1034},{"krate":0,"index":1044},{"krate":0,"index":1054},{"krate":0,"index":1065},{"krate":0,"index":1077},{"krate":0,"index":1085},{"krate":0,"index":1095},{"krate":0,"index":1105},{"krate":0,"index":1116},{"krate":0,"index":1128},{"krate":0,"index":1136},{"krate":0,"index":1145},{"krate":0,"index":1154},{"krate":0,"index":1165}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20835,"byte_end":20839,"line_start":424,"line_end":424,"column_start":28,"column_end":32},"name":"Cif5","qualname":"::high::arity5::Cif5","value":"Cif5 {  }","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1026},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20860,"byte_end":20869,"line_start":425,"line_end":425,"column_start":21,"column_end":30},"name":"Callback5","qualname":"::high::arity5::Callback5","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E), userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20917,"byte_end":20925,"line_start":426,"line_end":426,"column_start":21,"column_end":29},"name":"Closure5","qualname":"::high::arity5::Closure5","value":"Closure5 {  }","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1077},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20870,"byte_end":20882,"line_start":425,"line_end":425,"column_start":31,"column_end":43},"name":"CallbackMut5","qualname":"::high::arity5::CallbackMut5","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E), userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1085},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20926,"byte_end":20937,"line_start":426,"line_end":426,"column_start":30,"column_end":41},"name":"ClosureMut5","qualname":"::high::arity5::ClosureMut5","value":"ClosureMut5 {  }","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20883,"byte_end":20896,"line_start":425,"line_end":425,"column_start":44,"column_end":57},"name":"CallbackOnce5","qualname":"::high::arity5::CallbackOnce5","value":"CallbackMut5<Option<U>, A, B, C, D, E, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1136},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":20938,"byte_end":20950,"line_start":426,"line_end":426,"column_start":42,"column_end":54},"name":"ClosureOnce5","qualname":"::high::arity5::ClosureOnce5","value":"ClosureOnce5 {  }","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1176},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21004,"byte_end":21010,"line_start":428,"line_end":428,"column_start":21,"column_end":27},"name":"arity6","qualname":"::high::arity6","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1198},{"krate":0,"index":1208},{"krate":0,"index":1217},{"krate":0,"index":1226},{"krate":0,"index":1237},{"krate":0,"index":1248},{"krate":0,"index":1260},{"krate":0,"index":1273},{"krate":0,"index":1282},{"krate":0,"index":1293},{"krate":0,"index":1304},{"krate":0,"index":1316},{"krate":0,"index":1329},{"krate":0,"index":1338},{"krate":0,"index":1348},{"krate":0,"index":1358},{"krate":0,"index":1370}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21011,"byte_end":21015,"line_start":428,"line_end":428,"column_start":28,"column_end":32},"name":"Cif6","qualname":"::high::arity6::Cif6","value":"Cif6 {  }","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1217},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21036,"byte_end":21045,"line_start":429,"line_end":429,"column_start":21,"column_end":30},"name":"Callback6","qualname":"::high::arity6::Callback6","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F), userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1226},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21093,"byte_end":21101,"line_start":430,"line_end":430,"column_start":21,"column_end":29},"name":"Closure6","qualname":"::high::arity6::Closure6","value":"Closure6 {  }","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1273},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21046,"byte_end":21058,"line_start":429,"line_end":429,"column_start":31,"column_end":43},"name":"CallbackMut6","qualname":"::high::arity6::CallbackMut6","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F), userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21102,"byte_end":21113,"line_start":430,"line_end":430,"column_start":30,"column_end":41},"name":"ClosureMut6","qualname":"::high::arity6::ClosureMut6","value":"ClosureMut6 {  }","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1329},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21059,"byte_end":21072,"line_start":429,"line_end":429,"column_start":44,"column_end":57},"name":"CallbackOnce6","qualname":"::high::arity6::CallbackOnce6","value":"CallbackMut6<Option<U>, A, B, C, D, E, F, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1338},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21114,"byte_end":21126,"line_start":430,"line_end":430,"column_start":42,"column_end":54},"name":"ClosureOnce6","qualname":"::high::arity6::ClosureOnce6","value":"ClosureOnce6 {  }","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1382},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21182,"byte_end":21188,"line_start":432,"line_end":432,"column_start":21,"column_end":27},"name":"arity7","qualname":"::high::arity7","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1405},{"krate":0,"index":1416},{"krate":0,"index":1426},{"krate":0,"index":1436},{"krate":0,"index":1448},{"krate":0,"index":1460},{"krate":0,"index":1473},{"krate":0,"index":1487},{"krate":0,"index":1497},{"krate":0,"index":1509},{"krate":0,"index":1521},{"krate":0,"index":1534},{"krate":0,"index":1548},{"krate":0,"index":1558},{"krate":0,"index":1569},{"krate":0,"index":1580},{"krate":0,"index":1593}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1394},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21189,"byte_end":21193,"line_start":432,"line_end":432,"column_start":28,"column_end":32},"name":"Cif7","qualname":"::high::arity7::Cif7","value":"Cif7 {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1426},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21214,"byte_end":21223,"line_start":433,"line_end":433,"column_start":21,"column_end":30},"name":"Callback7","qualname":"::high::arity7::Callback7","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G), userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21271,"byte_end":21279,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"name":"Closure7","qualname":"::high::arity7::Closure7","value":"Closure7 {  }","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1487},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21224,"byte_end":21236,"line_start":433,"line_end":433,"column_start":31,"column_end":43},"name":"CallbackMut7","qualname":"::high::arity7::CallbackMut7","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G), userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1497},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21280,"byte_end":21291,"line_start":434,"line_end":434,"column_start":30,"column_end":41},"name":"ClosureMut7","qualname":"::high::arity7::ClosureMut7","value":"ClosureMut7 {  }","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1548},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21237,"byte_end":21250,"line_start":433,"line_end":433,"column_start":44,"column_end":57},"name":"CallbackOnce7","qualname":"::high::arity7::CallbackOnce7","value":"CallbackMut7<Option<U>, A, B, C, D, E, F, G, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1558},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21292,"byte_end":21304,"line_start":434,"line_end":434,"column_start":42,"column_end":54},"name":"ClosureOnce7","qualname":"::high::arity7::ClosureOnce7","value":"ClosureOnce7 {  }","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1606},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21362,"byte_end":21368,"line_start":436,"line_end":436,"column_start":21,"column_end":27},"name":"arity8","qualname":"::high::arity8","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1630},{"krate":0,"index":1642},{"krate":0,"index":1653},{"krate":0,"index":1664},{"krate":0,"index":1677},{"krate":0,"index":1690},{"krate":0,"index":1704},{"krate":0,"index":1719},{"krate":0,"index":1730},{"krate":0,"index":1743},{"krate":0,"index":1756},{"krate":0,"index":1770},{"krate":0,"index":1785},{"krate":0,"index":1796},{"krate":0,"index":1808},{"krate":0,"index":1820},{"krate":0,"index":1834}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1618},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21369,"byte_end":21373,"line_start":436,"line_end":436,"column_start":28,"column_end":32},"name":"Cif8","qualname":"::high::arity8::Cif8","value":"Cif8 {  }","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1653},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21394,"byte_end":21403,"line_start":437,"line_end":437,"column_start":21,"column_end":30},"name":"Callback8","qualname":"::high::arity8::Callback8","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H), userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1664},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21451,"byte_end":21459,"line_start":438,"line_end":438,"column_start":21,"column_end":29},"name":"Closure8","qualname":"::high::arity8::Closure8","value":"Closure8 {  }","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1719},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21404,"byte_end":21416,"line_start":437,"line_end":437,"column_start":31,"column_end":43},"name":"CallbackMut8","qualname":"::high::arity8::CallbackMut8","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H), userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1730},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21460,"byte_end":21471,"line_start":438,"line_end":438,"column_start":30,"column_end":41},"name":"ClosureMut8","qualname":"::high::arity8::ClosureMut8","value":"ClosureMut8 {  }","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1785},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21417,"byte_end":21430,"line_start":437,"line_end":437,"column_start":44,"column_end":57},"name":"CallbackOnce8","qualname":"::high::arity8::CallbackOnce8","value":"CallbackMut8<Option<U>, A, B, C, D, E, F, G, H, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1796},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21472,"byte_end":21484,"line_start":438,"line_end":438,"column_start":42,"column_end":54},"name":"ClosureOnce8","qualname":"::high::arity8::ClosureOnce8","value":"ClosureOnce8 {  }","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1848},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21544,"byte_end":21550,"line_start":440,"line_end":440,"column_start":21,"column_end":27},"name":"arity9","qualname":"::high::arity9","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1873},{"krate":0,"index":1886},{"krate":0,"index":1898},{"krate":0,"index":1910},{"krate":0,"index":1924},{"krate":0,"index":1938},{"krate":0,"index":1953},{"krate":0,"index":1969},{"krate":0,"index":1981},{"krate":0,"index":1995},{"krate":0,"index":2009},{"krate":0,"index":2024},{"krate":0,"index":2040},{"krate":0,"index":2052},{"krate":0,"index":2065},{"krate":0,"index":2078},{"krate":0,"index":2093}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1860},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21551,"byte_end":21555,"line_start":440,"line_end":440,"column_start":28,"column_end":32},"name":"Cif9","qualname":"::high::arity9::Cif9","value":"Cif9 {  }","parent":null,"children":[{"krate":0,"index":1871},{"krate":0,"index":1872}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1898},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21576,"byte_end":21585,"line_start":441,"line_end":441,"column_start":21,"column_end":30},"name":"Callback9","qualname":"::high::arity9::Callback9","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H, &I), userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1910},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21633,"byte_end":21641,"line_start":442,"line_end":442,"column_start":21,"column_end":29},"name":"Closure9","qualname":"::high::arity9::Closure9","value":"Closure9 {  }","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1969},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21586,"byte_end":21598,"line_start":441,"line_end":441,"column_start":31,"column_end":43},"name":"CallbackMut9","qualname":"::high::arity9::CallbackMut9","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H, &I), userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1981},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21642,"byte_end":21653,"line_start":442,"line_end":442,"column_start":30,"column_end":41},"name":"ClosureMut9","qualname":"::high::arity9::ClosureMut9","value":"ClosureMut9 {  }","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2040},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21599,"byte_end":21612,"line_start":441,"line_end":441,"column_start":44,"column_end":57},"name":"CallbackOnce9","qualname":"::high::arity9::CallbackOnce9","value":"CallbackMut9<Option<U>, A, B, C, D, E, F, G, H, I, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2052},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21654,"byte_end":21666,"line_start":442,"line_end":442,"column_start":42,"column_end":54},"name":"ClosureOnce9","qualname":"::high::arity9::ClosureOnce9","value":"ClosureOnce9 {  }","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":2108},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21728,"byte_end":21735,"line_start":444,"line_end":444,"column_start":21,"column_end":28},"name":"arity10","qualname":"::high::arity10","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2134},{"krate":0,"index":2148},{"krate":0,"index":2161},{"krate":0,"index":2174},{"krate":0,"index":2189},{"krate":0,"index":2204},{"krate":0,"index":2220},{"krate":0,"index":2237},{"krate":0,"index":2250},{"krate":0,"index":2265},{"krate":0,"index":2280},{"krate":0,"index":2296},{"krate":0,"index":2313},{"krate":0,"index":2326},{"krate":0,"index":2340},{"krate":0,"index":2354},{"krate":0,"index":2370}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2120},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21736,"byte_end":21741,"line_start":444,"line_end":444,"column_start":29,"column_end":34},"name":"Cif10","qualname":"::high::arity10::Cif10","value":"Cif10 {  }","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":2161},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21762,"byte_end":21772,"line_start":445,"line_end":445,"column_start":21,"column_end":31},"name":"Callback10","qualname":"::high::arity10::Callback10","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H, &I, &J), userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2174},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21822,"byte_end":21831,"line_start":446,"line_end":446,"column_start":21,"column_end":30},"name":"Closure10","qualname":"::high::arity10::Closure10","value":"Closure10 {  }","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":2237},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21773,"byte_end":21786,"line_start":445,"line_end":445,"column_start":32,"column_end":45},"name":"CallbackMut10","qualname":"::high::arity10::CallbackMut10","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H, &I, &J),\n              userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2250},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21832,"byte_end":21844,"line_start":446,"line_end":446,"column_start":31,"column_end":43},"name":"ClosureMut10","qualname":"::high::arity10::ClosureMut10","value":"ClosureMut10 {  }","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2313},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21787,"byte_end":21801,"line_start":445,"line_end":445,"column_start":46,"column_end":60},"name":"CallbackOnce10","qualname":"::high::arity10::CallbackOnce10","value":"CallbackMut10<Option<U>, A, B, C, D, E, F, G, H, I, J, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2326},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21845,"byte_end":21858,"line_start":446,"line_end":446,"column_start":44,"column_end":57},"name":"ClosureOnce10","qualname":"::high::arity10::ClosureOnce10","value":"ClosureOnce10 {  }","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":2386},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21922,"byte_end":21929,"line_start":448,"line_end":448,"column_start":21,"column_end":28},"name":"arity11","qualname":"::high::arity11","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2413},{"krate":0,"index":2428},{"krate":0,"index":2442},{"krate":0,"index":2456},{"krate":0,"index":2472},{"krate":0,"index":2488},{"krate":0,"index":2505},{"krate":0,"index":2523},{"krate":0,"index":2537},{"krate":0,"index":2553},{"krate":0,"index":2569},{"krate":0,"index":2586},{"krate":0,"index":2604},{"krate":0,"index":2618},{"krate":0,"index":2633},{"krate":0,"index":2648},{"krate":0,"index":2665}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2398},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21930,"byte_end":21935,"line_start":448,"line_end":448,"column_start":29,"column_end":34},"name":"Cif11","qualname":"::high::arity11::Cif11","value":"Cif11 {  }","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":2442},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21956,"byte_end":21966,"line_start":449,"line_end":449,"column_start":21,"column_end":31},"name":"Callback11","qualname":"::high::arity11::Callback11","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H, &I, &J, &K),\n              userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2456},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22016,"byte_end":22025,"line_start":450,"line_end":450,"column_start":21,"column_end":30},"name":"Closure11","qualname":"::high::arity11::Closure11","value":"Closure11 {  }","parent":null,"children":[{"krate":0,"index":2470},{"krate":0,"index":2471}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":2523},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21967,"byte_end":21980,"line_start":449,"line_end":449,"column_start":32,"column_end":45},"name":"CallbackMut11","qualname":"::high::arity11::CallbackMut11","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H, &I, &J, &K),\n              userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2537},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22026,"byte_end":22038,"line_start":450,"line_end":450,"column_start":31,"column_end":43},"name":"ClosureMut11","qualname":"::high::arity11::ClosureMut11","value":"ClosureMut11 {  }","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2604},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":21981,"byte_end":21995,"line_start":449,"line_end":449,"column_start":46,"column_end":60},"name":"CallbackOnce11","qualname":"::high::arity11::CallbackOnce11","value":"CallbackMut11<Option<U>, A, B, C, D, E, F, G, H, I, J, K, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2618},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22039,"byte_end":22052,"line_start":450,"line_end":450,"column_start":44,"column_end":57},"name":"ClosureOnce11","qualname":"::high::arity11::ClosureOnce11","value":"ClosureOnce11 {  }","parent":null,"children":[{"krate":0,"index":2631},{"krate":0,"index":2632}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":2682},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22118,"byte_end":22125,"line_start":452,"line_end":452,"column_start":21,"column_end":28},"name":"arity12","qualname":"::high::arity12","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","parent":null,"children":[{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2710},{"krate":0,"index":2726},{"krate":0,"index":2741},{"krate":0,"index":2756},{"krate":0,"index":2773},{"krate":0,"index":2790},{"krate":0,"index":2808},{"krate":0,"index":2827},{"krate":0,"index":2842},{"krate":0,"index":2859},{"krate":0,"index":2876},{"krate":0,"index":2894},{"krate":0,"index":2913},{"krate":0,"index":2928},{"krate":0,"index":2944},{"krate":0,"index":2960},{"krate":0,"index":2978}],"decl_id":null,"docs":" CIF and closure types organized by function arity.\n","sig":null,"attributes":[{"value":"/ CIF and closure types organized by function arity.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6359,"byte_end":6413,"line_start":89,"line_end":89,"column_start":9,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2694},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22126,"byte_end":22131,"line_start":452,"line_end":452,"column_start":29,"column_end":34},"name":"Cif12","qualname":"::high::arity12::Cif12","value":"Cif12 {  }","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709}],"decl_id":null,"docs":" A typed CIF, which statically tracks argument and result types.\n","sig":null,"attributes":[{"value":"/ A typed CIF, which statically tracks argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6726,"byte_end":6793,"line_start":100,"line_end":100,"column_start":13,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":2741},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22152,"byte_end":22162,"line_start":453,"line_end":453,"column_start":21,"column_end":31},"name":"Callback12","qualname":"::high::arity12::Callback12","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H, &I, &J, &K, &L),\n              userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from an immutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from an immutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8419,"byte_end":8484,"line_start":138,"line_end":138,"column_start":13,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2756},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22212,"byte_end":22221,"line_start":454,"line_end":454,"column_start":21,"column_end":30},"name":"Closure12","qualname":"::high::arity12::Closure12","value":"Closure12 {  }","parent":null,"children":[{"krate":0,"index":2771},{"krate":0,"index":2772}],"decl_id":null,"docs":" An immutable, typed closure with the given argument and result\n types.\n","sig":null,"attributes":[{"value":"/ An immutable, typed closure with the given argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8758,"byte_end":8824,"line_start":145,"line_end":145,"column_start":13,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":8837,"byte_end":8847,"line_start":146,"line_end":146,"column_start":13,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":2827},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22163,"byte_end":22176,"line_start":453,"line_end":453,"column_start":32,"column_end":45},"name":"CallbackMut12","qualname":"::high::arity12::CallbackMut12","value":"extern \"C\" fn(cif: &::low::ffi_cif, result: &mut R,\n              args: &(&A, &B, &C, &D, &E, &F, &G, &H, &I, &J, &K, &L),\n              userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a mutable, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a mutable, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12118,"byte_end":12180,"line_start":222,"line_end":222,"column_start":13,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2842},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22222,"byte_end":22234,"line_start":454,"line_end":454,"column_start":31,"column_end":43},"name":"ClosureMut12","qualname":"::high::arity12::ClosureMut12","value":"ClosureMut12 {  }","parent":null,"children":[{"krate":0,"index":2857},{"krate":0,"index":2858}],"decl_id":null,"docs":" A mutable, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A mutable, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12462,"byte_end":12518,"line_start":229,"line_end":229,"column_start":13,"column_end":69}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":12531,"byte_end":12548,"line_start":230,"line_end":230,"column_start":13,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2913},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22177,"byte_end":22191,"line_start":453,"line_end":453,"column_start":46,"column_end":60},"name":"CallbackOnce12","qualname":"::high::arity12::CallbackOnce12","value":"CallbackMut12<Option<U>, A, B, C, D, E, F, G, H, I, J, K, L, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of function called from a one-shot, typed closure.\n","sig":null,"attributes":[{"value":"/ The type of function called from a one-shot, typed closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":15962,"byte_end":16025,"line_start":309,"line_end":309,"column_start":13,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2928},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":22235,"byte_end":22248,"line_start":454,"line_end":454,"column_start":44,"column_end":57},"name":"ClosureOnce12","qualname":"::high::arity12::ClosureOnce12","value":"ClosureOnce12 {  }","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2943}],"decl_id":null,"docs":" A one-shot, typed closure with the given argument and\n result types.\n","sig":null,"attributes":[{"value":"/ A one-shot, typed closure with the given argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16148,"byte_end":16205,"line_start":313,"line_end":313,"column_start":13,"column_end":70}},{"value":"/ result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":16218,"byte_end":16235,"line_start":314,"line_end":314,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":48},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"middle","qualname":"::middle","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":59},{"krate":0,"index":73},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":171},{"krate":0,"index":3004},{"krate":0,"index":3009},{"krate":0,"index":3007},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":3011},{"krate":0,"index":3015},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":3017},{"krate":0,"index":3023},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":199},{"krate":0,"index":3026},{"krate":0,"index":3031},{"krate":0,"index":202},{"krate":0,"index":204}],"decl_id":null,"docs":" Middle layer providing a somewhat safer (but still quite unsafe)\n API.","sig":null,"attributes":[{"value":"! Middle layer providing a somewhat safer (but still quite unsafe)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":30835,"byte_end":30903,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"! API.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":30904,"byte_end":30912,"line_start":2,"line_end":2,"column_start":1,"column_end":9}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":30913,"byte_end":30916,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! The main idea of the middle layer is to wrap types","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":30917,"byte_end":30971,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"! [`ffi_cif`](../raw/struct.ffi_cif.html) and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":30972,"byte_end":31019,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"! [`ffi_closure`](../raw/struct.ffi_closure.html) as","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31020,"byte_end":31074,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"! [`Cif`](struct.Cif.html) and [`Closure`](struct.Closure.html),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31075,"byte_end":31141,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"! respectively, so that their resources are managed properly. However,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31142,"byte_end":31214,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"! calling a function via a CIF or closure is still unsafe because","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31215,"byte_end":31282,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"! argument types aren’t checked. See the [`high`](../high/index.html)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31283,"byte_end":31356,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"! layer for closures with type-checked arguments.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31357,"byte_end":31408,"line_start":11,"line_end":11,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47479,"byte_end":47483,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"Type","qualname":"::middle::types::Type","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a single C type.","sig":null,"attributes":[{"value":"/ Represents a single C type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47031,"byte_end":47062,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47063,"byte_end":47066,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47067,"byte_end":47080,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47081,"byte_end":47084,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Suppose we have a C struct:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47085,"byte_end":47116,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47117,"byte_end":47120,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```c","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47121,"byte_end":47129,"line_start":38,"line_end":38,"column_start":1,"column_end":9}},{"value":"/ struct my_struct {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47130,"byte_end":47152,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     uint16_t f1;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47153,"byte_end":47173,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/     uint64_t f2;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47174,"byte_end":47194,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47195,"byte_end":47201,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47202,"byte_end":47209,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47210,"byte_end":47213,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ To pass the struct by value via libffi, we need to construct a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47214,"byte_end":47280,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ `Type` object describing its layout:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47281,"byte_end":47321,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47322,"byte_end":47325,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47326,"byte_end":47333,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use libffi::middle::Type;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47334,"byte_end":47363,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47364,"byte_end":47367,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let my_struct = Type::structure(vec![","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47368,"byte_end":47409,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     Type::u64(),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47410,"byte_end":47430,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/     Type::u16(),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47431,"byte_end":47451,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/ ]);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47452,"byte_end":47459,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47460,"byte_end":47467,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52259,"byte_end":52263,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"void","qualname":"<Type>::void","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the representation of the C `void` type.","sig":null,"attributes":[{"value":"/ Returns the representation of the C `void` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52085,"byte_end":52137,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52142,"byte_end":52145,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This is used only for the return type of a CIF, not for an","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52150,"byte_end":52212,"line_start":228,"line_end":228,"column_start":5,"column_end":67}},{"value":"/ argument or struct member.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52217,"byte_end":52247,"line_start":229,"line_end":229,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52403,"byte_end":52405,"line_start":235,"line_end":235,"column_start":12,"column_end":14},"name":"u8","qualname":"<Type>::u8","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the unsigned 8-bit numeric type.\n","sig":null,"attributes":[{"value":"/ Returns the unsigned 8-bit numeric type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52347,"byte_end":52391,"line_start":234,"line_end":234,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52544,"byte_end":52546,"line_start":240,"line_end":240,"column_start":12,"column_end":14},"name":"i8","qualname":"<Type>::i8","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed 8-bit numeric type.\n","sig":null,"attributes":[{"value":"/ Returns the signed 8-bit numeric type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52490,"byte_end":52532,"line_start":239,"line_end":239,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52688,"byte_end":52691,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"u16","qualname":"<Type>::u16","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the unsigned 16-bit numeric type.\n","sig":null,"attributes":[{"value":"/ Returns the unsigned 16-bit numeric type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52631,"byte_end":52676,"line_start":244,"line_end":244,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52832,"byte_end":52835,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"i16","qualname":"<Type>::i16","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed 16-bit numeric type.\n","sig":null,"attributes":[{"value":"/ Returns the signed 16-bit numeric type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52777,"byte_end":52820,"line_start":249,"line_end":249,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52978,"byte_end":52981,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"u32","qualname":"<Type>::u32","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the unsigned 32-bit numeric type.\n","sig":null,"attributes":[{"value":"/ Returns the unsigned 32-bit numeric type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52921,"byte_end":52966,"line_start":254,"line_end":254,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":53122,"byte_end":53125,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"i32","qualname":"<Type>::i32","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed 32-bit numeric type.\n","sig":null,"attributes":[{"value":"/ Returns the signed 32-bit numeric type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":53067,"byte_end":53110,"line_start":259,"line_end":259,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":53268,"byte_end":53271,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"u64","qualname":"<Type>::u64","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the unsigned 64-bit numeric type.\n","sig":null,"attributes":[{"value":"/ Returns the unsigned 64-bit numeric type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":53211,"byte_end":53256,"line_start":264,"line_end":264,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":53412,"byte_end":53415,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"i64","qualname":"<Type>::i64","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed 64-bit numeric type.\n","sig":null,"attributes":[{"value":"/ Returns the signed 64-bit numeric type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":53357,"byte_end":53400,"line_start":269,"line_end":269,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54222,"byte_end":54227,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"usize","qualname":"<Type>::usize","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C equivalent of Rust `usize` (`u64`).\n","sig":null,"attributes":[{"value":"/ Returns the C equivalent of Rust `usize` (`u64`).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54117,"byte_end":54170,"line_start":298,"line_end":298,"column_start":5,"column_end":58}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54175,"byte_end":54210,"line_start":299,"line_end":299,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54376,"byte_end":54381,"line_start":306,"line_end":306,"column_start":12,"column_end":17},"name":"isize","qualname":"<Type>::isize","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C equivalent of Rust `isize` (`i64`).\n","sig":null,"attributes":[{"value":"/ Returns the C equivalent of Rust `isize` (`i64`).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54271,"byte_end":54324,"line_start":304,"line_end":304,"column_start":5,"column_end":58}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54329,"byte_end":54364,"line_start":305,"line_end":305,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54474,"byte_end":54481,"line_start":311,"line_end":311,"column_start":12,"column_end":19},"name":"c_schar","qualname":"<Type>::c_schar","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `signed char` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `signed char` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54425,"byte_end":54462,"line_start":310,"line_end":310,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54592,"byte_end":54599,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"c_uchar","qualname":"<Type>::c_uchar","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `unsigned char` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `unsigned char` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54541,"byte_end":54580,"line_start":315,"line_end":315,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54704,"byte_end":54711,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"c_short","qualname":"<Type>::c_short","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `short` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `short` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54661,"byte_end":54692,"line_start":320,"line_end":320,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54823,"byte_end":54831,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"c_ushort","qualname":"<Type>::c_ushort","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `unsigned short` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `unsigned short` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54771,"byte_end":54811,"line_start":325,"line_end":325,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54935,"byte_end":54940,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"c_int","qualname":"<Type>::c_int","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `int` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `int` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54894,"byte_end":54923,"line_start":330,"line_end":330,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55048,"byte_end":55054,"line_start":336,"line_end":336,"column_start":12,"column_end":18},"name":"c_uint","qualname":"<Type>::c_uint","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `unsigned int` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `unsigned int` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":54998,"byte_end":55036,"line_start":335,"line_end":335,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55157,"byte_end":55163,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"c_long","qualname":"<Type>::c_long","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `long` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `long` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55115,"byte_end":55145,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55273,"byte_end":55280,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"c_ulong","qualname":"<Type>::c_ulong","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `unsigned long` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `unsigned long` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55222,"byte_end":55261,"line_start":345,"line_end":345,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55388,"byte_end":55398,"line_start":351,"line_end":351,"column_start":12,"column_end":22},"name":"c_longlong","qualname":"<Type>::c_longlong","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `longlong` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `longlong` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55342,"byte_end":55376,"line_start":350,"line_end":350,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55516,"byte_end":55527,"line_start":356,"line_end":356,"column_start":12,"column_end":23},"name":"c_ulonglong","qualname":"<Type>::c_ulonglong","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `unsigned longlong` type.\n","sig":null,"attributes":[{"value":"/ Returns the C `unsigned longlong` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55461,"byte_end":55504,"line_start":355,"line_end":355,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55660,"byte_end":55663,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"f32","qualname":"<Type>::f32","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `float` (32-bit floating point) type.\n","sig":null,"attributes":[{"value":"/ Returns the C `float` (32-bit floating point) type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55593,"byte_end":55648,"line_start":360,"line_end":360,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55816,"byte_end":55819,"line_start":366,"line_end":366,"column_start":12,"column_end":15},"name":"f64","qualname":"<Type>::f64","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `double` (64-bit floating point) type.\n","sig":null,"attributes":[{"value":"/ Returns the C `double` (64-bit floating point) type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55748,"byte_end":55804,"line_start":365,"line_end":365,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55981,"byte_end":55988,"line_start":371,"line_end":371,"column_start":12,"column_end":19},"name":"pointer","qualname":"<Type>::pointer","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `void*` type, for passing any kind of pointer.\n","sig":null,"attributes":[{"value":"/ Returns the C `void*` type, for passing any kind of pointer.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":55905,"byte_end":55969,"line_start":370,"line_end":370,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":56160,"byte_end":56170,"line_start":376,"line_end":376,"column_start":12,"column_end":22},"name":"longdouble","qualname":"<Type>::longdouble","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the C `long double` (extended-precision floating point) type.\n","sig":null,"attributes":[{"value":"/ Returns the C `long double` (extended-precision floating point) type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":56075,"byte_end":56148,"line_start":375,"line_end":375,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57119,"byte_end":57128,"line_start":405,"line_end":405,"column_start":12,"column_end":21},"name":"structure","qualname":"<Type>::structure","value":"fn <I> (fields: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a structure type whose fields have the given types.\n","sig":null,"attributes":[{"value":"/ Constructs a structure type whose fields have the given types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57041,"byte_end":57107,"line_start":404,"line_end":404,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57620,"byte_end":57630,"line_start":420,"line_end":420,"column_start":12,"column_end":22},"name":"as_raw_ptr","qualname":"<Type>::as_raw_ptr","value":"fn (&self) -> *mut low::ffi_type","parent":null,"children":[],"decl_id":null,"docs":" Gets a raw pointer to the underlying\n [`ffi_type`](../raw/struct._ffi_type.html).","sig":null,"attributes":[{"value":"/ Gets a raw pointer to the underlying","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57367,"byte_end":57407,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"/ [`ffi_type`](../raw/struct._ffi_type.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57412,"byte_end":57459,"line_start":415,"line_end":415,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57464,"byte_end":57467,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This method may be useful for interacting with the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57472,"byte_end":57526,"line_start":417,"line_end":417,"column_start":5,"column_end":59}},{"value":"/ [`low`](../low/index.html) and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57531,"byte_end":57565,"line_start":418,"line_end":418,"column_start":5,"column_end":39}},{"value":"/ [`raw`](../raw/index.html) layers.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57570,"byte_end":57608,"line_start":419,"line_end":419,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2996},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60744,"byte_end":60751,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"Builder","qualname":"::middle::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999}],"decl_id":null,"docs":" Provides a builder-style API for constructing CIFs and closures.","sig":null,"attributes":[{"value":"/ Provides a builder-style API for constructing CIFs and closures.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":58986,"byte_end":59054,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59055,"byte_end":59058,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To use a builder, first construct it using [`Builder::new`](#method.new).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59059,"byte_end":59136,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ The default calling convention is `ffi_abi_FFI_DEFAULT_ABI`, and the default","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59137,"byte_end":59217,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ function type is `extern \"C\" fn()` (or in C, `void(*)()`). Add","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59218,"byte_end":59284,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ argument types to the function type with the [`arg`](#method.arg)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59285,"byte_end":59354,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ and [`args`](#method.args) methods. Set the result type with","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59355,"byte_end":59419,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/ [`res`](#method.res). Change the calling convention, if necessary,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59420,"byte_end":59490,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ with [`abi`](#method.abi).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59491,"byte_end":59521,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59522,"byte_end":59525,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Once the builder is configured, construct a `Cif` with","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59526,"byte_end":59584,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`into_cif`](#method.into_cif) or a closure with","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59585,"byte_end":59637,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ [`into_closure`](#method.into_closure),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59638,"byte_end":59681,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/ [`into_closure_mut`](#method.into_closure_mut), or","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59682,"byte_end":59736,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/ [`into_closure_once`](#method.into_closure_once).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59737,"byte_end":59790,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59791,"byte_end":59794,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59795,"byte_end":59809,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59810,"byte_end":59813,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59814,"byte_end":59821,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use std::mem;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59822,"byte_end":59839,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ use std::os::raw::c_void;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59840,"byte_end":59869,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59870,"byte_end":59873,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use libffi::middle::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59874,"byte_end":59900,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/ use libffi::low;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59901,"byte_end":59921,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59922,"byte_end":59925,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ unsafe extern \"C\" fn lambda_callback<F: Fn(u64, u64) -> u64>(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59926,"byte_end":59991,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/     _cif: &low::ffi_cif,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":59992,"byte_end":60020,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     result: &mut u64,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60021,"byte_end":60046,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/     args: *const *const c_void,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60047,"byte_end":60082,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/     userdata: &F)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60083,"byte_end":60104,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60105,"byte_end":60110,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/     let args: *const &u64 = mem::transmute(args);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60111,"byte_end":60164,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     let arg1 = **args.offset(0);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60165,"byte_end":60201,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/     let arg2 = **args.offset(1);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60202,"byte_end":60238,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60239,"byte_end":60242,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     *result = userdata(arg1, arg2);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60243,"byte_end":60282,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60283,"byte_end":60288,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60289,"byte_end":60292,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let lambda = |x: u64, y: u64| x + y;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60293,"byte_end":60333,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60334,"byte_end":60337,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let closure = Builder::new()","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60338,"byte_end":60370,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/     .arg(Type::u64())","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60371,"byte_end":60396,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     .arg(Type::u64())","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60397,"byte_end":60422,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/     .res(Type::u64())","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60423,"byte_end":60448,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/     .into_closure(lambda_callback, &lambda);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60449,"byte_end":60497,"line_start":49,"line_end":49,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60498,"byte_end":60501,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60502,"byte_end":60514,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/     let fun: &unsafe extern \"C\" fn(u64, u64) -> u64","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60515,"byte_end":60570,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/         = mem::transmute(closure.code_ptr());","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60571,"byte_end":60620,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60621,"byte_end":60624,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(11, fun(5, 6));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60625,"byte_end":60659,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/     assert_eq!(12, fun(5, 7));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60660,"byte_end":60694,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60695,"byte_end":60700,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60701,"byte_end":60708,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60961,"byte_end":60964,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Builder`.\n","sig":null,"attributes":[{"value":"/ Constructs a `Builder`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60922,"byte_end":60949,"line_start":73,"line_end":73,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61176,"byte_end":61179,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"arg","qualname":"<Builder>::arg","value":"fn (mut self, type_: Type) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a type to the argument type list.\n","sig":null,"attributes":[{"value":"/ Adds a type to the argument type list.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61122,"byte_end":61164,"line_start":82,"line_end":82,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61329,"byte_end":61333,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"args","qualname":"<Builder>::args","value":"fn <I> (mut self, types: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds several types to the argument type list.\n","sig":null,"attributes":[{"value":"/ Adds several types to the argument type list.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61268,"byte_end":61317,"line_start":88,"line_end":88,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61518,"byte_end":61521,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"res","qualname":"<Builder>::res","value":"fn (mut self, type_: Type) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the result type.\n","sig":null,"attributes":[{"value":"/ Sets the result type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61481,"byte_end":61506,"line_start":96,"line_end":96,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61649,"byte_end":61652,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"abi","qualname":"<Builder>::abi","value":"fn (mut self, abi: super::FfiAbi) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the calling convention.\n","sig":null,"attributes":[{"value":"/ Sets the calling convention.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61605,"byte_end":61637,"line_start":102,"line_end":102,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61770,"byte_end":61778,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"into_cif","qualname":"<Builder>::into_cif","value":"fn (self) -> super::Cif","parent":null,"children":[],"decl_id":null,"docs":" Builds a CIF.\n","sig":null,"attributes":[{"value":"/ Builds a CIF.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61741,"byte_end":61758,"line_start":108,"line_end":108,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62257,"byte_end":62269,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"into_closure","qualname":"<Builder>::into_closure","value":"fn <U, R> (self, callback: super::Callback<U, R>, userdata: &U) -> super::Closure","parent":null,"children":[],"decl_id":null,"docs":" Builds an immutable closure.","sig":null,"attributes":[{"value":"/ Builds an immutable closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61924,"byte_end":61956,"line_start":115,"line_end":115,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61961,"byte_end":61964,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61969,"byte_end":61984,"line_start":117,"line_end":117,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61989,"byte_end":61992,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ - `callback` — the function to call when the closure is invoked","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":61997,"byte_end":62066,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ - `userdata` — the pointer to pass to `callback` along with the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62071,"byte_end":62140,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/   arguments when the closure is called","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62145,"byte_end":62187,"line_start":121,"line_end":121,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62192,"byte_end":62195,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62200,"byte_end":62212,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62217,"byte_end":62220,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The new closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62225,"byte_end":62245,"line_start":125,"line_end":125,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62792,"byte_end":62808,"line_start":146,"line_end":146,"column_start":12,"column_end":28},"name":"into_closure_mut","qualname":"<Builder>::into_closure_mut","value":"fn <U, R> (self, callback: super::CallbackMut<U, R>, userdata: &mut U) -> super::Closure","parent":null,"children":[],"decl_id":null,"docs":" Builds a mutable closure.","sig":null,"attributes":[{"value":"/ Builds a mutable closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62462,"byte_end":62491,"line_start":135,"line_end":135,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62496,"byte_end":62499,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62504,"byte_end":62519,"line_start":137,"line_end":137,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62524,"byte_end":62527,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ - `callback` — the function to call when the closure is invoked","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62532,"byte_end":62601,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ - `userdata` — the pointer to pass to `callback` along with the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62606,"byte_end":62675,"line_start":140,"line_end":140,"column_start":5,"column_end":72}},{"value":"/   arguments when the closure is called","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62680,"byte_end":62722,"line_start":141,"line_end":141,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62727,"byte_end":62730,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62735,"byte_end":62747,"line_start":143,"line_end":143,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62752,"byte_end":62755,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The new closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":62760,"byte_end":62780,"line_start":145,"line_end":145,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63342,"byte_end":63359,"line_start":166,"line_end":166,"column_start":12,"column_end":29},"name":"into_closure_once","qualname":"<Builder>::into_closure_once","value":"fn <U, R> (self, callback: super::CallbackOnce<U, R>, userdata: U) -> super::ClosureOnce","parent":null,"children":[],"decl_id":null,"docs":" Builds a one-shot closure.","sig":null,"attributes":[{"value":"/ Builds a one-shot closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63012,"byte_end":63042,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63047,"byte_end":63050,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63055,"byte_end":63070,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63075,"byte_end":63078,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ - `callback` — the function to call when the closure is invoked","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63083,"byte_end":63152,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ - `userdata` — the object to pass to `callback` along with the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63157,"byte_end":63225,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/   arguments when the closure is called","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63230,"byte_end":63272,"line_start":161,"line_end":161,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63277,"byte_end":63280,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63285,"byte_end":63297,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63302,"byte_end":63305,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The new closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":63310,"byte_end":63330,"line_start":165,"line_end":165,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3004},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32025,"byte_end":32028,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"Arg","qualname":"::middle::Arg","value":"","parent":null,"children":[],"decl_id":null,"docs":" Contains an untyped pointer to a function argument.","sig":null,"attributes":[{"value":"/ Contains an untyped pointer to a function argument.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31729,"byte_end":31784,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31785,"byte_end":31788,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ When calling a function via a [CIF](struct.Cif.html), each argument","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31789,"byte_end":31860,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ must be passed as a C `void*`. Wrapping the argument in the `Arg`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31861,"byte_end":31930,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ struct accomplishes the necessary coercion.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":31931,"byte_end":31978,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32003,"byte_end":32013,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32259,"byte_end":32262,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Arg>::new","value":"fn <T> (r: &T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces an argument reference into the `Arg` type.","sig":null,"attributes":[{"value":"/ Coerces an argument reference into the `Arg` type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32059,"byte_end":32113,"line_start":40,"line_end":40,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32118,"byte_end":32121,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This is used to wrap each argument pointer before passing them","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32126,"byte_end":32192,"line_start":42,"line_end":42,"column_start":5,"column_end":71}},{"value":"/ to [`Cif::call`](struct.Cif.html#method.call).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32197,"byte_end":32247,"line_start":43,"line_end":43,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32609,"byte_end":32612,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"arg","qualname":"::middle::arg","value":"fn <T> (r: &T) -> Arg","parent":null,"children":[],"decl_id":null,"docs":" Coerces an argument reference into the [`Arg`](struct.Arg.html)\n type.","sig":null,"attributes":[{"value":"/ Coerces an argument reference into the [`Arg`](struct.Arg.html)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32334,"byte_end":32401,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/ type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32402,"byte_end":32411,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32412,"byte_end":32415,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This is used to wrap each argument pointer before passing them","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32416,"byte_end":32482,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ to [`Cif::call`](struct.Cif.html#method.call).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32483,"byte_end":32533,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/ (This is the same as [`Arg::new`](struct.Arg.html#method.new)).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32534,"byte_end":32601,"line_start":54,"line_end":54,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3011},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33543,"byte_end":33546,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"Cif","qualname":"::middle::Cif","value":"Cif {  }","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014}],"decl_id":null,"docs":" Describes the calling convention and types for calling a function.","sig":null,"attributes":[{"value":"/ Describes the calling convention and types for calling a function.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32651,"byte_end":32721,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32722,"byte_end":32725,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This is the `middle` layer’s wrapping of the `low` and `raw` layers’","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32726,"byte_end":32802,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ [`ffi_cif`](../raw/struct.ffi_cif.html). An initialized CIF contains","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32803,"byte_end":32875,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ references to an array of argument types and a result type, each of","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32876,"byte_end":32947,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ which may be allocated on the heap. `Cif` manages the memory of","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32948,"byte_end":33015,"line_start":64,"line_end":64,"column_start":1,"column_end":68}},{"value":"/ those referenced objects.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33016,"byte_end":33045,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33046,"byte_end":33049,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Construct with [`Cif::new`](#method.new) or","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33050,"byte_end":33097,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/ [`Cif::from_type_array`](#method.from_type_array).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33098,"byte_end":33152,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33153,"byte_end":33156,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33157,"byte_end":33171,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33172,"byte_end":33175,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33176,"byte_end":33183,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ extern \"C\" fn add(x: f64, y: &f64) -> f64 {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33184,"byte_end":33231,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/     return x + y;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33232,"byte_end":33253,"line_start":74,"line_end":74,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33254,"byte_end":33259,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33260,"byte_end":33263,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use libffi::middle::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33264,"byte_end":33290,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33291,"byte_end":33294,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let args = vec![Type::f64(), Type::pointer()];","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33295,"byte_end":33345,"line_start":79,"line_end":79,"column_start":1,"column_end":51}},{"value":"/ let cif = Cif::new(args.into_iter(), Type::f64());","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33346,"byte_end":33400,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33401,"byte_end":33404,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let n = unsafe { cif.call(CodePtr(add as *mut _), &[arg(&5), arg(&&6)]) };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33405,"byte_end":33483,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(11, n);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33484,"byte_end":33506,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33507,"byte_end":33514,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34462,"byte_end":34465,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<Cif>::new","value":"fn <I> (args: I, result: Type) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CIF for the given argument and result types.","sig":null,"attributes":[{"value":"/ Creates a new CIF for the given argument and result types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34092,"byte_end":34154,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34159,"byte_end":34162,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Takes ownership of the argument and result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34167,"byte_end":34213,"line_start":112,"line_end":112,"column_start":5,"column_end":51}},{"value":"/ [`Type`](types/struct.Type.html)s, because the resulting","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34218,"byte_end":34278,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/ `Cif` retains references to them.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34283,"byte_end":34320,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ Defaults to the platform’s default calling convention; this","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34325,"byte_end":34390,"line_start":115,"line_end":115,"column_start":5,"column_end":68}},{"value":"/ can be adjusted using [`set_abi`](#method.set_abi).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34395,"byte_end":34450,"line_start":116,"line_end":116,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35692,"byte_end":35696,"line_start":153,"line_end":153,"column_start":19,"column_end":23},"name":"call","qualname":"<Cif>::call","value":"fn <R> (&self, fun: CodePtr, args: &[Arg]) -> R","parent":null,"children":[],"decl_id":null,"docs":" Calls a function with the given arguments.","sig":null,"attributes":[{"value":"/ Calls a function with the given arguments.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35274,"byte_end":35320,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35325,"byte_end":35328,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ In particular, this method invokes function `fun` passing it","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35333,"byte_end":35397,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/ arguments `args`, and returns the result.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35402,"byte_end":35447,"line_start":146,"line_end":146,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35452,"byte_end":35455,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35460,"byte_end":35472,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35477,"byte_end":35480,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ There is no checking that the calling convention and types","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35485,"byte_end":35547,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/ in the `Cif` match the actual calling convention and types of","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35552,"byte_end":35617,"line_start":151,"line_end":151,"column_start":5,"column_end":70}},{"value":"/ `fun`, nor that they match the types of `args`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":35622,"byte_end":35673,"line_start":152,"line_end":152,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36175,"byte_end":36182,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"set_abi","qualname":"<Cif>::set_abi","value":"fn (&mut self, abi: FfiAbi) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the CIF to use the given calling convention.\n","sig":null,"attributes":[{"value":"/ Sets the CIF to use the given calling convention.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36110,"byte_end":36163,"line_start":165,"line_end":165,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36507,"byte_end":36517,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"as_raw_ptr","qualname":"<Cif>::as_raw_ptr","value":"fn (&self) -> *mut low::ffi_cif","parent":null,"children":[],"decl_id":null,"docs":" Gets a raw pointer to the underlying\n [`ffi_cif`](../low/struct.ffi_cif.html).","sig":null,"attributes":[{"value":"/ Gets a raw pointer to the underlying","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36248,"byte_end":36288,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/ [`ffi_cif`](../low/struct.ffi_cif.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36293,"byte_end":36337,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36342,"byte_end":36345,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This can be used for passing a `middle::Cif` to functions from the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36350,"byte_end":36420,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ [`low`](../low/index.html) and [`raw`](../raw/index.html) modules.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36425,"byte_end":36495,"line_start":174,"line_end":174,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3017},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38450,"byte_end":38457,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"Closure","qualname":"::middle::Closure","value":"Closure {  }","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022}],"decl_id":null,"docs":" Represents a closure callable from C.","sig":null,"attributes":[{"value":"/ Represents a closure callable from C.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36597,"byte_end":36638,"line_start":180,"line_end":180,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36639,"byte_end":36642,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ A libffi closure captures a `void*` (“userdata”) and passes it to a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36643,"byte_end":36718,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/ callback when the code pointer (obtained via","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36719,"byte_end":36767,"line_start":183,"line_end":183,"column_start":1,"column_end":49}},{"value":"/ [`code_ptr`](#method.code_ptr)) is invoked. Lifetype parameter `'a`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36768,"byte_end":36839,"line_start":184,"line_end":184,"column_start":1,"column_end":72}},{"value":"/ ensures that the closure does not outlive the userdata.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36840,"byte_end":36899,"line_start":185,"line_end":185,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36900,"byte_end":36903,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ Construct with [`Closure::new`](#method.new) and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36904,"byte_end":36956,"line_start":187,"line_end":187,"column_start":1,"column_end":53}},{"value":"/ [`Closure::new_mut`](#method.new_mut).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":36957,"byte_end":36999,"line_start":188,"line_end":188,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37000,"byte_end":37003,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37004,"byte_end":37018,"line_start":190,"line_end":190,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37019,"byte_end":37022,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In this example we turn a Rust lambda into a C function. We first","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37023,"byte_end":37092,"line_start":192,"line_end":192,"column_start":1,"column_end":70}},{"value":"/ define function `lambda_callback`, which will be called by libffi","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37093,"byte_end":37162,"line_start":193,"line_end":193,"column_start":1,"column_end":70}},{"value":"/ when the closure is called. The callback function takes four","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37163,"byte_end":37227,"line_start":194,"line_end":194,"column_start":1,"column_end":65}},{"value":"/ arguments: a CIF describing its arguments, a pointer for where to","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37228,"byte_end":37297,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ store its result, a pointer to an array of pointers to its","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37298,"byte_end":37360,"line_start":196,"line_end":196,"column_start":1,"column_end":63}},{"value":"/ arguments, and a userdata pointer. In this ase, the Rust closure","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37361,"byte_end":37429,"line_start":197,"line_end":197,"column_start":1,"column_end":69}},{"value":"/ value `lambda` is passed as userdata to `lambda_callback`, which","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37430,"byte_end":37498,"line_start":198,"line_end":198,"column_start":1,"column_end":69}},{"value":"/ then invokes it.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37499,"byte_end":37519,"line_start":199,"line_end":199,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37520,"byte_end":37523,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37524,"byte_end":37531,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ use std::mem;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37532,"byte_end":37549,"line_start":202,"line_end":202,"column_start":1,"column_end":18}},{"value":"/ use std::os::raw::c_void;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37550,"byte_end":37579,"line_start":203,"line_end":203,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37580,"byte_end":37583,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ use libffi::middle::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37584,"byte_end":37610,"line_start":205,"line_end":205,"column_start":1,"column_end":27}},{"value":"/ use libffi::low;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37611,"byte_end":37631,"line_start":206,"line_end":206,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37632,"byte_end":37635,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ unsafe extern \"C\" fn lambda_callback<F: Fn(u64, u64) -> u64>(","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37636,"byte_end":37701,"line_start":208,"line_end":208,"column_start":1,"column_end":66}},{"value":"/     _cif: &low::ffi_cif,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37702,"byte_end":37730,"line_start":209,"line_end":209,"column_start":1,"column_end":29}},{"value":"/     result: &mut u64,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37731,"byte_end":37756,"line_start":210,"line_end":210,"column_start":1,"column_end":26}},{"value":"/     args: *const *const c_void,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37757,"byte_end":37792,"line_start":211,"line_end":211,"column_start":1,"column_end":36}},{"value":"/     userdata: &F)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37793,"byte_end":37814,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37815,"byte_end":37820,"line_start":213,"line_end":213,"column_start":1,"column_end":6}},{"value":"/     let args: *const &u64 = mem::transmute(args);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37821,"byte_end":37874,"line_start":214,"line_end":214,"column_start":1,"column_end":54}},{"value":"/     let arg1 = **args.offset(0);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37875,"byte_end":37911,"line_start":215,"line_end":215,"column_start":1,"column_end":37}},{"value":"/     let arg2 = **args.offset(1);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37912,"byte_end":37948,"line_start":216,"line_end":216,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37949,"byte_end":37952,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/     *result = userdata(arg1, arg2);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37953,"byte_end":37992,"line_start":218,"line_end":218,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37993,"byte_end":37998,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":37999,"byte_end":38002,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ let cif = Cif::new(vec![Type::u64(), Type::u64()].into_iter(),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38003,"byte_end":38069,"line_start":221,"line_end":221,"column_start":1,"column_end":67}},{"value":"/                    Type::u64());","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38070,"byte_end":38106,"line_start":222,"line_end":222,"column_start":1,"column_end":37}},{"value":"/ let lambda = |x: u64, y: u64| x + y;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38107,"byte_end":38147,"line_start":223,"line_end":223,"column_start":1,"column_end":41}},{"value":"/ let closure = Closure::new(cif, lambda_callback, &lambda);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38148,"byte_end":38210,"line_start":224,"line_end":224,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38211,"byte_end":38214,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38215,"byte_end":38227,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/     let fun: &unsafe extern \"C\" fn(u64, u64) -> u64","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38228,"byte_end":38283,"line_start":227,"line_end":227,"column_start":1,"column_end":56}},{"value":"/         = mem::transmute(closure.code_ptr());","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38284,"byte_end":38333,"line_start":228,"line_end":228,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38334,"byte_end":38337,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(11, fun(5, 6));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38338,"byte_end":38372,"line_start":230,"line_end":230,"column_start":1,"column_end":35}},{"value":"/     assert_eq!(12, fun(5, 7));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38373,"byte_end":38407,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38408,"byte_end":38413,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38414,"byte_end":38421,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39191,"byte_end":39194,"line_start":264,"line_end":264,"column_start":12,"column_end":15},"name":"new","qualname":"<Closure>::new","value":"fn <U, R> (cif: Cif, callback: Callback<U, R>, userdata: &'a U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new closure with immutable userdata.","sig":null,"attributes":[{"value":"/ Creates a new closure with immutable userdata.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38747,"byte_end":38797,"line_start":251,"line_end":251,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38802,"byte_end":38805,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38810,"byte_end":38825,"line_start":253,"line_end":253,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38830,"byte_end":38833,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ - `cif` — describes the calling convention and argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38838,"byte_end":38903,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/   result types","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38908,"byte_end":38926,"line_start":256,"line_end":256,"column_start":5,"column_end":23}},{"value":"/ - `callback` — the function to call when the closure is invoked","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38931,"byte_end":39000,"line_start":257,"line_end":257,"column_start":5,"column_end":72}},{"value":"/ - `userdata` — the pointer to pass to `callback` along with the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39005,"byte_end":39074,"line_start":258,"line_end":258,"column_start":5,"column_end":72}},{"value":"/   arguments when the closure is called","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39079,"byte_end":39121,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39126,"byte_end":39129,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39134,"byte_end":39146,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39151,"byte_end":39154,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The new closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39159,"byte_end":39179,"line_start":263,"line_end":263,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40246,"byte_end":40253,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"new_mut","qualname":"<Closure>::new_mut","value":"fn <U, R> (cif: Cif, callback: CallbackMut<U, R>, userdata: &'a mut U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new closure with mutable userdata.","sig":null,"attributes":[{"value":"/ Creates a new closure with mutable userdata.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39804,"byte_end":39852,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39857,"byte_end":39860,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39865,"byte_end":39880,"line_start":289,"line_end":289,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39885,"byte_end":39888,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ - `cif` — describes the calling convention and argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39893,"byte_end":39958,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/   result types","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39963,"byte_end":39981,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ - `callback` — the function to call when the closure is invoked","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":39986,"byte_end":40055,"line_start":293,"line_end":293,"column_start":5,"column_end":72}},{"value":"/ - `userdata` — the pointer to pass to `callback` along with the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40060,"byte_end":40129,"line_start":294,"line_end":294,"column_start":5,"column_end":72}},{"value":"/   arguments when the closure is called","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40134,"byte_end":40176,"line_start":295,"line_end":295,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40181,"byte_end":40184,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40189,"byte_end":40201,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40206,"byte_end":40209,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The new closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40214,"byte_end":40234,"line_start":299,"line_end":299,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41154,"byte_end":41162,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"code_ptr","qualname":"<Closure>::code_ptr","value":"fn (&self) -> &unsafe extern \"C\" fn()","parent":null,"children":[],"decl_id":null,"docs":" Obtains the callable code pointer for a closure.","sig":null,"attributes":[{"value":"/ Obtains the callable code pointer for a closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40896,"byte_end":40948,"line_start":323,"line_end":323,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40953,"byte_end":40956,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40961,"byte_end":40973,"line_start":325,"line_end":325,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40978,"byte_end":40981,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ The result needs to be transmuted to the correct type before","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":40986,"byte_end":41050,"line_start":327,"line_end":327,"column_start":5,"column_end":69}},{"value":"/ it can be called. If the type is wrong then undefined behavior","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41055,"byte_end":41121,"line_start":328,"line_end":328,"column_start":5,"column_end":71}},{"value":"/ will result.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41126,"byte_end":41142,"line_start":329,"line_end":329,"column_start":5,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":199},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41328,"byte_end":41340,"line_start":337,"line_end":337,"column_start":10,"column_end":22},"name":"CallbackOnce","qualname":"::middle::CallbackOnce","value":"CallbackMut<Option<U>, R>","parent":null,"children":[],"decl_id":null,"docs":" The type of callback invoked by a\n [`ClosureOnce`](struct.ClosureOnce.html).\n","sig":null,"attributes":[{"value":"/ The type of callback invoked by a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41235,"byte_end":41272,"line_start":335,"line_end":335,"column_start":1,"column_end":38}},{"value":"/ [`ClosureOnce`](struct.ClosureOnce.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41273,"byte_end":41318,"line_start":336,"line_end":336,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3026},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41583,"byte_end":41594,"line_start":344,"line_end":344,"column_start":12,"column_end":23},"name":"ClosureOnce","qualname":"::middle::ClosureOnce","value":"ClosureOnce {  }","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030}],"decl_id":null,"docs":" A closure that owns needs-drop data.","sig":null,"attributes":[{"value":"/ A closure that owns needs-drop data.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41377,"byte_end":41417,"line_start":339,"line_end":339,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41418,"byte_end":41421,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ This allows the closure’s callback to take ownership of the data, in","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41422,"byte_end":41496,"line_start":341,"line_end":341,"column_start":1,"column_end":73}},{"value":"/ which case the userdata will be gone if called again.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41497,"byte_end":41554,"line_start":342,"line_end":342,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42307,"byte_end":42310,"line_start":373,"line_end":373,"column_start":12,"column_end":15},"name":"new","qualname":"<ClosureOnce>::new","value":"fn <U, R> (cif: Cif, callback: CallbackOnce<U, R>, userdata: U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new closure with owned userdata.","sig":null,"attributes":[{"value":"/ Creates a new closure with owned userdata.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41869,"byte_end":41915,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41920,"byte_end":41923,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41928,"byte_end":41943,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41948,"byte_end":41951,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ - `cif` — describes the calling convention and argument and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41956,"byte_end":42021,"line_start":364,"line_end":364,"column_start":5,"column_end":68}},{"value":"/   result types","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42026,"byte_end":42044,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ - `callback` — the function to call when the closure is invoked","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42049,"byte_end":42118,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/ - `userdata` — the value to pass to `callback` along with the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42123,"byte_end":42190,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/   arguments when the closure is called","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42195,"byte_end":42237,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42242,"byte_end":42245,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42250,"byte_end":42262,"line_start":370,"line_end":370,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42267,"byte_end":42270,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The new closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":42275,"byte_end":42295,"line_start":372,"line_end":372,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":43505,"byte_end":43513,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"name":"code_ptr","qualname":"<ClosureOnce>::code_ptr","value":"fn (&self) -> &unsafe extern \"C\" fn()","parent":null,"children":[],"decl_id":null,"docs":" Obtains the callable code pointer for a closure.","sig":null,"attributes":[{"value":"/ Obtains the callable code pointer for a closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":43247,"byte_end":43299,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":43304,"byte_end":43307,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":43312,"byte_end":43324,"line_start":405,"line_end":405,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":43329,"byte_end":43332,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The result needs to be transmuted to the correct type before","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":43337,"byte_end":43401,"line_start":407,"line_end":407,"column_start":5,"column_end":69}},{"value":"/ it can be called. If the type is wrong then undefined behavior","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":43406,"byte_end":43472,"line_start":408,"line_end":408,"column_start":5,"column_end":71}},{"value":"/ will result.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":43477,"byte_end":43493,"line_start":409,"line_end":409,"column_start":5,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":209},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"low","qualname":"::low","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":3033},{"krate":0,"index":3055},{"krate":0,"index":3053},{"krate":0,"index":3051},{"krate":0,"index":3048},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3040},{"krate":0,"index":3038},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":3056},{"krate":0,"index":3065},{"krate":0,"index":3064},{"krate":0,"index":3062},{"krate":0,"index":3059},{"krate":0,"index":219},{"krate":0,"index":226},{"krate":0,"index":233},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":268}],"decl_id":null,"docs":" A low-level wrapping of libffi, this layer makes no attempts at safety,\n but tries to provide a somewhat more idiomatic interface.","sig":null,"attributes":[{"value":"! A low-level wrapping of libffi, this layer makes no attempts at safety,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":63566,"byte_end":63641,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"! but tries to provide a somewhat more idiomatic interface.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":63642,"byte_end":63703,"line_start":2,"line_end":2,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":63704,"byte_end":63707,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This module also re-exports types and constants necessary for using the","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":63708,"byte_end":63783,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! library, so it should not be generally necessary to use the `raw` module.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":63784,"byte_end":63861,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"! While this is a bit “Rustier” than [`raw`](../raw/index.html), I’ve","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":63862,"byte_end":63939,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"! avoided drastic renaming in favor of hewing close to the libffi API.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":63940,"byte_end":64012,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! See [`middle`](../middle/index.html) for an easier-to-use approach.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64013,"byte_end":64084,"line_start":8,"line_end":8,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3034},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64340,"byte_end":64347,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Typedef","qualname":"::low::Error::Typedef","value":"Error::Typedef","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":" Given a bad or unsupported type representation.\n","sig":null,"attributes":[{"value":"/ Given a bad or unsupported type representation.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64284,"byte_end":64335,"line_start":18,"line_end":18,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3036},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64393,"byte_end":64396,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Abi","qualname":"::low::Error::Abi","value":"Error::Abi","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":" Given a bad or unsupported ABI.\n","sig":null,"attributes":[{"value":"/ Given a bad or unsupported ABI.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64353,"byte_end":64388,"line_start":20,"line_end":20,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3033},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64272,"byte_end":64277,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::low::Error","value":"Error::{Typedef, Abi}","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3036}],"decl_id":null,"docs":" The two kinds of errors reported by libffi.\n","sig":null,"attributes":[{"value":"/ The two kinds of errors reported by libffi.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64147,"byte_end":64194,"line_start":15,"line_end":15,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":215},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64465,"byte_end":64471,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Result","qualname":"::low::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The `Result` type specialized for libffi `Error`s.\n","sig":null,"attributes":[{"value":"/ The `Result` type specialized for libffi `Error`s.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64401,"byte_end":64455,"line_start":24,"line_end":24,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3056},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65272,"byte_end":65279,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"CodePtr","qualname":"::low::CodePtr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps a function pointer of unknown type.","sig":null,"attributes":[{"value":"/ Wraps a function pointer of unknown type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64926,"byte_end":64971,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64972,"byte_end":64975,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is used to make the API a bit easier to understand, and as a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":64976,"byte_end":65045,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ simple type lint. As a `repr(C)` struct of one element, it should","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65046,"byte_end":65115,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ be safe to transmute between `CodePtr` and `*mut c_void`, or between","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65116,"byte_end":65188,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ collections thereof.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65189,"byte_end":65213,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"repr(C)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65250,"byte_end":65260,"line_start":43,"line_end":43,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65588,"byte_end":65596,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"from_fun","qualname":"<CodePtr>::from_fun","value":"fn (fun: unsafe extern \"C\" fn()) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a code pointer from a function pointer.","sig":null,"attributes":[{"value":"/ Initializes a code pointer from a function pointer.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65376,"byte_end":65431,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65436,"byte_end":65439,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is useful mainly for talking to C APIs that take untyped","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65444,"byte_end":65509,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/ callbacks specified in the API as having type `void(*)()`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65514,"byte_end":65576,"line_start":51,"line_end":51,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65869,"byte_end":65877,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"from_ptr","qualname":"<CodePtr>::from_ptr","value":"fn (fun: *const c_void) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a code pointer from a void pointer.","sig":null,"attributes":[{"value":"/ Initializes a code pointer from a void pointer.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65683,"byte_end":65734,"line_start":56,"line_end":56,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65739,"byte_end":65742,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This is the other common type used in APIs (or at least in","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65747,"byte_end":65809,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/ libffi) for untyped callback arguments.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65814,"byte_end":65857,"line_start":59,"line_end":59,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66439,"byte_end":66445,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"as_fun","qualname":"<CodePtr>::as_fun","value":"fn (&self) -> &unsafe extern \"C\" fn()","parent":null,"children":[],"decl_id":null,"docs":" Gets the code pointer typed as a C function pointer.","sig":null,"attributes":[{"value":"/ Gets the code pointer typed as a C function pointer.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65955,"byte_end":66011,"line_start":64,"line_end":64,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66016,"byte_end":66019,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This is useful mainly for talking to C APIs that take untyped","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66024,"byte_end":66089,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/ callbacks specified in the API as having type `void(*)()`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66094,"byte_end":66156,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66161,"byte_end":66164,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66169,"byte_end":66181,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66186,"byte_end":66189,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ There is no checking that the returned type reflects the actual","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66194,"byte_end":66261,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ parameter and return types of the function. Unless the C","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66266,"byte_end":66326,"line_start":72,"line_end":72,"column_start":5,"column_end":65}},{"value":"/ function actually has type `void(*)()`, it will need to be","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66331,"byte_end":66393,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/ cast before it is called.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66398,"byte_end":66427,"line_start":74,"line_end":74,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67351,"byte_end":67362,"line_start":96,"line_end":96,"column_start":19,"column_end":30},"name":"as_safe_fun","qualname":"<CodePtr>::as_safe_fun","value":"fn (&self) -> &extern \"C\" fn()","parent":null,"children":[],"decl_id":null,"docs":" Gets the code pointer typed as a “safe” C function pointer.","sig":null,"attributes":[{"value":"/ Gets the code pointer typed as a “safe” C function pointer.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66597,"byte_end":66664,"line_start":81,"line_end":81,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66669,"byte_end":66672,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is useful mainly for talking to C APIs that take untyped","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66677,"byte_end":66742,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ callbacks specified in the API as having type `void(*)()`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66747,"byte_end":66809,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66814,"byte_end":66817,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66822,"byte_end":66834,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66839,"byte_end":66842,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ There isn’t necessarily anything actually safe about the resulting","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66847,"byte_end":66919,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ function pointer—it’s up to the caller to know what they’re","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66924,"byte_end":66993,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"/ doing within the unsafety boundary, or undefined behavior may","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":66998,"byte_end":67063,"line_start":90,"line_end":90,"column_start":5,"column_end":70}},{"value":"/ result. In particular,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67068,"byte_end":67094,"line_start":91,"line_end":91,"column_start":5,"column_end":31}},{"value":"/ there is no checking that the returned type reflects the actual","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67099,"byte_end":67166,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/ parameter and return types of the function. Unless the C","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67171,"byte_end":67231,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/ function actually has type `void(*)()`, it will need to be","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67236,"byte_end":67298,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/ cast before it is called.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67303,"byte_end":67332,"line_start":95,"line_end":95,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67655,"byte_end":67661,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<CodePtr>::as_ptr","value":"fn (&self) -> *const c_void","parent":null,"children":[],"decl_id":null,"docs":" Gets the code pointer typed as a `const void*`.","sig":null,"attributes":[{"value":"/ Gets the code pointer typed as a `const void*`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67469,"byte_end":67520,"line_start":100,"line_end":100,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67525,"byte_end":67528,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is the other common type used in APIs (or at least in","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67533,"byte_end":67595,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/ libffi) for untyped callback arguments.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67600,"byte_end":67643,"line_start":103,"line_end":103,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67894,"byte_end":67904,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<CodePtr>::as_mut_ptr","value":"fn (&self) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Gets the code pointer typed as a `void*`.","sig":null,"attributes":[{"value":"/ Gets the code pointer typed as a `void*`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67714,"byte_end":67759,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67764,"byte_end":67767,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This is the other common type used in APIs (or at least in","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67772,"byte_end":67834,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ libffi) for untyped callback arguments.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":67839,"byte_end":67882,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":233},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68353,"byte_end":68358,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"types","qualname":"::low::types","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","parent":null,"children":[{"krate":0,"index":234}],"decl_id":null,"docs":" Re-exports the `ffi_type` objects used to describe the types of\n arguments and results.","sig":null,"attributes":[{"value":"/ Re-exports the `ffi_type` objects used to describe the types of","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68074,"byte_end":68141,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/ arguments and results.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68142,"byte_end":68168,"line_start":121,"line_end":121,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68169,"byte_end":68172,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ These are from [`raw`](../../raw/index.html), but are renamed by","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68173,"byte_end":68241,"line_start":123,"line_end":123,"column_start":1,"column_end":69}},{"value":"/ removing the `ffi_type_` prefix. For example, `raw::ffi_type_void`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68242,"byte_end":68312,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/ becomes `low::types::void`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":68313,"byte_end":68344,"line_start":125,"line_end":125,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70351,"byte_end":70359,"line_start":184,"line_end":184,"column_start":9,"column_end":17},"name":"type_tag","qualname":"::low::type_tag","value":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"decl_id":null,"docs":" Type tags used in constructing and inspecting `ffi_type`s.","sig":null,"attributes":[{"value":"/ Type tags used in constructing and inspecting `ffi_type`s.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69172,"byte_end":69234,"line_start":146,"line_end":146,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69235,"byte_end":69238,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ For atomic types this tag doesn’t matter because libffi predeclares","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69239,"byte_end":69312,"line_start":148,"line_end":148,"column_start":1,"column_end":72}},{"value":"/ [an instance of each one](types/index.html). However, for composite","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69313,"byte_end":69384,"line_start":149,"line_end":149,"column_start":1,"column_end":72}},{"value":"/ types (structs and complex numbers), we need to create a new","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69385,"byte_end":69449,"line_start":150,"line_end":150,"column_start":1,"column_end":65}},{"value":"/ instance of the `ffi_type` struct. In particular, the `type_` field","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69450,"byte_end":69521,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/ contains a value that indicates what kind of type is represented,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69522,"byte_end":69591,"line_start":152,"line_end":152,"column_start":1,"column_end":70}},{"value":"/ and we use these values to indicate that that we are describing a","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69592,"byte_end":69661,"line_start":153,"line_end":153,"column_start":1,"column_end":70}},{"value":"/ struct or complex type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69662,"byte_end":69689,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69690,"byte_end":69693,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69694,"byte_end":69708,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69709,"byte_end":69712,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Suppose we have the following C struct:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69713,"byte_end":69756,"line_start":158,"line_end":158,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69757,"byte_end":69760,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```c","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69761,"byte_end":69769,"line_start":160,"line_end":160,"column_start":1,"column_end":9}},{"value":"/ struct my_struct {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69770,"byte_end":69792,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/     uint16_t f1;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69793,"byte_end":69813,"line_start":162,"line_end":162,"column_start":1,"column_end":21}},{"value":"/     uint64_t f2;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69814,"byte_end":69834,"line_start":163,"line_end":163,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69835,"byte_end":69841,"line_start":164,"line_end":164,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69842,"byte_end":69849,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69850,"byte_end":69853,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ To pass it by value to a C function we can construct an","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69854,"byte_end":69913,"line_start":167,"line_end":167,"column_start":1,"column_end":60}},{"value":"/ `ffi_type` as follows using `type_tag::STRUCT`:","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69914,"byte_end":69965,"line_start":168,"line_end":168,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69966,"byte_end":69969,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69970,"byte_end":69977,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/ use std::ptr;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69978,"byte_end":69995,"line_start":171,"line_end":171,"column_start":1,"column_end":18}},{"value":"/ use libffi::low::{ffi_type, types, type_tag};","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":69996,"byte_end":70045,"line_start":172,"line_end":172,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70046,"byte_end":70049,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ let mut elements = unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70050,"byte_end":70081,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/     [ &mut types::uint16,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70082,"byte_end":70111,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/       &mut types::uint64,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70112,"byte_end":70141,"line_start":176,"line_end":176,"column_start":1,"column_end":30}},{"value":"/       ptr::null_mut::<ffi_type>() ]","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70142,"byte_end":70181,"line_start":177,"line_end":177,"column_start":1,"column_end":40}},{"value":"/ };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70182,"byte_end":70188,"line_start":178,"line_end":178,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70189,"byte_end":70192,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ let mut my_struct: ffi_type = Default::default();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70193,"byte_end":70246,"line_start":180,"line_end":180,"column_start":1,"column_end":54}},{"value":"/ my_struct.type_ = type_tag::STRUCT;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70247,"byte_end":70286,"line_start":181,"line_end":181,"column_start":1,"column_end":40}},{"value":"/ my_struct.elements = elements.as_mut_ptr();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70287,"byte_end":70334,"line_start":182,"line_end":182,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70335,"byte_end":70342,"line_start":183,"line_end":183,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":251},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70458,"byte_end":70464,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"name":"STRUCT","qualname":"::low::type_tag::STRUCT","value":"c_ushort","parent":null,"children":[],"decl_id":null,"docs":" Indicates a structure type.\n","sig":null,"attributes":[{"value":"/ Indicates a structure type.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70412,"byte_end":70443,"line_start":188,"line_end":188,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71985,"byte_end":71993,"line_start":241,"line_end":241,"column_start":15,"column_end":23},"name":"prep_cif","qualname":"::low::prep_cif","value":"fn (cif: *mut ffi_cif, abi: ffi_abi, nargs: usize, rtype: *mut ffi_type, atypes: *mut *mut ffi_type) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initalizes a CIF (Call Interface) with the given ABI\n and types.","sig":null,"attributes":[{"value":"/ Initalizes a CIF (Call Interface) with the given ABI","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70739,"byte_end":70795,"line_start":198,"line_end":198,"column_start":1,"column_end":57}},{"value":"/ and types.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70796,"byte_end":70810,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70811,"byte_end":70814,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ We need to initialize a CIF before we can use it to call a function","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70815,"byte_end":70886,"line_start":201,"line_end":201,"column_start":1,"column_end":72}},{"value":"/ or create a closure. This function lets us specify the calling","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70887,"byte_end":70953,"line_start":202,"line_end":202,"column_start":1,"column_end":67}},{"value":"/ convention to use and the argument and result types. For varargs","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":70954,"byte_end":71022,"line_start":203,"line_end":203,"column_start":1,"column_end":69}},{"value":"/ CIF initialization, see [`prep_cif_var`](fn.prep_cif_var.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71023,"byte_end":71090,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71091,"byte_end":71094,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71095,"byte_end":71098,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71099,"byte_end":71111,"line_start":207,"line_end":207,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71112,"byte_end":71115,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ The CIF `cif` retains references to `rtype` and `atypes`, so if","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71116,"byte_end":71183,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/ they are no longer live when the CIF is used then the behavior is","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71184,"byte_end":71253,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ undefined.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71254,"byte_end":71268,"line_start":211,"line_end":211,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71269,"byte_end":71272,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71273,"byte_end":71288,"line_start":213,"line_end":213,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71289,"byte_end":71292,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ - `cif` — the CIF to initialize","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71293,"byte_end":71330,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/ - `abi` — the calling convention to use","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71331,"byte_end":71376,"line_start":216,"line_end":216,"column_start":1,"column_end":44}},{"value":"/ - `nargs` — the number of arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71377,"byte_end":71418,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/ - `rtype` — the result type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71419,"byte_end":71452,"line_start":218,"line_end":218,"column_start":1,"column_end":32}},{"value":"/ - `atypes` — the argument types (length must be at least `nargs`)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71453,"byte_end":71524,"line_start":219,"line_end":219,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71525,"byte_end":71528,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71529,"byte_end":71541,"line_start":221,"line_end":221,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71542,"byte_end":71545,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ `Ok(())` for success or `Err(e)` for failure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71546,"byte_end":71595,"line_start":223,"line_end":223,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71596,"byte_end":71599,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71600,"byte_end":71614,"line_start":225,"line_end":225,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71615,"byte_end":71618,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71619,"byte_end":71626,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"/ use libffi::low::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71627,"byte_end":71650,"line_start":228,"line_end":228,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71651,"byte_end":71654,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ let mut args: [*mut ffi_type; 2] = unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71655,"byte_end":71702,"line_start":230,"line_end":230,"column_start":1,"column_end":48}},{"value":"/     [ &mut types::sint32,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71703,"byte_end":71732,"line_start":231,"line_end":231,"column_start":1,"column_end":30}},{"value":"/       &mut types::uint64 ]","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71733,"byte_end":71763,"line_start":232,"line_end":232,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71764,"byte_end":71770,"line_start":233,"line_end":233,"column_start":1,"column_end":7}},{"value":"/ let mut cif: ffi_cif = Default::default();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71771,"byte_end":71817,"line_start":234,"line_end":234,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71818,"byte_end":71821,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71822,"byte_end":71834,"line_start":236,"line_end":236,"column_start":1,"column_end":13}},{"value":"/     prep_cif(&mut cif, ffi_abi_FFI_DEFAULT_ABI, 2,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71835,"byte_end":71889,"line_start":237,"line_end":237,"column_start":1,"column_end":55}},{"value":"/              &mut types::pointer, args.as_mut_ptr())","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71890,"byte_end":71946,"line_start":238,"line_end":238,"column_start":1,"column_end":57}},{"value":"/ }.unwrap();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71947,"byte_end":71962,"line_start":239,"line_end":239,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":71963,"byte_end":71970,"line_start":240,"line_end":240,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":253},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73360,"byte_end":73372,"line_start":281,"line_end":281,"column_start":15,"column_end":27},"name":"prep_cif_var","qualname":"::low::prep_cif_var","value":"fn (cif: *mut ffi_cif, abi: ffi_abi, nfixedargs: usize, ntotalargs: usize, rtype: *mut ffi_type, atypes: *mut *mut ffi_type) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initalizes a CIF (Call Interface) for a varargs function.","sig":null,"attributes":[{"value":"/ Initalizes a CIF (Call Interface) for a varargs function.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72402,"byte_end":72463,"line_start":254,"line_end":254,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72464,"byte_end":72467,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ We need to initialize a CIF before we can use it to call a function","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72468,"byte_end":72539,"line_start":256,"line_end":256,"column_start":1,"column_end":72}},{"value":"/ or create a closure. This function lets us specify the calling","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72540,"byte_end":72606,"line_start":257,"line_end":257,"column_start":1,"column_end":67}},{"value":"/ convention to use and the argument and result types. For non-varargs","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72607,"byte_end":72679,"line_start":258,"line_end":258,"column_start":1,"column_end":73}},{"value":"/ CIF initialization, see [`prep_cif`](fn.prep_cif.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72680,"byte_end":72739,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72740,"byte_end":72743,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72744,"byte_end":72756,"line_start":261,"line_end":261,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72757,"byte_end":72760,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ The CIF `cif` retains references to `rtype` and `atypes`, so if","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72761,"byte_end":72828,"line_start":263,"line_end":263,"column_start":1,"column_end":68}},{"value":"/ they are no longer live when the CIF is used then the behavior is","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72829,"byte_end":72898,"line_start":264,"line_end":264,"column_start":1,"column_end":70}},{"value":"/ undefined.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72899,"byte_end":72913,"line_start":265,"line_end":265,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72914,"byte_end":72917,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72918,"byte_end":72933,"line_start":267,"line_end":267,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72934,"byte_end":72937,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ - `cif` — the CIF to initialize","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72938,"byte_end":72975,"line_start":269,"line_end":269,"column_start":1,"column_end":36}},{"value":"/ - `abi` — the calling convention to use","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":72976,"byte_end":73021,"line_start":270,"line_end":270,"column_start":1,"column_end":44}},{"value":"/ - `nfixedargs` — the number of fixed arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73022,"byte_end":73074,"line_start":271,"line_end":271,"column_start":1,"column_end":51}},{"value":"/ - `ntotalargs` — the total number of arguments, including fixed and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73075,"byte_end":73148,"line_start":272,"line_end":272,"column_start":1,"column_end":72}},{"value":"/    var args","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73149,"byte_end":73164,"line_start":273,"line_end":273,"column_start":1,"column_end":16}},{"value":"/ - `rtype` — the result type","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73165,"byte_end":73198,"line_start":274,"line_end":274,"column_start":1,"column_end":32}},{"value":"/ - `atypes` — the argument types (length must be at least `nargs`)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73199,"byte_end":73270,"line_start":275,"line_end":275,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73271,"byte_end":73274,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73275,"byte_end":73287,"line_start":277,"line_end":277,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73288,"byte_end":73291,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ `Ok(())` for success or `Err(e)` for failure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73292,"byte_end":73341,"line_start":279,"line_end":279,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73342,"byte_end":73345,"line_start":280,"line_end":280,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74986,"byte_end":74990,"line_start":332,"line_end":332,"column_start":15,"column_end":19},"name":"call","qualname":"::low::call","value":"fn <R> (cif: *mut ffi_cif, fun: CodePtr, args: *mut *mut c_void) -> R","parent":null,"children":[],"decl_id":null,"docs":" Calls a C function as specified by a CIF.","sig":null,"attributes":[{"value":"/ Calls a C function as specified by a CIF.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73928,"byte_end":73973,"line_start":296,"line_end":296,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73974,"byte_end":73977,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73978,"byte_end":73993,"line_start":298,"line_end":298,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73994,"byte_end":73997,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ * `cif` — describes the argument and result types and the calling","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":73998,"byte_end":74069,"line_start":300,"line_end":300,"column_start":1,"column_end":70}},{"value":"/           convention","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74070,"byte_end":74094,"line_start":301,"line_end":301,"column_start":1,"column_end":25}},{"value":"/ * `fun` — the function to call","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74095,"byte_end":74131,"line_start":302,"line_end":302,"column_start":1,"column_end":35}},{"value":"/ * `args` — the arguments to pass to `fun`","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74132,"byte_end":74179,"line_start":303,"line_end":303,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74180,"byte_end":74183,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74184,"byte_end":74196,"line_start":305,"line_end":305,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74197,"byte_end":74200,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The result of calling `fun` with `args`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74201,"byte_end":74245,"line_start":307,"line_end":307,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74246,"byte_end":74249,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74250,"byte_end":74264,"line_start":309,"line_end":309,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74265,"byte_end":74268,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74269,"byte_end":74276,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/ use std::os::raw::c_void;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74277,"byte_end":74306,"line_start":312,"line_end":312,"column_start":1,"column_end":30}},{"value":"/ use libffi::low::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74307,"byte_end":74330,"line_start":313,"line_end":313,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74331,"byte_end":74334,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ extern \"C\" fn c_function(a: u64, b: u64) -> u64 { a + b }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74335,"byte_end":74396,"line_start":315,"line_end":315,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74397,"byte_end":74400,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ let result = unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74401,"byte_end":74426,"line_start":317,"line_end":317,"column_start":1,"column_end":26}},{"value":"/     let mut args: Vec<*mut ffi_type> = vec![ &mut types::uint64,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74427,"byte_end":74495,"line_start":318,"line_end":318,"column_start":1,"column_end":69}},{"value":"/                                              &mut types::uint64 ];","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74496,"byte_end":74566,"line_start":319,"line_end":319,"column_start":1,"column_end":71}},{"value":"/     let mut cif: ffi_cif = Default::default();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74567,"byte_end":74617,"line_start":320,"line_end":320,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74618,"byte_end":74621,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/     prep_cif(&mut cif, ffi_abi_FFI_DEFAULT_ABI, 2,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74622,"byte_end":74676,"line_start":322,"line_end":322,"column_start":1,"column_end":55}},{"value":"/              &mut types::uint64, args.as_mut_ptr()).unwrap();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74677,"byte_end":74742,"line_start":323,"line_end":323,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74743,"byte_end":74746,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/     call(&mut cif, CodePtr(c_function as *mut _),","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74747,"byte_end":74800,"line_start":325,"line_end":325,"column_start":1,"column_end":54}},{"value":"/          vec![ &mut 4u64 as *mut _ as *mut c_void,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74801,"byte_end":74855,"line_start":326,"line_end":326,"column_start":1,"column_end":55}},{"value":"/                &mut 5u64 as *mut _ as *mut c_void ].as_mut_ptr())","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74856,"byte_end":74925,"line_start":327,"line_end":327,"column_start":1,"column_end":70}},{"value":"/ };","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74926,"byte_end":74932,"line_start":328,"line_end":328,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74933,"byte_end":74936,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(9, result);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74937,"byte_end":74963,"line_start":330,"line_end":330,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":74964,"byte_end":74971,"line_start":331,"line_end":331,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":256},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76007,"byte_end":76020,"line_start":362,"line_end":362,"column_start":8,"column_end":21},"name":"closure_alloc","qualname":"::low::closure_alloc","value":"fn () -> (*mut ffi_closure, CodePtr)","parent":null,"children":[],"decl_id":null,"docs":" Allocates a closure.","sig":null,"attributes":[{"value":"/ Allocates a closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75312,"byte_end":75336,"line_start":344,"line_end":344,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75337,"byte_end":75340,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ Returns a pair of the writable closure object and the function","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75341,"byte_end":75407,"line_start":346,"line_end":346,"column_start":1,"column_end":67}},{"value":"/ pointer for calling it. The former acts as a handle to the closure,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75408,"byte_end":75479,"line_start":347,"line_end":347,"column_start":1,"column_end":72}},{"value":"/ and is used to configure and free it. The latter is the code pointer","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75480,"byte_end":75552,"line_start":348,"line_end":348,"column_start":1,"column_end":73}},{"value":"/ used to invoke the closure. Before it can be invoked, it must be","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75553,"byte_end":75621,"line_start":349,"line_end":349,"column_start":1,"column_end":69}},{"value":"/ initialized with [`prep_closure`](fn.prep_closure.html) and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75622,"byte_end":75685,"line_start":350,"line_end":350,"column_start":1,"column_end":64}},{"value":"/ [`prep_closure_mut`](fn.prep_closure_mut.html). The closure must be","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75686,"byte_end":75757,"line_start":351,"line_end":351,"column_start":1,"column_end":72}},{"value":"/ deallocated using [`closure_free`](fn.closure_free.html), after","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75758,"byte_end":75825,"line_start":352,"line_end":352,"column_start":1,"column_end":68}},{"value":"/ which point the code pointer should not be used.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75826,"byte_end":75878,"line_start":353,"line_end":353,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75879,"byte_end":75882,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75883,"byte_end":75897,"line_start":355,"line_end":355,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75898,"byte_end":75901,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75902,"byte_end":75909,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/ use libffi::low::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75910,"byte_end":75933,"line_start":358,"line_end":358,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75934,"byte_end":75937,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ let (closure_handle, code_ptr) = closure_alloc();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75938,"byte_end":75991,"line_start":360,"line_end":360,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":75992,"byte_end":75999,"line_start":361,"line_end":361,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":257},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76706,"byte_end":76718,"line_start":389,"line_end":389,"column_start":15,"column_end":27},"name":"closure_free","qualname":"::low::closure_free","value":"fn (closure: *mut ffi_closure) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Frees a closure.","sig":null,"attributes":[{"value":"/ Frees a closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76356,"byte_end":76376,"line_start":371,"line_end":371,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76377,"byte_end":76380,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ Closures allocated with [`closure_alloc`](fn.closure_alloc.html)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76381,"byte_end":76449,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ must be deallocated with `closure_free`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76450,"byte_end":76494,"line_start":374,"line_end":374,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76495,"byte_end":76498,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76499,"byte_end":76513,"line_start":376,"line_end":376,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76514,"byte_end":76517,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76518,"byte_end":76525,"line_start":378,"line_end":378,"column_start":1,"column_end":8}},{"value":"/ use libffi::low::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76526,"byte_end":76549,"line_start":379,"line_end":379,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76550,"byte_end":76553,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ let (closure_handle, code_ptr) = closure_alloc();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76554,"byte_end":76607,"line_start":381,"line_end":381,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76608,"byte_end":76611,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76612,"byte_end":76622,"line_start":383,"line_end":383,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76623,"byte_end":76626,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76627,"byte_end":76639,"line_start":385,"line_end":385,"column_start":1,"column_end":13}},{"value":"/     closure_free(closure_handle);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76640,"byte_end":76677,"line_start":386,"line_end":386,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76678,"byte_end":76683,"line_start":387,"line_end":387,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76684,"byte_end":76691,"line_start":388,"line_end":388,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":258},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77070,"byte_end":77078,"line_start":398,"line_end":398,"column_start":10,"column_end":18},"name":"Callback","qualname":"::low::Callback","value":"unsafe extern \"C\" fn(cif: &ffi_cif, result: &mut R,\n                     args: *const *const c_void, userdata: &U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called by a closure.","sig":null,"attributes":[{"value":"/ The type of function called by a closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76802,"byte_end":76847,"line_start":393,"line_end":393,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76848,"byte_end":76851,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ `U` is the type of the user data captured by the closure and passed","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76852,"byte_end":76923,"line_start":395,"line_end":395,"column_start":1,"column_end":72}},{"value":"/ to the callback, and `R` is the type of the result. The parameters","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76924,"byte_end":76994,"line_start":396,"line_end":396,"column_start":1,"column_end":71}},{"value":"/ are not typed, since they are passed as a C array of `void*`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":76995,"byte_end":77060,"line_start":397,"line_end":397,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":261},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77555,"byte_end":77566,"line_start":409,"line_end":409,"column_start":10,"column_end":21},"name":"CallbackMut","qualname":"::low::CallbackMut","value":"unsafe extern \"C\" fn(cif: &ffi_cif, result: &mut R,\n                     args: *const *const c_void, userdata: &mut U)","parent":null,"children":[],"decl_id":null,"docs":" The type of function called by a mutable closure.","sig":null,"attributes":[{"value":"/ The type of function called by a mutable closure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77279,"byte_end":77332,"line_start":404,"line_end":404,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77333,"byte_end":77336,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ `U` is the type of the user data captured by the closure and passed","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77337,"byte_end":77408,"line_start":406,"line_end":406,"column_start":1,"column_end":72}},{"value":"/ to the callback, and `R` is the type of the result. The parameters","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77409,"byte_end":77479,"line_start":407,"line_end":407,"column_start":1,"column_end":71}},{"value":"/ are not typed, since they are passed as a C array of `void*`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77480,"byte_end":77545,"line_start":408,"line_end":408,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":264},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77843,"byte_end":77854,"line_start":416,"line_end":416,"column_start":10,"column_end":21},"name":"RawCallback","qualname":"::low::RawCallback","value":"unsafe extern \"C\" fn(cif: *mut ffi_cif, result: *mut c_void,\n                     args: *mut *mut c_void, userdata: *mut c_void)","parent":null,"children":[],"decl_id":null,"docs":" The callback type expected by `raw::ffi_prep_closure_loc`.\n","sig":null,"attributes":[{"value":"/ The callback type expected by `raw::ffi_prep_closure_loc`.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":77771,"byte_end":77833,"line_start":415,"line_end":415,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80468,"byte_end":80480,"line_start":496,"line_end":496,"column_start":15,"column_end":27},"name":"prep_closure","qualname":"::low::prep_closure","value":"fn <U, R> (closure: *mut ffi_closure, cif: *mut ffi_cif, callback: Callback<U, R>, userdata: *const U, code: CodePtr) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a closure with a callback function and userdata.","sig":null,"attributes":[{"value":"/ Initializes a closure with a callback function and userdata.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78063,"byte_end":78127,"line_start":422,"line_end":422,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78128,"byte_end":78131,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ After allocating a closure with","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78132,"byte_end":78167,"line_start":424,"line_end":424,"column_start":1,"column_end":36}},{"value":"/ [`closure_alloc`](fn.closure_alloc.html), it needs to be initialized","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78168,"byte_end":78240,"line_start":425,"line_end":425,"column_start":1,"column_end":73}},{"value":"/ with a function `callback` to call and a pointer `userdata` to pass","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78241,"byte_end":78312,"line_start":426,"line_end":426,"column_start":1,"column_end":72}},{"value":"/ to it. Invoking the closure’s code pointer will then pass the provided","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78313,"byte_end":78389,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/ arguments and the user data pointer to the callback.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78390,"byte_end":78446,"line_start":428,"line_end":428,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78447,"byte_end":78450,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ For mutable userdata use [`prep_closure_mut`](fn.prep_closure_mut.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78451,"byte_end":78527,"line_start":430,"line_end":430,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78528,"byte_end":78531,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78532,"byte_end":78544,"line_start":432,"line_end":432,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78545,"byte_end":78548,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ The closure retains a reference to CIF `cif`, so that must","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78549,"byte_end":78611,"line_start":434,"line_end":434,"column_start":1,"column_end":63}},{"value":"/ still be live when the closure is used lest undefined behavior","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78612,"byte_end":78678,"line_start":435,"line_end":435,"column_start":1,"column_end":67}},{"value":"/ result.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78679,"byte_end":78690,"line_start":436,"line_end":436,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78691,"byte_end":78694,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78695,"byte_end":78710,"line_start":438,"line_end":438,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78711,"byte_end":78714,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ - `closure` — the closure to initialize","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78715,"byte_end":78760,"line_start":440,"line_end":440,"column_start":1,"column_end":44}},{"value":"/ - `cif` — the calling convention and types for calling the closure","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78761,"byte_end":78833,"line_start":441,"line_end":441,"column_start":1,"column_end":71}},{"value":"/ - `callback` — the function that the closure will invoke","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78834,"byte_end":78896,"line_start":442,"line_end":442,"column_start":1,"column_end":61}},{"value":"/ - `userdata` — the closed-over value, stored in the closure and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78897,"byte_end":78966,"line_start":443,"line_end":443,"column_start":1,"column_end":68}},{"value":"/    passed to the callback upon invocation","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":78967,"byte_end":79012,"line_start":444,"line_end":444,"column_start":1,"column_end":46}},{"value":"/ - `code` — the closure’s code pointer, *i.e.*, the second component","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79013,"byte_end":79088,"line_start":445,"line_end":445,"column_start":1,"column_end":72}},{"value":"/   returned by [`closure_alloc`](fn.closure_alloc.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79089,"byte_end":79148,"line_start":446,"line_end":446,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79149,"byte_end":79152,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79153,"byte_end":79165,"line_start":448,"line_end":448,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79166,"byte_end":79169,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ `Ok(())` for success or `Err(e)` for failure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79170,"byte_end":79219,"line_start":450,"line_end":450,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79220,"byte_end":79223,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79224,"byte_end":79238,"line_start":452,"line_end":452,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79239,"byte_end":79242,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79243,"byte_end":79250,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/ use libffi::low::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79251,"byte_end":79274,"line_start":455,"line_end":455,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79275,"byte_end":79278,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ use std::mem;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79279,"byte_end":79296,"line_start":457,"line_end":457,"column_start":1,"column_end":18}},{"value":"/ use std::os::raw::c_void;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79297,"byte_end":79326,"line_start":458,"line_end":458,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79327,"byte_end":79330,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ unsafe extern \"C\" fn callback(_cif: &ffi_cif,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79331,"byte_end":79380,"line_start":460,"line_end":460,"column_start":1,"column_end":50}},{"value":"/                               result: &mut u64,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79381,"byte_end":79432,"line_start":461,"line_end":461,"column_start":1,"column_end":52}},{"value":"/                               args: *const *const c_void,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79433,"byte_end":79494,"line_start":462,"line_end":462,"column_start":1,"column_end":62}},{"value":"/                               userdata: &u64)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79495,"byte_end":79544,"line_start":463,"line_end":463,"column_start":1,"column_end":50}},{"value":"/ {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79545,"byte_end":79550,"line_start":464,"line_end":464,"column_start":1,"column_end":6}},{"value":"/     let args: *const &u64 = mem::transmute(args);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79551,"byte_end":79604,"line_start":465,"line_end":465,"column_start":1,"column_end":54}},{"value":"/     *result = **args + *userdata;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79605,"byte_end":79642,"line_start":466,"line_end":466,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79643,"byte_end":79648,"line_start":467,"line_end":467,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79649,"byte_end":79652,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ fn twice(f: extern \"C\" fn(u64) -> u64, x: u64) -> u64 {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79653,"byte_end":79712,"line_start":469,"line_end":469,"column_start":1,"column_end":60}},{"value":"/     f(f(x))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79713,"byte_end":79728,"line_start":470,"line_end":470,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79729,"byte_end":79734,"line_start":471,"line_end":471,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79735,"byte_end":79738,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79739,"byte_end":79751,"line_start":473,"line_end":473,"column_start":1,"column_end":13}},{"value":"/     let mut cif: ffi_cif = Default::default();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79752,"byte_end":79802,"line_start":474,"line_end":474,"column_start":1,"column_end":51}},{"value":"/     let mut args = [&mut types::uint64 as *mut _];","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79803,"byte_end":79857,"line_start":475,"line_end":475,"column_start":1,"column_end":55}},{"value":"/     let mut userdata: u64 = 5;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79858,"byte_end":79892,"line_start":476,"line_end":476,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79893,"byte_end":79896,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/     prep_cif(&mut cif, ffi_abi_FFI_DEFAULT_ABI, 1, &mut types::uint64,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79897,"byte_end":79971,"line_start":478,"line_end":478,"column_start":1,"column_end":75}},{"value":"/              args.as_mut_ptr()).unwrap();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":79972,"byte_end":80017,"line_start":479,"line_end":479,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80018,"byte_end":80021,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/     let (closure, code) = closure_alloc();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80022,"byte_end":80068,"line_start":481,"line_end":481,"column_start":1,"column_end":47}},{"value":"/     let add5: extern \"C\" fn(u64) -> u64 = mem::transmute(code);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80069,"byte_end":80136,"line_start":482,"line_end":482,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80137,"byte_end":80140,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/     prep_closure(closure,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80141,"byte_end":80170,"line_start":484,"line_end":484,"column_start":1,"column_end":30}},{"value":"/                  &mut cif,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80171,"byte_end":80201,"line_start":485,"line_end":485,"column_start":1,"column_end":31}},{"value":"/                  callback,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80202,"byte_end":80232,"line_start":486,"line_end":486,"column_start":1,"column_end":31}},{"value":"/                  &mut userdata,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80233,"byte_end":80268,"line_start":487,"line_end":487,"column_start":1,"column_end":36}},{"value":"/                  CodePtr(add5 as *mut _)).unwrap();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80269,"byte_end":80324,"line_start":488,"line_end":488,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80325,"byte_end":80328,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(11, add5(6));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80329,"byte_end":80361,"line_start":490,"line_end":490,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(12, add5(7));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80362,"byte_end":80394,"line_start":491,"line_end":491,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80395,"byte_end":80398,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(22, twice(add5, 12));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80399,"byte_end":80439,"line_start":493,"line_end":493,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80440,"byte_end":80445,"line_start":494,"line_end":494,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":80446,"byte_end":80453,"line_start":495,"line_end":495,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":268},"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83465,"byte_end":83481,"line_start":588,"line_end":588,"column_start":15,"column_end":31},"name":"prep_closure_mut","qualname":"::low::prep_closure_mut","value":"fn <U, R> (closure: *mut ffi_closure, cif: *mut ffi_cif, callback: CallbackMut<U, R>, userdata: *mut U, code: CodePtr) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a mutable closure with a callback function and (mutable)\n userdata.","sig":null,"attributes":[{"value":"/ Initializes a mutable closure with a callback function and (mutable)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81002,"byte_end":81074,"line_start":512,"line_end":512,"column_start":1,"column_end":73}},{"value":"/ userdata.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81075,"byte_end":81088,"line_start":513,"line_end":513,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81089,"byte_end":81092,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ After allocating a closure with","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81093,"byte_end":81128,"line_start":515,"line_end":515,"column_start":1,"column_end":36}},{"value":"/ [`closure_alloc`](fn.closure_alloc.html), it needs to be initialized","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81129,"byte_end":81201,"line_start":516,"line_end":516,"column_start":1,"column_end":73}},{"value":"/ with a function `callback` to call and a pointer `userdata` to pass","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81202,"byte_end":81273,"line_start":517,"line_end":517,"column_start":1,"column_end":72}},{"value":"/ to it. Invoking the closure’s code pointer will then pass the provided","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81274,"byte_end":81350,"line_start":518,"line_end":518,"column_start":1,"column_end":75}},{"value":"/ arguments and the user data pointer to the callback.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81351,"byte_end":81407,"line_start":519,"line_end":519,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81408,"byte_end":81411,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ For immutable userdata use [`prep_closure`](fn.prep_closure.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81412,"byte_end":81482,"line_start":521,"line_end":521,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81483,"byte_end":81486,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81487,"byte_end":81499,"line_start":523,"line_end":523,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81500,"byte_end":81503,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ The closure retains a reference to CIF `cif`, so that must","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81504,"byte_end":81566,"line_start":525,"line_end":525,"column_start":1,"column_end":63}},{"value":"/ still be live when the closure is used lest undefined behavior","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81567,"byte_end":81633,"line_start":526,"line_end":526,"column_start":1,"column_end":67}},{"value":"/ result.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81634,"byte_end":81645,"line_start":527,"line_end":527,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81646,"byte_end":81649,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81650,"byte_end":81665,"line_start":529,"line_end":529,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81666,"byte_end":81669,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ - `closure` — the closure to initialize","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81670,"byte_end":81715,"line_start":531,"line_end":531,"column_start":1,"column_end":44}},{"value":"/ - `cif` — the calling convention and types for calling the closure","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81716,"byte_end":81788,"line_start":532,"line_end":532,"column_start":1,"column_end":71}},{"value":"/ - `callback` — the function that the closure will invoke","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81789,"byte_end":81851,"line_start":533,"line_end":533,"column_start":1,"column_end":61}},{"value":"/ - `userdata` — the closed-over value, stored in the closure and","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81852,"byte_end":81921,"line_start":534,"line_end":534,"column_start":1,"column_end":68}},{"value":"/    passed to the callback upon invocation","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81922,"byte_end":81967,"line_start":535,"line_end":535,"column_start":1,"column_end":46}},{"value":"/ - `code` — the closure’s code pointer, *i.e.*, the second component","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":81968,"byte_end":82043,"line_start":536,"line_end":536,"column_start":1,"column_end":72}},{"value":"/   returned by [`closure_alloc`](fn.closure_alloc.html).","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82044,"byte_end":82103,"line_start":537,"line_end":537,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82104,"byte_end":82107,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ # Result","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82108,"byte_end":82120,"line_start":539,"line_end":539,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82121,"byte_end":82124,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ `Ok(())` for success or `Err(e)` for failure.","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82125,"byte_end":82174,"line_start":541,"line_end":541,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82175,"byte_end":82178,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82179,"byte_end":82193,"line_start":543,"line_end":543,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82194,"byte_end":82197,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82198,"byte_end":82205,"line_start":545,"line_end":545,"column_start":1,"column_end":8}},{"value":"/ use libffi::low::*;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82206,"byte_end":82229,"line_start":546,"line_end":546,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82230,"byte_end":82233,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ use std::mem;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82234,"byte_end":82251,"line_start":548,"line_end":548,"column_start":1,"column_end":18}},{"value":"/ use std::os::raw::c_void;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82252,"byte_end":82281,"line_start":549,"line_end":549,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82282,"byte_end":82285,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ unsafe extern \"C\" fn callback(_cif: &ffi_cif,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82286,"byte_end":82335,"line_start":551,"line_end":551,"column_start":1,"column_end":50}},{"value":"/                               result: &mut u64,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82336,"byte_end":82387,"line_start":552,"line_end":552,"column_start":1,"column_end":52}},{"value":"/                               args: *const *const c_void,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82388,"byte_end":82449,"line_start":553,"line_end":553,"column_start":1,"column_end":62}},{"value":"/                               userdata: &mut u64)","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82450,"byte_end":82503,"line_start":554,"line_end":554,"column_start":1,"column_end":54}},{"value":"/ {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82504,"byte_end":82509,"line_start":555,"line_end":555,"column_start":1,"column_end":6}},{"value":"/     let args: *const &u64 = mem::transmute(args);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82510,"byte_end":82563,"line_start":556,"line_end":556,"column_start":1,"column_end":54}},{"value":"/     *result = *userdata;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82564,"byte_end":82592,"line_start":557,"line_end":557,"column_start":1,"column_end":29}},{"value":"/     *userdata += **args;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82593,"byte_end":82621,"line_start":558,"line_end":558,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82622,"byte_end":82627,"line_start":559,"line_end":559,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82628,"byte_end":82631,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ fn twice(f: extern \"C\" fn(u64) -> u64, x: u64) -> u64 {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82632,"byte_end":82691,"line_start":561,"line_end":561,"column_start":1,"column_end":60}},{"value":"/     f(f(x))","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82692,"byte_end":82707,"line_start":562,"line_end":562,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82708,"byte_end":82713,"line_start":563,"line_end":563,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82714,"byte_end":82717,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82718,"byte_end":82730,"line_start":565,"line_end":565,"column_start":1,"column_end":13}},{"value":"/     let mut cif: ffi_cif = Default::default();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82731,"byte_end":82781,"line_start":566,"line_end":566,"column_start":1,"column_end":51}},{"value":"/     let mut args = [&mut types::uint64 as *mut _];","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82782,"byte_end":82836,"line_start":567,"line_end":567,"column_start":1,"column_end":55}},{"value":"/     let mut userdata: u64 = 5;","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82837,"byte_end":82871,"line_start":568,"line_end":568,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82872,"byte_end":82875,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/     prep_cif(&mut cif, ffi_abi_FFI_DEFAULT_ABI, 1, &mut types::uint64,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82876,"byte_end":82950,"line_start":570,"line_end":570,"column_start":1,"column_end":75}},{"value":"/              args.as_mut_ptr()).unwrap();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82951,"byte_end":82996,"line_start":571,"line_end":571,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":82997,"byte_end":83000,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/     let (closure, code) = closure_alloc();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83001,"byte_end":83047,"line_start":573,"line_end":573,"column_start":1,"column_end":47}},{"value":"/     let add5: extern \"C\" fn(u64) -> u64 = mem::transmute(code);","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83048,"byte_end":83115,"line_start":574,"line_end":574,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83116,"byte_end":83119,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/     prep_closure_mut(closure,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83120,"byte_end":83153,"line_start":576,"line_end":576,"column_start":1,"column_end":34}},{"value":"/                      &mut cif,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83154,"byte_end":83188,"line_start":577,"line_end":577,"column_start":1,"column_end":35}},{"value":"/                      callback,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83189,"byte_end":83223,"line_start":578,"line_end":578,"column_start":1,"column_end":35}},{"value":"/                      &mut userdata,","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83224,"byte_end":83263,"line_start":579,"line_end":579,"column_start":1,"column_end":40}},{"value":"/                      CodePtr(add5 as *mut _)).unwrap();","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83264,"byte_end":83323,"line_start":580,"line_end":580,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83324,"byte_end":83327,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, add5(6));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83328,"byte_end":83359,"line_start":582,"line_end":582,"column_start":1,"column_end":32}},{"value":"/     assert_eq!(11, add5(7));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83360,"byte_end":83392,"line_start":583,"line_end":583,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83393,"byte_end":83396,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(19, twice(add5, 1));","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83397,"byte_end":83436,"line_start":585,"line_end":585,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83437,"byte_end":83442,"line_start":586,"line_end":586,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":83443,"byte_end":83450,"line_start":587,"line_end":587,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24125,"byte_end":24129,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28461,"byte_end":28464,"line_start":40,"line_end":40,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/util.rs","byte_start":45861,"byte_end":45867,"line_start":9,"line_end":9,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/util.rs","byte_start":45978,"byte_end":45984,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47736,"byte_end":47740,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47904,"byte_end":47913,"line_start":70,"line_end":70,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":50998,"byte_end":51002,"line_start":175,"line_end":175,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":51098,"byte_end":51107,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":51210,"byte_end":51214,"line_start":187,"line_end":187,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":51333,"byte_end":51342,"line_start":193,"line_end":193,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52074,"byte_end":52078,"line_start":225,"line_end":225,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57692,"byte_end":57701,"line_start":425,"line_end":425,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60834,"byte_end":60841,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60908,"byte_end":60915,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32049,"byte_end":32052,"line_start":39,"line_end":39,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33759,"byte_end":33762,"line_start":94,"line_end":94,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34082,"byte_end":34085,"line_start":109,"line_end":109,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38602,"byte_end":38609,"line_start":242,"line_end":242,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38729,"byte_end":38736,"line_start":250,"line_end":250,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41728,"byte_end":41739,"line_start":351,"line_end":351,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41851,"byte_end":41862,"line_start":359,"line_end":359,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65362,"byte_end":65369,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3418,"byte_end":3422,"line_start":99,"line_end":99,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6005,"byte_end":6010,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/mod.rs","byte_start":6070,"byte_end":6074,"line_start":77,"line_end":77,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":31}},{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3432,"byte_end":3438,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":48}},{"kind":"Mod","span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/lib.rs","byte_start":3448,"byte_end":3451,"line_start":101,"line_end":101,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":209}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24125,"byte_end":24129,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/types.rs","byte_start":24810,"byte_end":24814,"line_start":41,"line_end":41,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1914},"to":{"krate":0,"index":19}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/high/call.rs","byte_start":28461,"byte_end":28464,"line_start":40,"line_end":40,"column_start":10,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/util.rs","byte_start":45861,"byte_end":45867,"line_start":9,"line_end":9,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/util.rs","byte_start":45978,"byte_end":45984,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47736,"byte_end":47740,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":47904,"byte_end":47913,"line_start":70,"line_end":70,"column_start":21,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":50998,"byte_end":51002,"line_start":175,"line_end":175,"column_start":15,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":51098,"byte_end":51107,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":51210,"byte_end":51214,"line_start":187,"line_end":187,"column_start":16,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":51333,"byte_end":51342,"line_start":193,"line_end":193,"column_start":16,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":52074,"byte_end":52078,"line_start":225,"line_end":225,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/types.rs","byte_start":57692,"byte_end":57701,"line_start":425,"line_end":425,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60834,"byte_end":60841,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2996},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/builder.rs","byte_start":60908,"byte_end":60915,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":32049,"byte_end":32052,"line_start":39,"line_end":39,"column_start":6,"column_end":9},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":33759,"byte_end":33762,"line_start":94,"line_end":94,"column_start":16,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":34082,"byte_end":34085,"line_start":109,"line_end":109,"column_start":6,"column_end":9},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38602,"byte_end":38609,"line_start":242,"line_end":242,"column_start":19,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":38729,"byte_end":38736,"line_start":250,"line_end":250,"column_start":10,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41728,"byte_end":41739,"line_start":351,"line_end":351,"column_start":15,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3026},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/middle/mod.rs","byte_start":41851,"byte_end":41862,"line_start":359,"line_end":359,"column_start":6,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/doraneko94/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-0.6.4/src/low.rs","byte_start":65362,"byte_end":65369,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3056},"to":{"krate":4294967295,"index":4294967295}}]}